{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASA;AACA;AACA;AACA;AACA;;;AAIA;AAAmD;AAC/CA,qEAAmB,CAAnB;AACJ;AAAA;;AACA;;UACAC;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AACA;;;;;;AAEAA;AAAyD,yCAAgCD,gEAAyBA,qDAAzB,CAAhC;AAA0E,OAAnI;;AACAC,yCAAmCD,gEAAwB;AAAGE,4BAAH;AAAGC,8CAAH;AAAGC;AAAH,OAAxB,CAAnC;AACA;;AACAH;AAAA,gBACA;AAAMC,gBAAMF;AAAZ,SADA;AAAA;;AAGA;AAAe,2DAAmDA,gEAAwBC,cAAxB,EAAwB;AAC1FC,gBAAcF,oDAD4E;AAE1FK;AACAC,uCADA;AAEAC;AACA;AADA;AAFA;AAF0F,UAAxB,EAQ7D;AAAiB;AAAUL,kBAAMF;AAAhB;AAAuC,SARK,EAQL,IARK,CAAnD;AAQwD,OARvE;;AASA,UAAI,KAAJ,EAAW,CAMV;AAED;AACA;AACA;AACA;AACA;;;UACAQ;AACA;AACA;AACA;AACA;AAAA;AAAAC;AAAA;;AACA;AACA;;AAEAD;AAAuD,wCAA+BR,gEAAyBA,sDAAzB,CAA/B;AAA0E,OAAjI;;AACAQ,wCAAkCR,gEAAwB;AAAGE,2BAAH;AAAGC;AAAH,OAAxB,CAAlC;AACA;;AACAK;AAAA,gBACA;AAAMN,gBAAMF;AAAZ,SADA;AAAA;;AAGA;AAAe,2DAAmDA,gEAAwBQ,aAAxB,EAAwB;AAC1FN,gBAAcF,oDAD4E;AAE1FK;AACAC;AADA;AAF0F,UAAxB,EAK7D;AAAiB;AAAUJ,kBAAMF;AAAhB;AAAwC,SALI,EAKJ,IALI,CAAnD;AAKyD,OALxE;;AAMA,UAAI,KAAJ,EAAW,CAMV;AAED;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;;UACAU;;;;AAEA,UAAI,KAAJ,EAAW,CAqBV;AACD;AACA;AACA;AACA;;;AACA;AACAC,wBADA;AAEAC,oBAFA;AAGAC,oBAHA;AAIAC;AAJA;AAMA;AACA;AACA;AACA;;AACA,wCAAmCd,yDAAnC,CAAiD,wBAAjD;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACA;;AACA,UAAI,KAAJ,EAAW,CAcV;;UACDe;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA,6BAAyB,8EAAqBC,KAArB,CAAzB;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA,6BAAyB,8EAAqBA,KAArB,CAAzB;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA,sCAAkC,8EAAqBA,KAArB,CAAlC;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA,gCAA4B,8EAAqBA,KAArB,CAA5B;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;;;;AAEAD;AAA6C,mCAA0Bf,gEAAyB;AAAU;AAC1G;AACA;AAAA;AAAA;AAAA,SAFgG,CAAzB,CAA1B,EAELA,gEAAwBiB,uBAAxB,EAAwB,CAAxB,CAFK;AAEmB,OAFhE;;AAGAF,mCAA6Bf,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;AACA,gCAA8BC,yCAA9B;AACA;AACA;AACA;AACA;AACA;;AACA,qCAAmC9C,uDAAnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA,2BAAuB,8EAAqBgB,KAArB,CAAvB;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA;AACA,2BAAyB,6EAAoB+B,KAApB,CAAzB;;AACA;AACA;AACA;AACA;AACA;;AACA,sGACAC,0EADA,GACA;AACA;AACA;AACA,aATA,MAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AAAA;AAAsFC,qBAAtF;AACA;AACA;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA,mCAA+BC,8DAA/B,CAA8C,gBAA9C,EACAC,QADA,GAEAC,uBAFA,CAEA,gCAFA;AAGA;AAAA;AAAqC,4BAArC,GAA+D,2CAA/D,EACAC,IADA,CACkB,2DAAS,uBAAT,CADlB,EACsD,2DAAS,eAAT,CADtD,EAEAC,SAFA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA,aANA;;AAOA;;AACA,oCAAgC,2DAAS,eAAT,CAAhC,EAAyCA,SAAzC;AAAyC;AACzC;AACA;AACA;AACA;AACA;AACA;AACS,aAPT;AAQA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA,aAJA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,4CAAiC,aAAjC,cAAkDC,CAAlD;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,8CAAmC,aAAnC,cAAoDA,CAApD;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;;AACA;;AACA,6GACA,mDADA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA,aAFA,MAGA;AACA;AACA,aAFA,MAGA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACAC,qCADA;AAEAC,0DAFA;AAGAC,gDAHA;AAIAC;AAJA,eAHA,CASA;AACA;AACA;AACA;;AACA,+EACA,2CADA;AAEA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,8BAA4B,uEAAcC,KAAd,CAA5B;AACA;;AACA;AACA;;AACA;;AACA,oEACAC,YAAyBC,wDAAzB,IAA8BD,YAAgBC,wDAD9C,GACmD;AACnD;AACAF;AACA,aAJA,MAKA,gBAA6BE,uDAA7B,EAAiC;AACjCC;AACAH;AACA,aAHA,MAIA,gBAA6BE,sDAA7B,EAAgC;AAChCC;AACAH;AACA,aAHA,MAIA;AACAG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACAC;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACa,eAVb;AAWA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;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;AACA;AACA;;AACA;AACAwF,iBAAaC,6DADb;AAEAC,qBAAiB;AAAU;AAC3B;AACA;AACA;AAAA;AAAA,SAHiB,CAFjB;AAMAC;AANA;AAQA;;AACA;AACA;AACAC,eAFA;;AAGA;AACAC,kBAJA;;AAKA;AACAC,oBANA;;AAOA;AACAC;AARA;AAUA;AACA;AACA;;UACAC;;;;AAEA,UAAI,KAAJ,EAAW,CAWV,EACD;;AACA;AACA;AACA;;;UACAC;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;;AAEA,UAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,kCAA8B,uEAAc,oEAAW,4EAAmB,uEAAaA,eAAb,CAAnB,CAAX,CAAd,CAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAC;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA,oDAAyC,cAAzC;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,8BAA0BlG,uDAA1B;AACA;AACA;AACA;;AACA,2CAAuCA,uDAAvC;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA,uBAAiB,CAHjB;;AAIA;AACA;AAAA;AAAA;;AACA;AAAA;AACA;AACA;AACA,uBAAiB,CAHjB;;AAIA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAmG;AAAA;AACA;AACA;AACA;AACA;;AACAC;AACiB,eANjB;AAOA;AACS,WAnBT,EA5DA,CAgFA;;;AACA;AAjFA;AAkFA;AACA;AACA;AACA;AACA;;;;;eACA;AAAoB,6BAAU,yBAAV;AAAoC;AACxD;AACA;AACA;AACA;;;;eACA;AAAqB;AAAA;AACrB;AACA;AACA;AACA;;eACA;AAA0B,6BAAiB,8EAAqBpF,KAArB,CAAjB;AAAsC;AAChE;AACA;AACA;;;;iBACA;AACA;AACA,YACA;;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAAoB;AAAA;AACpB;AACA;AACA;AACA;;eACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAAqB;AAAA;AACrB;AACA;AACA;AACA;;eACA;AACA;AACA,2BAAyB,8EAAqBA,KAArB,CAAzB;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAA0B;AAAA;AAC1B;AACA;AACA;AACA;;eACA;AACA;AACA;AACA,kCAA8B,8EAAqBA,KAArB,CAA9B;;AACA;AACA;AACA;AAAA;AAAA;AACA,eAFA,MAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,YACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,YACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,YACA;;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AACA;AACAqF;AACA;;AACA;AACA;;AACA;AACAA,iEADA,CAEA;;AACA;;AACA;;AACA;AAAA;AACA;AACA;AACA;AACAC;AAAA;AACA;AACA;AACA;AACAD;AACiB,iBALjB,EAKiB,IALjB;AAMa,eAVb;AAWA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACAzC;AACAA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,oCARA,CASA;;AACA;AACA;AACA;AACAuC;AAAA;AACA;AACA;AACA;AACA;;AACA;AACiB,iBANjB;AAOA;;AACA;;AACA;AAAA;AAAA;AAAA;AAAA,gBAZA,CAaA;AACA;AACA;;;AACA;AACA,aAjBA,MAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACAvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;;;AACA;;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA2C;AACA,iBAFA,MAGA;AAAA;AAAA;AACAA;AACA,iBAFA,MAGA;AACA;AACA;;AACA;;AACA;AAAA;AAAA;AACAA;AAAA;AAAA,kBACA,mBADA,GACA,yBADA;AAEA;;AACA;AAAA;AAAA;AACAA;AAAA;AAAA,kBACA,mBADA,GACA,uBADA;AAEA;;AACA;AAAA;AAAA;AACAA;AAAA;AAAA,kBACA,uBADA,GACA,yBADA;AAEA;AAzBA;;AA2BA,+CAAoCA,UAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACAC;AACA;AACA;;;;QAraAC;;AAuaAP;AAAqD,uCAA8BlG,gEAAyBA,qDAAzB,CAA9B,EAA2EA,gEAAyBA,4DAAzB,CAA3E,EAA+HA,gEAAyB0G,2DAAzB,CAA/H,EAA8K1G,gEAAyBA,iDAAzB,CAA9K,EAAuNA,gEAAwB,UAAxB,CAAvN,EAA6PA,gEAAwB2G,0BAAxB,EAAwB,CAAxB,CAA7P,EAAqT3G,gEAAyB4G,uFAAzB,EAA8C,CAA9C,CAArT,EAAy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;AACD;AACA;AACA;AACA;;;UACAC;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA,+BADA,CAEA;AACA;;AACA;AAAA;AAA8BC,YAA9B,CAA8BC,QAA9B,EAA8B;AAC9B;AAAA;AAA6CD,cAA7C;AACA,SAFA,MAGA;AACA;AAAA;AAAsCA,cAAtC;AACA;AACA;;AAEA,UAAI,KAAJ,EAAW,CAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;;UACAE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;iBACA;AACA;AAAA;AAA8B,kBAA9B,CAA8BC,qBAA9B,CAA8B,EAA9B,EAA8BP,QAA9B,EAA8BC,GAA9B,EAA8BO,OAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AAAA;AAA8B,kBAA9B,CAA8BC,4BAA9B,CAA8B,EAA9B,EAA8BT,QAA9B,EAA8BE,OAA9B,EAA8BM,OAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AAAA;AAA8B,kBAA9B,CAA8BE,iBAA9B,CAA8BC,SAA9B,EAA8BX,QAA9B,EAA8B,+BAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AAAA;AAAgD,gBAAhD,CAAgDY,UAAhD,CAAgDC,QAAhD,CAA+ErJ,+DAA/E,EAAmG0I,OAAnG;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAA0C,gBAA1C,CAA0CY,8BAA1C,CAA0CC,gBAA1C,EAA0CP,OAA1C;;AACA;AAAA;AAA8B,kBAA9B,CAA8BE,iBAA9B,CAA8BC,SAA9B,EAA8BX,QAA9B,EAA8B,sCAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AAAA;AAA8B,kBAA9B,CAA8BgB,wBAA9B,CAA8B,EAA9B,EAA8Bf,GAA9B,EAA8BO,OAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AAAA;AAA8B,kBAA9B,CAA8BS,+BAA9B,CAA8B,EAA9B,EAA8Bf,OAA9B,EAA8BM,OAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AAAA;AAA8B,kBAA9B,CAA8BU,oBAA9B,CAA8BP,SAA9B,EAA8B,+BAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AAAA;AAAgD,gBAAhD,CAAgDC,UAAhD,CAAgDC,QAAhD,CAA+ErJ,+DAA/E,EAAmG0I,OAAnG;;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAA0C,gBAA1C,CAA0CiB,qBAA1C,CAA0CJ,gBAA1C;;AACA;AAAA;AAA8B,kBAA9B,CAA8BG,oBAA9B,CAA8BP,SAA9B,EAA8B,sCAA9B;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AAAuB,gBAAvB,CAAuBS,sBAAvB,CAAuBC,GAAvB,CAAuBC,KAAvB,EAAuBC,SAAvB;;AACA;AAAA;AAA8B;AAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AAAuB,gBAAvB,CAAuBC,oBAAvB,GAAuBD,SAAvB;AACA;AAAA;AAA8B;AAA9B;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA,+CAA6C/J,uEAA7C,EAAyEiK,OAAzE;;AACA;AACA;AACA;AACA;;;AACA;;AACA;AACA,qBAAmB,0CAAEC,oBAAF,CAAnB;AACA;;AACA,gFAA4E;AAAG;AAC/E;AACA;AACA;AACA;AAAA;AAAA;AAAyDzB,iBAAzD,EAAyD0B,GAAzD;AAAA,aAJ4E,CAA5E,EAI4E;AAAG;AAC/E;AACA;AACA;AACA;AAAA;AAAA,aAJ4E,CAJ5E;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA,aARA,CASA;;AACA;;;AACA;;AACA;AACA;AACA;;AACA,mBAAe,kDAAUC,iCAAV,CAAf;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,qBAAmB,0CAAEF,2BAAF,CAAnB;AACA,aAHA,MAIA;AACA;AACA,8DAA4D;AAAG;AAC/D;AACA;AACA;AACA;AAAA;AAAA,eAJ4D,CAA5D,EAI8C;AAAG;AACjD;AACA;AACA;AACA;AAAA;AAAA,eAJ8C,CAJ9C;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA,qBAAmB,0CAAEG,SAAF,CAAnB;AACA,aAVA,CAWA;AACA;;AACA;;;AACA,sDACAC,MADA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA,aALA,EAMAC,GANA;AAMA;AACA;AACA;AACA;AACA;AACA,0EAAsE;AAAU;AAChF;AACA;AACA;AACA;AACA;AACA,qDAAqDvK,uEAArD,EAAiFwK,iBAAjF,EAFA,CAGA;AACA;;AACA;;;AACA,mEAA8D/B,GAA9D,sBAA6EgC,WAA7E,EANA,CAOA;;AACA;AACA;AACA,iBAFA,MAGA;AACAC;AACA;;AACA,uBAAuB,0CAAE,IAAF,CAAvB;AACa,eAnByD,CAAtE;AAoBS,aA/BT,EAdA,CA8CA;AACA;;AACA,mBAAe,gDAAQC,oBAAR,EAAQtH,IAAR,CAAoC;AAAG;AACtD;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACS,aAV0C,CAApC,CAAf;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,oDAAgDE,MAAhD,EAAwDA,GAAxD,EAAwD;AACxD;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA,8CACAF,IADA,CACkB;AAAG;AACrB;AACA;AACA;AACA;AAAA;AAAA,aAJkB,CADlB;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA,qBAAmB,0CAAEuH,iBAAF,CAAnB;AACA;;AACA,mDAA+C;AAAG;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACAA;AACA;;AACA;AACS,aAXsC,CAA/C;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACA,mEAAyDpC,QAAzD;;AACA;AACA;AACA,aAPA,CAQA;AACA;;AACA;;;AACA;AAAA;AAA2CqC,sCAA3C;AACAC,8CAZA,CAaA;AACA;;AACA;AACA;AAAA;AAAyDA,yBAAzD,EAAyD9B,OAAzD;AACA,aAjBA,CAkBA;AACA;AACA;;;AACA;AACA;AACA,aAvBA,CAwBA;AACA;AACA;AACA;AACA;;AACA;;;AACA,gEA9BA,CA+BA;;;AACAmB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACAY;AACA;;AACA;AAAA;AAAmCA,oCAAnC;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;;AACA,gD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,IAAqB,IAAQA,mDAAR,EAArB,EAAqC8I,gBAArC,CADA,EAEA,KAAa9I,mDAAb,IAAyBuL,4DAAzB,CAFA,EAGQC,oEAHR,EAIA,KAAaxL,mDAAb,IAAyBA,uDAAzB,CAJA,EAKA,KAAaA,mDAAb;AAAqB;AAAuByL,8DAA5C,CALA,CAHA;AAUAG;AAVA;AAYA;AACA;AACA;AACA;AACA;;AACA;AACA;AAAA;AAA0BzB;AAA1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACA0B;AACA;AACA;AACA;AACA;AAAA;;AACA;AACA;;AAEA,UAAI,KAAJ,EAAW,CAGV;AACD;;;AACA,8BAA0B,qEAAUA,WAAV,CAA1B;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,mCAA8B7L,yDAA9B,CAA4C,mBAA5C,EAA4C;AAC5CoF,0BAD4C;AAE5CC;AAF4C,OAA5C;AAIA;AACA;AACA;AACA;AACA;;;AACA;;AACA,UAAI,KAAJ,EAAW,CAGV;AACD;AACA;AACA;AACA;;;AACA;AACA;AACA,wBAAsB,uDAAOoG,sDAAP,CAAtB;AACA;;;AACA;;AACA;AACA;AACA;AACAK;AAAA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAQA;AACA;AACA;AACA;AACA;;;AACA,+BACA,WADA,EAEA,eAFA,EAGA,KAHA,EAIA,QAJA,EAKA,MALA,EAMA,QANA,EAOA,QAPA,EAQA,cARA,EASA,YATA,EAUA,YAVA,EAWA,MAXA,EAYA,QAZA;;AAcA;AAAA;AACA;AACA;AACA;AACA,eAJAC,EAIA;AAAA,0BAAYC,IAAZ;AAAA,OAJA;AAKA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UACAC;;;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,qCAAiCC,qDAAjC,CATA,CAUA;AACA;;AACA;AACAC;AACA;;AAdA;AAeA;AACA;AACA;AACA;AACA;AACA;;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA,2BAAuB,+EAAqBC,MAArB,CAAvB;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAAoB;AAAA;AACpB;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAAqB;AAAA;AACrB;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;AACA;;AACA;AACA;AAAA;AAA2C;;AAC3C;AAAA;AAAA;AAA0CC;AAA1C;;AACA;AAAA,2DAAwD7D,QAAxD;AAHA;AAKA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;;AACA;AACA;;AACA;AACA;;AACA;AACA;AAAA;AAAA;AAAA;;AACA,iGACAnF,IADA,CAC0B,uDAAI,CAAJ,CAD1B,EAEAC,SAFA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA,iBANA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAkE6F,SAAlE,cAA+EX,QAA/E,eAA4FiC,WAA5F,EAFA,CAGA;;AACA;AACA;AACA,mBAFA,MAGA;AACAC;AACA;AACiB,iBApBjB;AAqBA,eAvBA,MAwBA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACA;AACA,yDAFA,CAGA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,oCADA,CAEA;AACA;AACA;;AACA;;;AACA;AAAA;AAAyCP,yCAAzC;;AACA,4BAAwB5G,oBAAxB,EAA8CA,GAA9C,EAA8C;AAC9C+I;AACA,aATA,CAUA;AACA;;;AACA;AACA;AACA;;AACA;;AACA;;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA,aAPA,CAQA;AACA;;;AACA;AACA;AACA,+DAFA,CAGA;AACA;;AACA;AACAC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA,8CACA,sDADA,GAEA,2CAFA;;AAGA;AACA;AACAC;AACA;;AACA;AACAA;AACA;;AACA;AACA;;AACA;AACA;AACAA;AACA;;AACA;AACAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACAC;AAAA;AACA;AACA;AACA;AACA;AACA;AACAC;AAAA;AACA;AACA;AACA;AACA;AACArG,iEAA4DsG,IAA5D,cAAoEX,UAApE;AACiB,iBANjB;AAOa,eAbb;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA,kEACA,iDADA;;AAJA,uCAMAzI,CANA;AAOAqJ;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;;AACA;AACA;AACA;;AACA;AACA5B;AACAyB;AACA;;AACA;AAAmCzB,4BAAnC,CAAmC6B,IAAnC,CAAmC;AAAwBzF,8BAAxB;AAAwBpG;AAAxB,mBAAnC;AACA;AACa,eApBb;AAPA;;AAMA,4BAAwBuC,8BAAxB,EAAwDA,GAAxD,EAAwD;AAAA,oBAAxDA,CAAwD;AAsBxD;A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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_0__","CdkStepHeader","type","selectors","hostAttrs","args","selector","host","CdkStepLabel","template","StepperSelectionEvent","NUMBER","EDIT","DONE","ERROR","CdkStep","value","STEPPER_GLOBAL_OPTIONS","contentQueries","dirIndex","_t","ctx","viewQuery","inputs","editable","optional","completed","hasError","stepControl","label","errorMessage","ariaLabel","ariaLabelledby","state","exportAs","features","ngContentSelectors","decls","vars","CdkStep_ng_template_0_Template","encapsulation","changeDetection","decorators","stepLabel","content","CdkStepper","rxjs__WEBPACK_IMPORTED_MODULE_2__","index","newIndex","undefined","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_3__","withWrap","withVerticalOrientation","pipe","subscribe","i","selectedIndex","previouslySelectedIndex","selectedStep","previouslySelectedStep","event","keyCode","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_7__","manager","steps","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__","_angular_common__WEBPACK_IMPORTED_MODULE_9__","linear","selected","outputs","selectionChange","_steps","descendants","_stepHeader","CdkStepperNext","hostVars","hostBindings","_handleClick","CdkStepperPrevious","CdkStepperModule","imports","exports","declarations","enterDuration","providedIn","factory","color","clickAction","provide","_angular_forms__WEBPACK_IMPORTED_MODULE_1__","useExisting","multi","Init","Checked","Unchecked","Indeterminate","MatCheckboxChange","MatCheckboxBase","MatCheckbox","Promise","_changeDetectorRef","element","setTimeout","animSuffix","nativeCheckbox","_MatCheckboxMixinBase","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__","MAT_CHECKBOX_CLICK_ACTION","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_5__","MAT_CHECKBOX_DEFAULT_OPTIONS","_c0","_angular_material_core__WEBPACK_IMPORTED_MODULE_2__","disableRipple","tabIndex","id","labelPosition","name","required","checked","disabled","indeterminate","change","indeterminateChange","consts","_r0","_c1","directives","_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_6__","styles","_inputElement","ripple","providers","MatCheckboxRequiredValidator","t","_MatCheckboxRequiredValidatorModule","MatCheckboxModule","iconName","url","literal","SvgIconConfig","data","nodeName","MatIconRegistry","addSvgIconInNamespace","options","addSvgIconLiteralInNamespace","_addSvgIconConfig","namespace","_sanitizer","sanitize","_createSvgElementForSingleIcon","sanitizedLiteral","addSvgIconSetInNamespace","addSvgIconSetLiteralInNamespace","_addSvgIconSetConfig","_svgElementFromString","_fontCssClassesByAlias","set","alias","className","_defaultFontSetClass","safeUrl","cloneSvg","svg","getMatIconNameNotFoundError","namedIcon","filter","map","iconSetConfig","err","console","iconSetFetchRequests","config","iconSource","iconElement","div","attributes","responseType","_svgIconConfigs","iconKey","_iconSetConfigs","get","configNamespace","_angular_common_http__WEBPACK_IMPORTED_MODULE_9__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__","_angular_common__WEBPACK_IMPORTED_MODULE_11__","token","deps","useFactory","MatIconBase","getPathname","ɵ0","attr","MatIcon","rxjs__WEBPACK_IMPORTED_MODULE_13__","elementRef","inline","parts","styleTags","layoutElement","elem","elements","attrs","path","funcIriAttributes","push","_MatIconMixinBase","MAT_ICON_LOCATION","fontSet","fontIcon","svgIcon","MatIconModule","_angular_material_core__WEBPACK_IMPORTED_MODULE_12__","ctx_r0","ctx_r6","ctx_r7","MatStepHeader_ng_container_4_span_1_Template","MatStepHeader_ng_container_4_mat_icon_2_Template","ctx_r1","ctx_r2","ctx_r3","ctx_r4","ctx_r5","_r7","MatHorizontalStepper_ng_container_1_div_2_Template","i_r3","step_r2","_r12","step_r9","_r5","i_r2","step_r1","MatStepLabel","_angular_cdk_stepper__WEBPACK_IMPORTED_MODULE_1__","MatStepperIntl","MatStepHeader","_focusMonitor","active","iconOverrides","MatStepHeader_ng_container_3_Template","MatStepHeader_ng_container_4_Template","MatStepHeader_ng_container_6_Template","MatStepHeader_div_7_Template","MatStepHeader_div_8_Template","MatStepHeader_div_9_Template","_angular_material_core__WEBPACK_IMPORTED_MODULE_4__","_angular_common__WEBPACK_IMPORTED_MODULE_5__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_6__","horizontalStepTransition","transform","visibility","verticalStepTransition","height","MatStepperIcon","MatStep","MatStep_ng_template_0_Template","MatStepper","templateRef","animationDone","_icons","MatHorizontalStepper","MatHorizontalStepper_ng_container_1_Template","MatHorizontalStepper_div_3_Template","animation","animations","MatVerticalStepper","_document","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_10__","MatVerticalStepper_div_0_Template","MatStepperNext","MatStepperPrevious","MatStepperModule","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_11__","_angular_material_button__WEBPACK_IMPORTED_MODULE_12__","FacetingSandingPopupService","_matDialog","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_0__","faceting","sanding","observer","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__","subs","sink","$openSelectPopup","open","_faceting_sanding_popup_component__WEBPACK_IMPORTED_MODULE_1__","afterClosed","next","complete","error","_angular_core__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_6__","FacetingSandingPopupComponent","dialogRef","cdRef","selectionComponentService","facetingData","sandingData","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_2__","detectChanges","close","entities","faces","openDialog","f","oid","_a","uom","pricePerUom","cashRegisterNumber","thumbnailUrl","src_app_shared_constants__WEBPACK_IMPORTED_MODULE_1__","sands","s","unsubscribe","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_7__","_features_selection_popup_selection_component_service__WEBPACK_IMPORTED_MODULE_0__","FacetingSandingPopupModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_0__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__","src_app_shared_modules_icons_module__WEBPACK_IMPORTED_MODULE_2__","routes","component","_framing_component__WEBPACK_IMPORTED_MODULE_0__","FramingRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_17__","_r3","FramingComponent","route","_activeRoute","selectPopUp","glassStoreService","passpartuColorStoreService","frameStoreService","mirrorStoreService","draftInvoicesStoreService","itemAmountCalcService","facetingSandingPopupService","keyboardNumericComponentService","translateService","appSettingsService","globalService","keyboardAlphabetComponentService","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_6__","count","itemTitle","dimensions","width","src_app_shared_enums_uom_enum__WEBPACK_IMPORTED_MODULE_5__","selectedFrames","amount","rxjs__WEBPACK_IMPORTED_MODULE_18__","$isOutterDimension","asObservable","dimensionsInputAttributeForm","invoiceItem","instant","settings","currency","formatSettings","currencyDisplayValue","invoiceOid","snapshot","paramMap","draftInvoices","invoices","inv","isEdit","invoiceItems","ii","outter","initializeForm","getValue","passpartu","selectPasspartuWidth","_angular_forms__WEBPACK_IMPORTED_MODULE_19__","isOutterDimension","_b","_c","_d","addControl","removeControl","selectGlass","glasses","selectGlassPopUp","glass","src_app_shared_constants__WEBPACK_IMPORTED_MODULE_4__","g","mirror","selectPasspartu","passpartues","selectPasspartuPopUp","passInputWidth","parseFloat","widthUom","showBasicAlert","src_app_shared_components_me_basic_alert_me_basic_alert_interface__WEBPACK_IMPORTED_MODULE_3__","selectMirror","mirrors","selectMirrorPopUp","openFacetingAndSandingSelectPopup","facetingAndSandingPopup","addNewFrameToInvoice","frames","code","length","c","substring","colorCode","log","frame","find","addNewFrameToInvoiceItem","splice","navigate","outterWidth","outterHeight","getInvoiceItemAmount","editDraftInvoiceItem","newOid","addNewInvoiceItem","changeObj","markAllAsTouched","insertCount","setValue","insertWidth","nextOperation","insertHeight","insertOutterHeight","_invoice_item_amount_calculator_service__WEBPACK_IMPORTED_MODULE_8__","_faceting_sanding_selection_popup_faceting_sanding_popup_component_service__WEBPACK_IMPORTED_MODULE_7__","src_app_shared_components_keyboard_numeric_keyboard_numeric_component_service__WEBPACK_IMPORTED_MODULE_2__","src_app_shared_components_keyboard_alphabet_keyboard_alphabet_component_service__WEBPACK_IMPORTED_MODULE_1__","FramingModule","_framing_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_material_stepper__WEBPACK_IMPORTED_MODULE_10__","_angular_forms__WEBPACK_IMPORTED_MODULE_11__","src_app_shared_modules_icons_module__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_2__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_12__","_angular_material_input__WEBPACK_IMPORTED_MODULE_13__","_angular_material_select__WEBPACK_IMPORTED_MODULE_14__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_15__","_features_selection_popup_selection_popup_module__WEBPACK_IMPORTED_MODULE_4__","_faceting_sanding_selection_popup_faceting_sanding_popup_module__WEBPACK_IMPORTED_MODULE_5__","src_app_shared_components_keyboard_numeric_keyboard_numeric_module__WEBPACK_IMPORTED_MODULE_6__","src_app_shared_components_keyboard_alphabet_keyboard_alphabet_module__WEBPACK_IMPORTED_MODULE_7__","_framing_component__WEBPACK_IMPORTED_MODULE_1__","InvoiceItemAmountCalculatorService","glassPrice","passpartuPrice","mirrorPrice","framesPrice","facetingPrice","sandingPrice","surface","getConstructionMeasure","getPricePerUom","ppUom","src_app_shared_enums_uom_enum__WEBPACK_IMPORTED_MODULE_0__","forEach","getFramePrice","frameWidthMM","grossAmount","roundOnDigits","imageHeight","imageWidth","imageUom","framePpUom","frameUom","num","price","unit","digits","Math","round","pow","SelectionComponentService","items","_selection_popup_component__WEBPACK_IMPORTED_MODULE_1__","SelectionItemComponent","dataModel","SelectionItemModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_modules_icons_module__WEBPACK_IMPORTED_MODULE_1__","_angular_material_checkbox__WEBPACK_IMPORTED_MODULE_4__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__","_selection_item_component__WEBPACK_IMPORTED_MODULE_0__","SelectionPopupComponent","selectedOids","isSingleSelection","searchValue","toLowerCase","includes","card","SelectionPopupModule","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_6__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_1__","_selection_item_selection_item_module__WEBPACK_IMPORTED_MODULE_2__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__","src_app_shared_components_search_input_search_input_module__WEBPACK_IMPORTED_MODULE_3__","_features_selection_popup_selection_popup_component__WEBPACK_IMPORTED_MODULE_0__","Button","KeyboardButtons","key","rs","displayValue","displayValueCL","en","ALL_BUTTONS","b","KeyboardAlphabetComponentService","title","_keyboard_alphabet_component__WEBPACK_IMPORTED_MODULE_1__","text","_angular_core__WEBPACK_IMPORTED_MODULE_3__","KeyboardAlphabetComponent","_all_buttons__WEBPACK_IMPORTED_MODULE_1__","valueForm","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","keyboardButtons","getButtonById","inputValue","nativeElement","focus","select","button","valueControl","language","capsLockActive","shiftActive","slice","KeyboardAlphabetModule","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__","_angular_material_input__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_7__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__","KeyboardNumericComponentService","showNextOperationButton","inputFieldTitle","codeInput","_keyboard_numeric_component__WEBPACK_IMPORTED_MODULE_1__","KeyboardNumericComponent","initialLoad","saveSelection","isNaN","_me_basic_alert_me_basic_alert_interface__WEBPACK_IMPORTED_MODULE_0__","KeyboardNumericModule","SearchInputComponent","inputChangeSubscription","searchInput","valueChanges","debounceTime","changeEvent","emit","minCharacters","changes","keyword","previousValue","currentValue","emitEvent","SearchInputModule","_angular_material_input__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_5__","_angular_material_button__WEBPACK_IMPORTED_MODULE_6__","_angular_material_icon__WEBPACK_IMPORTED_MODULE_7__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_8__","_modules_icons_module__WEBPACK_IMPORTED_MODULE_1__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_9__","_search_input_component__WEBPACK_IMPORTED_MODULE_0__","Constants"],"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","webpack:///src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup-component.service.ts","webpack:///src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup.component.html","webpack:///src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup.component.ts","webpack:///src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup.module.ts","webpack:///src/app/features/invoice-create-edit/framing/framing-routing.module.ts","webpack:///src/app/features/invoice-create-edit/framing/framing.component.html","webpack:///src/app/features/invoice-create-edit/framing/framing.component.ts","webpack:///src/app/features/invoice-create-edit/framing/framing.module.ts","webpack:///src/app/features/invoice-create-edit/framing/invoice-item-amount-calculator.service.ts","webpack:///src/app/features/selection-popup/selection-component.service.ts","webpack:///src/app/features/selection-popup/selection-item/selection-item.component.html","webpack:///src/app/features/selection-popup/selection-item/selection-item.component.ts","webpack:///src/app/features/selection-popup/selection-item/selection-item.module.ts","webpack:///src/app/features/selection-popup/selection-popup.component.html","webpack:///src/app/features/selection-popup/selection-popup.component.ts","webpack:///src/app/features/selection-popup/selection-popup.module.ts","webpack:///src/app/shared/components/keyboard/alphabet/all-buttons.ts","webpack:///src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.service.ts","webpack:///src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.html","webpack:///src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.ts","webpack:///src/app/shared/components/keyboard/alphabet/keyboard-alphabet.module.ts","webpack:///src/app/shared/components/keyboard/numeric/keyboard-numeric.component.service.ts","webpack:///src/app/shared/components/keyboard/numeric/keyboard-numeric.component.html","webpack:///src/app/shared/components/keyboard/numeric/keyboard-numeric.component.ts","webpack:///src/app/shared/components/keyboard/numeric/keyboard-numeric.module.ts","webpack:///src/app/shared/components/search-input/search-input.component.html","webpack:///src/app/shared/components/search-input/search-input.component.ts","webpack:///src/app/shared/components/search-input/search-input.module.ts","webpack:///src/app/shared/constants.ts"],"sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n/** @nocollapse */\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n/** @nocollapse */\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkStepLabel.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nclass StepperSelectionEvent {\n}\nif (false) {\n    /**\n     * Index of the step now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedIndex;\n    /**\n     * Index of the step previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedIndex;\n    /**\n     * The step instance now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedStep;\n    /**\n     * The step instance previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\nfunction StepperOptions() { }\nif (false) {\n    /**\n     * Whether the stepper should display an error state or not.\n     * Default behavior is assumed to be false.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.showError;\n    /**\n     * Whether the stepper should display the default indicator type\n     * or not.\n     * Default behavior is assumed to be true.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.displayDefaultIndicatorType;\n}\nclass CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} _stepper\n     * @param {?=} stepperOptions\n     */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /**\n     * Whether the user can return to this step once it has been marked as completed.\n     * @return {?}\n     */\n    get editable() {\n        return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    select() {\n        this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => CdkStepper))), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => CdkStepper)),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => CdkStepper))]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_completed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepperOptions;\n    /** @type {?} */\n    CdkStep.prototype._showError;\n    /** @type {?} */\n    CdkStep.prototype._displayDefaultIndicatorType;\n    /**\n     * Template for step label if it exists.\n     * @type {?}\n     */\n    CdkStep.prototype.stepLabel;\n    /**\n     * Template for step content.\n     * @type {?}\n     */\n    CdkStep.prototype.content;\n    /**\n     * The top level abstract control of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.stepControl;\n    /**\n     * Whether user has seen the expanded step content or not.\n     * @type {?}\n     */\n    CdkStep.prototype.interacted;\n    /**\n     * Plain text label of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    CdkStep.prototype.errorMessage;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabelledby;\n    /**\n     * State of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._editable;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._optional;\n    /** @type {?} */\n    CdkStep.prototype._completedOverride;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._customError;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepper;\n}\nclass CdkStepper {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     * @param {?=} _elementRef\n     * @param {?=} _document\n     */\n    constructor(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /**\n     * The list of step components that the stepper is holding.\n     * @return {?}\n     */\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n    get linear() {\n        return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set selectedIndex(index) {\n        /** @type {?} */\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? ((/** @type {?} */ (this._dir.change))) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} direction\n         * @return {?}\n         */\n        direction => this._keyManager.withHorizontalOrientation(direction)));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach((/**\n         * @param {?} step\n         * @return {?}\n         */\n        step => step.reset()));\n        this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    _getAnimationDirection(index) {\n        /** @type {?} */\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        /** @type {?} */\n        const step = this.steps.toArray()[index];\n        /** @type {?} */\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    _updateSelectedItemIndex(newIndex) {\n        /** @type {?} */\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _anyControlsInvalidOrPending(index) {\n        /** @type {?} */\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some((/**\n             * @param {?} step\n             * @return {?}\n             */\n            step => {\n                /** @type {?} */\n                const control = step.stepControl;\n                /** @type {?} */\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            }));\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        const stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n/** @nocollapse */\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_linear;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_selectedIndex;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._destroyed;\n    /**\n     * Used for managing keyboard focus.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._keyManager;\n    /**\n     * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n     * constructor param is required.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._document;\n    /**\n     * The list of step components that the stepper is holding.\n     * @deprecated use `steps` instead\n     * \\@breaking-change 9.0.0 remove this property\n     * @type {?}\n     */\n    CdkStepper.prototype._steps;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    CdkStepper.prototype._stepHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._linear;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._selectedIndex;\n    /**\n     * Event emitted when the selected step has changed.\n     * @type {?}\n     */\n    CdkStepper.prototype.selectionChange;\n    /**\n     * Used to track unique ID for each stepper component.\n     * @type {?}\n     */\n    CdkStepper.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._orientation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\nfunction AbstractControlLike() { }\nif (false) {\n    /** @type {?} */\n    AbstractControlLike.prototype.asyncValidator;\n    /** @type {?} */\n    AbstractControlLike.prototype.dirty;\n    /** @type {?} */\n    AbstractControlLike.prototype.disabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.enabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.errors;\n    /** @type {?} */\n    AbstractControlLike.prototype.invalid;\n    /** @type {?} */\n    AbstractControlLike.prototype.parent;\n    /** @type {?} */\n    AbstractControlLike.prototype.pending;\n    /** @type {?} */\n    AbstractControlLike.prototype.pristine;\n    /** @type {?} */\n    AbstractControlLike.prototype.root;\n    /** @type {?} */\n    AbstractControlLike.prototype.status;\n    /** @type {?} */\n    AbstractControlLike.prototype.statusChanges;\n    /** @type {?} */\n    AbstractControlLike.prototype.touched;\n    /** @type {?} */\n    AbstractControlLike.prototype.untouched;\n    /** @type {?} */\n    AbstractControlLike.prototype.updateOn;\n    /** @type {?} */\n    AbstractControlLike.prototype.valid;\n    /** @type {?} */\n    AbstractControlLike.prototype.validator;\n    /** @type {?} */\n    AbstractControlLike.prototype.value;\n    /** @type {?} */\n    AbstractControlLike.prototype.valueChanges;\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearAsyncValidators = function () { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearValidators = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.disable = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.enable = function (opts) { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.get = function (path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.getError = function (errorCode, path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.hasError = function (errorCode, path) { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAllAsTouched = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsDirty = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPending = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPristine = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsTouched = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsUntouched = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (value, options) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setAsyncValidators = function (newValidator) { };\n    /**\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setErrors = function (errors, opts) { };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setParent = function (parent) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValidators = function (newValidator) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.updateValueAndValidity = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (formState, options) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass CdkStepperNext {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     * @type {?}\n     */\n    CdkStepperNext.prototype.type;\n    /** @type {?} */\n    CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass CdkStepperPrevious {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     * @type {?}\n     */\n    CdkStepperPrevious.prototype.type;\n    /** @type {?} */\n    CdkStepperPrevious.prototype._stepper;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); };\nCdkStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(MatRipple, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatCheckboxRequiredValidator_BaseFactory; return function MatCheckboxRequiredValidator_Factory(t) { return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(t || MatCheckboxRequiredValidator); }; }();\nMatCheckboxRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); };\n_MatCheckboxRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); };\nMatCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /**\n         * Subscription to the current in-progress SVG icon request.\n         */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            this._currentIconFetch.unsubscribe();\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * Subscription to the current in-progress SVG icon request.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._currentIconFetch;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = function MatIconModule_Factory(t) { return new (t || MatIconModule)(); };\nMatIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const step_r2 = restoredCtx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : -1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const step_r1 = restoredCtx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : -1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nconst _c1 = \".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\";\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatStepLabel_BaseFactory; return function MatStepLabel_Factory(t) { return (ɵMatStepLabel_BaseFactory || (ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel)))(t || MatStepLabel); }; }();\nMatStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Stepper data that is required for internationalization.\n */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n/** @nocollapse */ MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.changes;\n    /**\n     * Label that is rendered below optional steps.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _elementRef\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        _focusMonitor.monitor(_elementRef, true);\n        this._intlSubscription = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._intlSubscription;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    MatStepHeader.prototype.errorMessage;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    MatStepHeader.prototype.iconOverrides;\n    /**\n     * Index of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.index;\n    /**\n     * Whether the given step is selected.\n     * @type {?}\n     */\n    MatStepHeader.prototype.selected;\n    /**\n     * Whether the given step label is active.\n     * @type {?}\n     */\n    MatStepHeader.prototype.active;\n    /**\n     * Whether the given step is optional.\n     * @type {?}\n     */\n    MatStepHeader.prototype.optional;\n    /**\n     * Whether the ripple should be disabled.\n     * @type {?}\n     */\n    MatStepHeader.prototype.disableRipple;\n    /** @type {?} */\n    MatStepHeader.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\nconst matStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\nfunction MatStepperIconContext() { }\nif (false) {\n    /**\n     * Index of the step.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.index;\n    /**\n     * Whether the step is currently active.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.active;\n    /**\n     * Whether the step is optional.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n/** @nocollapse */\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\nif (false) {\n    /**\n     * Name of the icon to be overridden.\n     * @type {?}\n     */\n    MatStepperIcon.prototype.name;\n    /** @type {?} */\n    MatStepperIcon.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStep extends CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     * @param {?=} stepperOptions\n     */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        /** @type {?} */\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatStepper))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatStepper)),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatStepper))]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nif (false) {\n    /**\n     * Content for step label given by `<ng-template matStepLabel>`.\n     * @type {?}\n     */\n    MatStep.prototype.stepLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStep.prototype._errorStateMatcher;\n}\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Event emitted when the current step is done transitioning in.\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n        /**\n         * Stream of animation `done` events when the body expands/collapses.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._icons.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ name, templateRef }) => this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._stateChanged();\n        }));\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => x.fromState === y.fromState && x.toState === y.toState)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (((/** @type {?} */ (event.toState))) === 'current') {\n                this.animationDone.emit();\n            }\n        }));\n    }\n}\nMatStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatStepper_BaseFactory; return function MatStepper_Factory(t) { return (ɵMatStepper_BaseFactory || (ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper)))(t || MatStepper); }; }();\nMatStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_hasError;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    MatStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    MatStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    MatStepper.prototype._icons;\n    /**\n     * Event emitted when the current step is done transitioning in.\n     * @type {?}\n     */\n    MatStepper.prototype.animationDone;\n    /**\n     * Whether ripples should be disabled for the step headers.\n     * @type {?}\n     */\n    MatStepper.prototype.disableRipple;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    MatStepper.prototype._iconOverrides;\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     * @type {?}\n     */\n    MatStepper.prototype._animationDone;\n}\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the label should display in bottom or end position.\n         */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatHorizontalStepper_BaseFactory; return function MatHorizontalStepper_Factory(t) { return (ɵMatHorizontalStepper_BaseFactory || (ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper)))(t || MatHorizontalStepper); }; }();\nMatHorizontalStepper.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_hasError;\n    /**\n     * Whether the label should display in bottom or end position.\n     * @type {?}\n     */\n    MatHorizontalStepper.prototype.labelPosition;\n}\nclass MatVerticalStepper extends MatStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     * @param {?=} elementRef\n     * @param {?=} _document\n     */\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n/** @nocollapse */\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_hasError;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperNext_BaseFactory; return function MatStepperNext_Factory(t) { return (ɵMatStepperNext_BaseFactory || (ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext)))(t || MatStepperNext); }; }();\nMatStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperPrevious_BaseFactory; return function MatStepperPrevious_Factory(t) { return (ɵMatStepperPrevious_BaseFactory || (ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious)))(t || MatStepperPrevious); }; }();\nMatStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵfac = function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); };\nMatStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { ProductModel } from 'src/app/shared/models/product-model';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { FacetingSandingPopupComponent } from './faceting-sanding-popup.component';\r\n\r\n@Injectable()\r\nexport class FacetingSandingPopupService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(\r\n    faceting: ProductModel,\r\n    sanding: ProductModel\r\n  ): Observable<{ faceting: ProductModel; sanding: ProductModel }> {\r\n    return new Observable(\r\n      (\r\n        observer: Subscriber<{ faceting: ProductModel; sanding: ProductModel }>\r\n      ) => {\r\n        const config: MatDialogConfig = new MatDialogConfig();\r\n        // config.width = '80%';\r\n        // config.height = '80%';\r\n        config.data = {\r\n          faceting,\r\n          sanding,\r\n        };\r\n\r\n        this.subs.sink.$openSelectPopup = this._matDialog\r\n          .open(FacetingSandingPopupComponent, config)\r\n          .afterClosed()\r\n          .subscribe(\r\n            (data: { faceting: ProductModel; sanding: ProductModel }) => {\r\n              observer.next(data);\r\n              observer.complete();\r\n            },\r\n            () => observer.error()\r\n          );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <div class=\"grid-container\">\r\n    <app-button\r\n      class=\"grid-item\"\r\n      [text]=\"'faceting' | translate\"\r\n      buttonSize=\"middle\"\r\n      fullWidth=\"true\"\r\n      (clickEvent)=\"selectFaceting()\"\r\n    ></app-button>\r\n    <div class=\"grid-item\">\r\n      <div class=\"object-name\">\r\n        <i-feather\r\n          [name]=\"faceting?.name ? 'check' : 'alert-triangle'\"\r\n          [class.success]=\"faceting?.name\"\r\n          [class.danger]=\"!faceting?.name\"\r\n        ></i-feather>\r\n        {{ faceting?.name || \"facetingNotSelected\" | translate }}\r\n      </div>\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <app-button\r\n        *ngIf=\"faceting\"\r\n        [iconName]=\"'trash-2'\"\r\n        [buttonSize]=\"'small'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        (clickEvent)=\"removeFromInvoiceItem('faceting')\"\r\n        class=\"button\"\r\n      ></app-button>\r\n    </div>\r\n\r\n    <app-button\r\n      class=\"grid-item\"\r\n      [text]=\"'sanding' | translate\"\r\n      buttonSize=\"middle\"\r\n      fullWidth=\"true\"\r\n      (clickEvent)=\"selectSanding()\"\r\n    ></app-button>\r\n    <div class=\"grid-item\">\r\n      <div class=\"object-name\">\r\n        <i-feather\r\n          [name]=\"sanding?.name ? 'check' : 'alert-triangle'\"\r\n          [class.success]=\"sanding?.name\"\r\n          [class.danger]=\"!sanding?.name\"\r\n        ></i-feather>\r\n        {{ sanding?.name || \"sandingNotSelected\" | translate }}\r\n      </div>\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <app-button\r\n        *ngIf=\"sanding\"\r\n        [iconName]=\"'trash-2'\"\r\n        [buttonSize]=\"'small'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        (clickEvent)=\"removeFromInvoiceItem('sanding')\"\r\n        class=\"button\"\r\n      ></app-button>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <app-button\r\n    [text]=\"'cancel' | translate\"\r\n    color=\"secondary\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"cancelSaveSelection()\"\r\n  ></app-button>\r\n  <app-button\r\n    [text]=\"'ok' | translate\"\r\n    color=\"success\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"saveSelection()\"\r\n  ></app-button>\r\n</mat-dialog-actions>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SelectionComponentService } from '@features/selection-popup/selection-component.service';\r\nimport { SelectionItem } from '@features/selection-popup/selection-item/selection-item.interface';\r\nimport { Constants } from 'src/app/shared/constants';\r\nimport { ProductModel } from 'src/app/shared/models/product-model';\r\nimport { FacetingDataStoreService } from 'src/app/shared/services/data-store-services/faceting-data-store.service';\r\nimport { SandingDataStoreService } from 'src/app/shared/services/data-store-services/sanding-data-store.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\n\r\nexport interface DialogData {\r\n  faceting: ProductModel;\r\n  sanding: ProductModel;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-faceting-sanding-popup',\r\n  templateUrl: './faceting-sanding-popup.component.html',\r\n  styleUrls: ['./faceting-sanding-popup.component.scss'],\r\n  providers: [SelectionComponentService],\r\n})\r\nexport class FacetingSandingPopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  faceting?: ProductModel;\r\n  sanding?: ProductModel;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<FacetingSandingPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef,\r\n    private selectionComponentService: SelectionComponentService,\r\n    private facetingData: FacetingDataStoreService,\r\n    private sandingData: SandingDataStoreService\r\n  ) {\r\n    this.faceting = data.faceting;\r\n    this.sanding = data.sanding;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close({ faceting: this.faceting, sanding: this.sanding });\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectFaceting(): void {\r\n    this.subs.sink.facetingData = this.facetingData.entities.subscribe(\r\n      (faces) => {\r\n        this.selectionComponentService\r\n          .openDialog(\r\n            faces.map((f) => {\r\n              return {\r\n                oid: f.oid,\r\n                name: f.name,\r\n                selected: this.faceting?.oid === f.oid,\r\n                uom: f.uom,\r\n                pricePerUom: f.pricePerUom,\r\n                cashRegisterNumber: f.cashRegisterNumber,\r\n                thumbnailUrl: Constants.THUMBNAIL_FACETING,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.faceting = faces.filter((f) => f.oid === oid)[0];\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  selectSanding(): void {\r\n    this.subs.sink.sandingData = this.sandingData.entities.subscribe(\r\n      (sands) => {\r\n        this.selectionComponentService\r\n          .openDialog(\r\n            sands.map((s) => {\r\n              return {\r\n                oid: s.oid,\r\n                name: s.name,\r\n                selected: this.sanding?.oid === s.oid,\r\n                uom: s.uom,\r\n                pricePerUom: s.pricePerUom,\r\n                cashRegisterNumber: s.cashRegisterNumber,\r\n                thumbnailUrl: Constants.THUMBNAIL_SANDING,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.sanding = sands.filter((s) => s.oid === oid)[0];\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  removeFromInvoiceItem(type: 'faceting' | 'sanding'): void {\r\n    type === 'faceting'\r\n      ? (this.faceting = undefined)\r\n      : (this.sanding = undefined);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FacetingSandingPopupComponent } from './faceting-sanding-popup.component';\r\nimport { IconsModule } from 'src/app/shared/modules/icons.module';\r\n\r\n@NgModule({\r\n  declarations: [FacetingSandingPopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n    IconsModule,\r\n  ],\r\n  exports: [FacetingSandingPopupComponent],\r\n  entryComponents: [FacetingSandingPopupComponent],\r\n})\r\nexport class FacetingSandingPopupModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FramingComponent } from './framing.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: FramingComponent },\r\n  { path: 'edit/:invoiceItemOid', component: FramingComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FramingRoutingModule {}\r\n","<div class=\"container\">\r\n  <mat-horizontal-stepper\r\n    linear\r\n    #stepper\r\n    class=\"user-select-none\"\r\n    (selectionChange)=\"markFormAsTouched($event)\"\r\n  >\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <i-feather\r\n        name=\"check\"\r\n        class=\"step-label-heading-completed icon\"\r\n      ></i-feather>\r\n    </ng-template>\r\n    <mat-step\r\n      #stepOne\r\n      *ngIf=\"dimensionsInputAttributeForm\"\r\n      [stepControl]=\"dimensionsInputAttributeForm\"\r\n    >\r\n      <form [formGroup]=\"dimensionsInputAttributeForm\">\r\n        <ng-template matStepLabel>\r\n          <span\r\n            class=\"step-label-heading bold\"\r\n            [class.step-label-heading-active]=\"stepper.selected === stepOne\"\r\n            [class.step-label-heading-completed]=\"\r\n              stepOne.completed && stepper.selected !== stepOne\r\n            \"\r\n            >{{ \"inputDimensions\" | translate }}</span\r\n          >\r\n        </ng-template>\r\n\r\n        <div class=\"step-content box-sizing-border-box\">\r\n          <h1 class=\"step-content-label bold\">\r\n            {{ \"inputDimensions\" | translate }}\r\n          </h1>\r\n\r\n          <div class=\"group-container\">\r\n            <div class=\"row-container dimensions\">\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"count\"\r\n                  placeholder=\"{{ 'inputCount' | translate }}\"\r\n                  (click)=\"insertCount()\"\r\n                />\r\n              </mat-form-field>\r\n              <app-button\r\n                [text]=\"\r\n                  ('outterDimension' | translate) +\r\n                  ':' +\r\n                  ' ' +\r\n                  (!(isOutterDimension | async)\r\n                    ? ('no' | translate)\r\n                    : ('yes' | translate))\r\n                \"\r\n                (clickEvent)=\"toggleInnerOutterDimension()\"\r\n                [isTransparentMode]=\"!(isOutterDimension | async)\"\r\n                [buttonSize]=\"'small'\"\r\n              ></app-button>\r\n            </div>\r\n            <div class=\"row-container dimensions\">\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"width\"\r\n                  placeholder=\"{{ 'width' | translate }}\"\r\n                  (click)=\"insertWidthAndHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"element\">X</div>\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"height\"\r\n                  placeholder=\"{{ 'height' | translate }}\"\r\n                  (click)=\"insertHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"uom\">{{ invoiceItem.dimensions.uom }}</div>\r\n            </div>\r\n            <div\r\n              class=\"row-container dimensions\"\r\n              *ngIf=\"invoiceItem.dimensions.outter\"\r\n            >\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"outterWidth\"\r\n                  placeholder=\"{{ 'width' | translate }}\"\r\n                  (click)=\"insertOutterWidthAndHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"element\">X</div>\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"outterHeight\"\r\n                  placeholder=\"{{ 'height' | translate }}\"\r\n                  (click)=\"insertOutterHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"uom\">{{ invoiceItem.dimensions.uom }}</div>\r\n            </div>\r\n            <div class=\"item-select\">\r\n              <div class=\"grid-container\">\r\n                <ng-container *ngIf=\"!invoiceItem.mirror\">\r\n                  <app-button\r\n                    class=\"grid-item\"\r\n                    [text]=\"'glass' | translate\"\r\n                    buttonSize=\"middle\"\r\n                    fullWidth=\"true\"\r\n                    (clickEvent)=\"selectGlass()\"\r\n                  ></app-button>\r\n                  <div class=\"grid-item\">\r\n                    <div\r\n                      class=\"object-name\"\r\n                      [ngClass]=\"invoiceItem?.glass?.name\"\r\n                    >\r\n                      <i-feather\r\n                        [name]=\"\r\n                          invoiceItem?.glass?.name ? 'check' : 'alert-triangle'\r\n                        \"\r\n                        [class.success]=\"invoiceItem?.glass?.name\"\r\n                        [class.danger]=\"!invoiceItem?.glass?.name\"\r\n                      ></i-feather>\r\n                      {{\r\n                        invoiceItem?.glass?.name || \"glassNotSelected\"\r\n                          | translate\r\n                      }}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"grid-item\">\r\n                    <app-button\r\n                      *ngIf=\"invoiceItem?.glass\"\r\n                      [iconName]=\"'trash-2'\"\r\n                      [buttonSize]=\"'small'\"\r\n                      [isSquare]=\"true\"\r\n                      [isTransparentMode]=\"true\"\r\n                      (clickEvent)=\"removeFromInvoiceItem('glass')\"\r\n                      class=\"button\"\r\n                    ></app-button>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!invoiceItem.mirror\">\r\n                  <app-button\r\n                    class=\"grid-item\"\r\n                    [text]=\"'passpartu' | translate\"\r\n                    buttonSize=\"middle\"\r\n                    fullWidth=\"true\"\r\n                    (clickEvent)=\"selectPasspartu()\"\r\n                  ></app-button>\r\n                  <div\r\n                    class=\"grid-item\"\r\n                    [class.red]=\"\r\n                      this.invoiceItem?.dimensions?.outter &&\r\n                      !invoiceItem?.passpartu?.value?.name\r\n                    \"\r\n                  >\r\n                    <div class=\"object-name\">\r\n                      <i-feather\r\n                        [name]=\"\r\n                          invoiceItem?.passpartu?.value?.name\r\n                            ? 'check'\r\n                            : 'alert-triangle'\r\n                        \"\r\n                        [class.success]=\"invoiceItem?.passpartu?.value?.name\"\r\n                        [class.danger]=\"!invoiceItem?.passpartu?.value?.name\"\r\n                      ></i-feather>\r\n                      {{\r\n                        invoiceItem?.passpartu?.value?.name\r\n                          ? invoiceItem?.passpartu?.value?.name\r\n                          : this.invoiceItem?.dimensions?.outter\r\n                          ? (\"passpartuSelectionObligated\" | translate)\r\n                          : (\"passpartuNotSelected\" | translate)\r\n                      }}\r\n                      <span *ngIf=\"invoiceItem?.passpartu?.width\">\r\n                        ,\r\n                        {{\r\n                          \" \" +\r\n                            (\"width\" | translate) +\r\n                            \": \" +\r\n                            invoiceItem?.passpartu?.width +\r\n                            invoiceItem?.passpartu?.widthUom\r\n                        }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"grid-item\">\r\n                    <app-button\r\n                      *ngIf=\"invoiceItem?.passpartu\"\r\n                      [iconName]=\"'trash-2'\"\r\n                      [buttonSize]=\"'small'\"\r\n                      [isSquare]=\"true\"\r\n                      [isTransparentMode]=\"true\"\r\n                      (clickEvent)=\"removeFromInvoiceItem('passpartu')\"\r\n                      class=\"button\"\r\n                    ></app-button>\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container\r\n                  *ngIf=\"!invoiceItem.glass && !invoiceItem.passpartu\"\r\n                >\r\n                  <app-button\r\n                    class=\"grid-item\"\r\n                    [text]=\"'mirror' | translate\"\r\n                    buttonSize=\"middle\"\r\n                    fullWidth=\"true\"\r\n                    (clickEvent)=\"selectMirror()\"\r\n                  ></app-button>\r\n                  <div class=\"grid-item\">\r\n                    <div class=\"object-name\">\r\n                      <i-feather\r\n                        [name]=\"\r\n                          invoiceItem?.mirror?.name ? 'check' : 'alert-triangle'\r\n                        \"\r\n                        [class.success]=\"invoiceItem?.mirror?.name\"\r\n                        [class.danger]=\"!invoiceItem?.mirror?.name\"\r\n                      ></i-feather>\r\n                      {{\r\n                        invoiceItem?.mirror?.name || \"mirrorNotSelected\"\r\n                          | translate\r\n                      }}\r\n                      <span *ngIf=\"invoiceItem?.faceting?.name\"\r\n                        >, {{ \"faceting\" | translate }}:{{\r\n                          invoiceItem?.faceting?.name\r\n                        }}</span\r\n                      >\r\n                      <span *ngIf=\"invoiceItem?.sanding?.name\"\r\n                        >, {{ \"sanding\" | translate }}:{{\r\n                          invoiceItem?.sanding?.name\r\n                        }}</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"grid-item\">\r\n                    <app-button\r\n                      *ngIf=\"invoiceItem?.mirror\"\r\n                      [iconName]=\"'trash-2'\"\r\n                      [buttonSize]=\"'small'\"\r\n                      [isSquare]=\"true\"\r\n                      [isTransparentMode]=\"true\"\r\n                      (clickEvent)=\"removeFromInvoiceItem('mirror')\"\r\n                      class=\"button\"\r\n                    ></app-button>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"footer box-sizing-border-box\">\r\n            <app-button\r\n              [text]=\"'cancel' | translate\"\r\n              color=\"secondary\"\r\n              buttonSize=\"middle\"\r\n              (clickEvent)=\"cancel()\"\r\n            ></app-button>\r\n            <app-button\r\n              [text]=\"'next' | translate\"\r\n              buttonSize=\"middle\"\r\n              [color]=\"'success'\"\r\n              (clickEvent)=\"stepper.next()\"\r\n            ></app-button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n\r\n    <mat-step #stepTwo [stepControl]=\"\">\r\n      <ng-template matStepLabel>\r\n        <span\r\n          class=\"step-label-heading bold\"\r\n          [class.step-label-heading-active]=\"stepper.selected === stepTwo\"\r\n          [class.step-label-heading-completed]=\"\r\n            stepTwo.completed && stepper.selected !== stepTwo\r\n          \"\r\n          >{{ \"frames\" | translate }}</span\r\n        >\r\n      </ng-template>\r\n\r\n      <div class=\"step-content\">\r\n        <div class=\"group-container\">\r\n          <div\r\n            class=\"row-container\"\r\n            *ngFor=\"let frame of invoiceItem.selectedFrames; let i = index\"\r\n          >\r\n            <div class=\"frame-name\">\r\n              <span *ngIf=\"frame.frame.name\">{{ frame.frame.name }}</span>\r\n              <span *ngIf=\"frame.frame.code\">/{{ frame.frame.code }}</span>\r\n              <span *ngIf=\"frame.colorCode\">{{ frame.colorCode }}</span>\r\n              <span *ngIf=\"frame.frame.uom\"\r\n                >{{ \", \" + (\"uom\" | translate)\r\n                }}{{ \": \" + frame.frame.uom }}</span\r\n              >\r\n              <span *ngIf=\"frame.frame.pricePerUom\"\r\n                >{{ \", \" + (\"ppUom\" | translate)\r\n                }}{{ \": \" + frame.frame.pricePerUom }}</span\r\n              >\r\n            </div>\r\n            <app-button\r\n              [iconName]=\"'trash-2'\"\r\n              [buttonSize]=\"'small'\"\r\n              [isSquare]=\"true\"\r\n              [isTransparentMode]=\"true\"\r\n              (clickEvent)=\"removeAddedFrame(i)\"\r\n              class=\"button\"\r\n            ></app-button>\r\n          </div>\r\n          <div\r\n            class=\"row-container empty-list\"\r\n            *ngIf=\"!(invoiceItem.selectedFrames.length > 0)\"\r\n          >\r\n            {{ \"youDidntAddAnyFrame\" | translate }}\r\n          </div>\r\n          <div class=\"row-container\">\r\n            <div class=\"add-frame-button\">\r\n              <app-button\r\n                [buttonSize]=\"'middle'\"\r\n                [text]=\"'addFrame' | translate\"\r\n                [fullWidth]=\"true\"\r\n                (clickEvent)=\"addNewFrameToInvoiceItem()\"\r\n              ></app-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer box-sizing-border-box\">\r\n          <app-button\r\n            [text]=\"'previous' | translate\"\r\n            color=\"secondary\"\r\n            buttonSize=\"middle\"\r\n            (clickEvent)=\"stepper.previous()\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'finish' | translate\"\r\n            buttonSize=\"middle\"\r\n            [color]=\"'success'\"\r\n            [disabled]=\"!(invoiceItem.selectedFrames.length > 0)\"\r\n            (clickEvent)=\"finish()\"\r\n          ></app-button>\r\n        </div>\r\n      </div>\r\n    </mat-step>\r\n  </mat-horizontal-stepper>\r\n</div>\r\n","import { StepperSelectionEvent } from '@angular/cdk/stepper';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SelectionComponentService } from '@features/selection-popup/selection-component.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { KeyboardAlphabetComponentService } from 'src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.service';\r\nimport { KeyboardNumericComponentService } from 'src/app/shared/components/keyboard/numeric/keyboard-numeric.component.service';\r\nimport { MODE } from 'src/app/shared/components/me-basic-alert/me-basic-alert.interface';\r\nimport { Constants } from 'src/app/shared/constants';\r\nimport { UOM } from 'src/app/shared/enums/uom-enum';\r\nimport { InvoiceItemModel } from 'src/app/shared/models/invoice-item.model';\r\nimport { AppSettingsService } from 'src/app/shared/services/app-settings.service';\r\nimport { FrameDataStoreService } from 'src/app/shared/services/data-store-services/frame-data-store.service';\r\nimport { GlassDataStoreService } from 'src/app/shared/services/data-store-services/glass-data-store.service';\r\nimport { DraftInvoicesService } from 'src/app/shared/services/data-store-services/draft-invoice-items-store.service';\r\nimport { MirrorDataStoreService } from 'src/app/shared/services/data-store-services/mirror-data-store.service';\r\nimport { PasspartuColorDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-color-data-store.service';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { FacetingSandingPopupService } from './faceting-sanding-selection-popup/faceting-sanding-popup-component.service';\r\nimport { InvoiceItemAmountCalculatorService } from './invoice-item-amount-calculator.service';\r\n\r\n@Component({\r\n  selector: 'app-framing',\r\n  templateUrl: './framing.component.html',\r\n  styleUrls: ['./framing.component.scss'],\r\n  providers: [\r\n    SelectionComponentService,\r\n    InvoiceItemAmountCalculatorService,\r\n    FacetingSandingPopupService,\r\n    KeyboardNumericComponentService,\r\n    KeyboardAlphabetComponentService,\r\n  ],\r\n})\r\nexport class FramingComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  isEdit: boolean = false;\r\n\r\n  currency: string;\r\n\r\n  @ViewChild('stepper') stepper;\r\n  dimensionsInputAttributeForm!: FormGroup;\r\n\r\n  invoiceOid: string | undefined;\r\n\r\n  invoiceItem: InvoiceItemModel = {\r\n    oid: '',\r\n    count: 1,\r\n    itemTitle: '',\r\n    dimensions: { width: 20, height: 30, uom: UOM.CENTIMETER },\r\n    selectedFrames: [],\r\n    amount: 0,\r\n  };\r\n\r\n  private $isOutterDimension: BehaviorSubject<boolean> =\r\n    new BehaviorSubject<boolean>(false);\r\n  isOutterDimension: Observable<boolean> =\r\n    this.$isOutterDimension.asObservable();\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private _activeRoute: ActivatedRoute,\r\n    private selectPopUp: SelectionComponentService,\r\n    private glassStoreService: GlassDataStoreService,\r\n    private passpartuColorStoreService: PasspartuColorDataStoreService,\r\n    private frameStoreService: FrameDataStoreService,\r\n    private mirrorStoreService: MirrorDataStoreService,\r\n    private draftInvoicesStoreService: DraftInvoicesService,\r\n    private itemAmountCalcService: InvoiceItemAmountCalculatorService,\r\n    private facetingSandingPopupService: FacetingSandingPopupService,\r\n    private keyboardNumericComponentService: KeyboardNumericComponentService,\r\n    private translateService: TranslateService,\r\n    private appSettingsService: AppSettingsService,\r\n    private globalService: GlobalService,\r\n    private keyboardAlphabetComponentService: KeyboardAlphabetComponentService\r\n  ) {}\r\n\r\n  get countControl(): AbstractControl | null {\r\n    return this.dimensionsInputAttributeForm.get('count');\r\n  }\r\n\r\n  get widthControl(): AbstractControl | null {\r\n    return this.dimensionsInputAttributeForm.get('width');\r\n  }\r\n\r\n  get heightControl(): AbstractControl | null {\r\n    return this.dimensionsInputAttributeForm.get('height');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.invoiceItem.itemTitle = this.translateService.instant('image');\r\n    this.subs.sink = this.appSettingsService.settings.subscribe((settings) => {\r\n      this.currency = settings.formatSettings.currencyDisplayValue;\r\n    });\r\n    this.invoiceOid = this._activeRoute.snapshot.paramMap.get('invoiceOid');\r\n    const oid = this._activeRoute.snapshot.paramMap.get('invoiceItemOid');\r\n\r\n    if (this.invoiceOid) {\r\n      this.draftInvoicesStoreService.draftInvoices.subscribe((invoices) => {\r\n        let inv = invoices.filter((i) => i.oid === this.invoiceOid)[0];\r\n        this.invoiceOid = inv.oid;\r\n        if (oid) {\r\n          this.isEdit = true;\r\n          this.invoiceItem = inv.invoiceItems.filter((ii) => ii.oid === oid)[0];\r\n          if (this.invoiceItem.dimensions.outter) {\r\n            this.$isOutterDimension.next(true);\r\n          }\r\n          this.initializeForm();\r\n        } else {\r\n          this.initializeForm();\r\n        }\r\n      });\r\n    } else {\r\n      this.initializeForm();\r\n    }\r\n  }\r\n\r\n  toggleInnerOutterDimension(): void {\r\n    if (\r\n      this.$isOutterDimension.getValue() &&\r\n      this.invoiceItem.passpartu &&\r\n      !this.invoiceItem.passpartu.width\r\n    ) {\r\n      this.selectPasspartuWidth();\r\n    }\r\n    this.$isOutterDimension.next(!this.$isOutterDimension.getValue());\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.dimensionsInputAttributeForm = new FormGroup({\r\n      count: new FormControl(this.invoiceItem.count, [\r\n        Validators.required,\r\n        Validators.min(1),\r\n      ]),\r\n      width: new FormControl(this.invoiceItem.dimensions.width, [\r\n        Validators.required,\r\n        Validators.min(1),\r\n      ]),\r\n      height: new FormControl(this.invoiceItem.dimensions.height, [\r\n        Validators.required,\r\n        Validators.min(1),\r\n      ]),\r\n    });\r\n    this.subs.sink = this.isOutterDimension.subscribe((selected) => {\r\n      if (selected) {\r\n        this.invoiceItem.dimensions.outter = {\r\n          width: this.invoiceItem.dimensions?.outter?.width\r\n            ? this.invoiceItem.dimensions.outter.width\r\n            : this.invoiceItem.dimensions.width,\r\n          height: this.invoiceItem.dimensions?.outter?.height\r\n            ? this.invoiceItem.dimensions.outter.height\r\n            : this.invoiceItem.dimensions.height,\r\n        };\r\n        this.dimensionsInputAttributeForm.addControl(\r\n          'outterWidth',\r\n          new FormControl(this.invoiceItem.dimensions.outter.width || 0, [\r\n            Validators.required,\r\n            Validators.min(1),\r\n          ])\r\n        );\r\n        this.dimensionsInputAttributeForm.addControl(\r\n          'outterHeight',\r\n          new FormControl(this.invoiceItem.dimensions.outter.height || 0, [\r\n            Validators.required,\r\n            Validators.min(1),\r\n          ])\r\n        );\r\n      } else {\r\n        this.invoiceItem.dimensions.outter = undefined;\r\n        this.dimensionsInputAttributeForm.removeControl('outterWidth');\r\n        this.dimensionsInputAttributeForm.removeControl('outterHeight');\r\n      }\r\n    });\r\n  }\r\n\r\n  selectGlass(): void {\r\n    this.subs.sink.selectGlass = this.glassStoreService.entities.subscribe(\r\n      (glasses) => {\r\n        // TODO map glasses to needed entity...\r\n        this.subs.sink.selectGlassPopUp = this.selectPopUp\r\n          .openDialog(\r\n            glasses.map((glass) => {\r\n              return {\r\n                oid: glass.oid,\r\n                name: glass.name,\r\n                pricePerUom: glass.pricePerUom,\r\n                uom: glass.uom,\r\n                cashRegisterNumber: glass.cashRegisterNumber,\r\n                selected: this.invoiceItem?.glass?.oid === glass.oid,\r\n                thumbnailUrl: Constants.THUMBNAIL_GLASS,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.invoiceItem.glass = glasses.filter((g) => g.oid === oid)[0];\r\n              this.invoiceItem.mirror = undefined;\r\n              this.invoiceItem.faceting = undefined;\r\n              this.invoiceItem.sanding = undefined;\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  selectPasspartu(): void {\r\n    this.subs.sink.selectPasspartu =\r\n      this.passpartuColorStoreService.entities.subscribe((passpartues) => {\r\n        this.subs.sink.selectPasspartuPopUp = this.selectPopUp\r\n          .openDialog(\r\n            passpartues.map((passpartu) => {\r\n              return {\r\n                oid: passpartu.oid,\r\n                name: passpartu.name,\r\n                pricePerUom: passpartu.passpartu.pricePerUom,\r\n                uom: passpartu.passpartu.uom,\r\n                cashRegisterNumber: passpartu.passpartu.cashRegisterNumber,\r\n                selected:\r\n                  this.invoiceItem?.passpartu?.value?.oid === passpartu.oid,\r\n                thumbnailUrl: Constants.THUMBNAIL_PASSPARTU,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.invoiceItem.passpartu = {\r\n                value: passpartues.filter((g) => g.oid === oid)[0],\r\n              };\r\n              if (!this.invoiceItem.dimensions.outter) {\r\n                this.selectPasspartuWidth();\r\n              }\r\n              this.invoiceItem.mirror = undefined;\r\n              this.invoiceItem.faceting = undefined;\r\n              this.invoiceItem.sanding = undefined;\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  selectPasspartuWidth(): void {\r\n    this.subs.sink.passInputWidth = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('passpartuWidth'),\r\n        UOM.CENTIMETER,\r\n        false,\r\n        this.translateService.instant('insertPasspartuWidth'),\r\n        this.invoiceItem.passpartu.width || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.invoiceItem.passpartu.width = parseFloat(data.value);\r\n          this.invoiceItem.passpartu.widthUom = UOM.CENTIMETER;\r\n        }\r\n        if (!this.invoiceItem.passpartu.width) {\r\n          this.globalService.showBasicAlert(\r\n            MODE.error,\r\n            this.translateService.instant('missingData'),\r\n            this.translateService.instant('passpartuWidthIsRequiredField')\r\n          );\r\n          this.selectPasspartuWidth();\r\n        }\r\n      });\r\n  }\r\n\r\n  selectMirror(): void {\r\n    this.subs.sink.selectMirror = this.mirrorStoreService.entities.subscribe(\r\n      (mirrors) => {\r\n        this.subs.sink.selectMirrorPopUp = this.selectPopUp\r\n          .openDialog(\r\n            mirrors.map((mirror) => {\r\n              return {\r\n                oid: mirror.oid,\r\n                name: mirror.name,\r\n                pricePerUom: mirror.pricePerUom,\r\n                uom: mirror.uom,\r\n                cashRegisterNumber: mirror.cashRegisterNumber,\r\n                selected: this.invoiceItem?.glass?.oid === mirror.oid,\r\n                thumbnailUrl: Constants.THUMBNAIL_MIRROR,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.invoiceItem.mirror = mirrors.filter((g) => g.oid === oid)[0];\r\n              this.invoiceItem.glass = undefined;\r\n              this.invoiceItem.passpartu = undefined;\r\n\r\n              this.openFacetingAndSandingSelectPopup();\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  openFacetingAndSandingSelectPopup(): void {\r\n    this.subs.sink.facetingAndSandingPopup = this.facetingSandingPopupService\r\n      .openDialog(this.invoiceItem.faceting, this.invoiceItem.sanding)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.invoiceItem.faceting = data.faceting;\r\n          this.invoiceItem.sanding = data.sanding;\r\n        }\r\n      });\r\n  }\r\n\r\n  removeFromInvoiceItem(type: 'glass' | 'passpartu' | 'mirror'): void {\r\n    switch (type) {\r\n      case 'glass':\r\n        this.invoiceItem.glass = undefined;\r\n        break;\r\n      case 'passpartu':\r\n        this.invoiceItem.passpartu = undefined;\r\n        this.dimensionsInputAttributeForm.removeControl('passpartuWidth');\r\n        break;\r\n      case 'mirror':\r\n        this.invoiceItem.mirror = undefined;\r\n        break;\r\n    }\r\n  }\r\n\r\n  addNewFrameToInvoiceItem(): void {\r\n    this.subs.sink.addNewFrameToInvoice =\r\n      this.frameStoreService.entities.subscribe((frames) => {\r\n        this.keyboardNumericComponentService\r\n          .openDialog(\r\n            this.translateService.instant('insertFrameCode'),\r\n            UOM.NUMBER,\r\n            false,\r\n            this.translateService.instant('fourDigitsForFrameForColor'),\r\n            0,\r\n            true\r\n          )\r\n          .subscribe((code: { value: string; nextOperation: boolean }) => {\r\n            if (code && code.value) {\r\n              if (code.value.length === 4) {\r\n                const c = code.value.substring(0, 2);\r\n                const colorCode = code.value.substring(2, 4);\r\n                console.log('colorCode');\r\n                console.log(colorCode);\r\n                const frame = frames.find((f) => f.code === c);\r\n                if (frame) {\r\n                  this.invoiceItem.selectedFrames.push({ frame, colorCode });\r\n                  return;\r\n                }\r\n                this.globalService.showBasicAlert(\r\n                  MODE.error,\r\n                  this.translateService.instant('wrongCode'),\r\n                  this.translateService.instant(\r\n                    'firstDigitsOfCodeHaveToBeCodeOfFrame'\r\n                  )\r\n                );\r\n              } else {\r\n                this.globalService.showBasicAlert(\r\n                  MODE.error,\r\n                  this.translateService.instant('wrongCode'),\r\n                  this.translateService.instant('codeCanBeFourDigitsLong')\r\n                );\r\n              }\r\n              this.addNewFrameToInvoiceItem();\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  removeAddedFrame(index: number): void {\r\n    this.invoiceItem.selectedFrames.splice(index, 1);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  finish(): void {\r\n    this.invoiceItem.count = this.dimensionsInputAttributeForm.value.count;\r\n    this.invoiceItem.dimensions.height =\r\n      this.dimensionsInputAttributeForm.value.height;\r\n    this.invoiceItem.dimensions.width =\r\n      this.dimensionsInputAttributeForm.value.width;\r\n\r\n    if (this.invoiceItem.dimensions.outter) {\r\n      this.invoiceItem.dimensions.outter.width =\r\n        this.dimensionsInputAttributeForm.value.outterWidth;\r\n      this.invoiceItem.dimensions.outter.height =\r\n        this.dimensionsInputAttributeForm.value.outterHeight;\r\n    }\r\n    this.invoiceItem.amount = this.itemAmountCalcService.getInvoiceItemAmount(\r\n      this.invoiceItem\r\n    );\r\n\r\n    if (this.isEdit) {\r\n      this.draftInvoicesStoreService.editDraftInvoiceItem(\r\n        this.invoiceOid,\r\n        this.invoiceItem\r\n      );\r\n      this.route.navigate(['invoice-create-edit', 'edit', this.invoiceOid]);\r\n    } else {\r\n      let newOid = this.draftInvoicesStoreService.addNewInvoiceItem(\r\n        this.invoiceItem,\r\n        this.invoiceOid\r\n      );\r\n      this.route.navigate(['invoice-create-edit', 'edit', newOid]);\r\n    }\r\n  }\r\n\r\n  // On tab index change set previous step form as touched\r\n  markFormAsTouched(changeObj: StepperSelectionEvent): void {\r\n    changeObj.previouslySelectedStep.stepControl?.markAllAsTouched();\r\n    if (changeObj.selectedIndex !== 0) {\r\n      if (this.invoiceItem.dimensions.outter) {\r\n        // TODO passpartu have to be selected\r\n        this.invoiceItem.passpartu.width =\r\n          (this.dimensionsInputAttributeForm.value.outterWidth -\r\n            this.invoiceItem.dimensions.width) /\r\n          2;\r\n      }\r\n    }\r\n  }\r\n\r\n  insertCount(): void {\r\n    this.subs.sink.insertCount = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertCount'),\r\n        UOM.PIECES,\r\n        false,\r\n        this.translateService.instant('countOfSameProducts'),\r\n        this.dimensionsInputAttributeForm.get('count').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('count')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n      });\r\n  }\r\n\r\n  insertWidthAndHeight(): void {\r\n    this.subs.sink.insertWidth = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        true,\r\n        this.translateService.instant('insertDimensionWidth'),\r\n        this.dimensionsInputAttributeForm.get('width').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('width')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n        if (data?.nextOperation) {\r\n          this.insertHeight();\r\n        }\r\n      });\r\n  }\r\n\r\n  insertHeight(): void {\r\n    this.subs.sink.insertHeight = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        false,\r\n        this.translateService.instant('insertDimensionHeight'),\r\n        this.dimensionsInputAttributeForm.get('height').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('height')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n      });\r\n  }\r\n\r\n  insertOutterWidthAndHeight(): void {\r\n    this.subs.sink.insertWidth = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        true,\r\n        this.translateService.instant('insertDimensionWidth'),\r\n        this.dimensionsInputAttributeForm.get('outterWidth').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('outterWidth')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n        if (data?.nextOperation) {\r\n          this.insertOutterHeight();\r\n        }\r\n      });\r\n  }\r\n\r\n  insertOutterHeight(): void {\r\n    this.subs.sink.insertHeight = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        false,\r\n        this.translateService.instant('insertDimensionHeight'),\r\n        this.dimensionsInputAttributeForm.get('outterHeight').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('outterHeight')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FramingRoutingModule } from './framing-routing.module';\r\nimport { FramingComponent } from './framing.component';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { IconsModule } from 'src/app/shared/modules/icons.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SelectionPopupModule } from '@features/selection-popup/selection-popup.module';\r\nimport { FacetingSandingPopupModule } from './faceting-sanding-selection-popup/faceting-sanding-popup.module';\r\nimport { KeyboardNumericModule } from 'src/app/shared/components/keyboard/numeric/keyboard-numeric.module';\r\nimport { KeyboardAlphabetModule } from 'src/app/shared/components/keyboard/alphabet/keyboard-alphabet.module';\r\n\r\n@NgModule({\r\n  declarations: [FramingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FramingRoutingModule,\r\n    MatStepperModule,\r\n    ReactiveFormsModule,\r\n    IconsModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    SelectionPopupModule,\r\n    FacetingSandingPopupModule,\r\n    KeyboardNumericModule,\r\n    KeyboardAlphabetModule,\r\n  ],\r\n  exports: [FramingComponent],\r\n})\r\nexport class FramingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { UOM } from 'src/app/shared/enums/uom-enum';\r\nimport { InvoiceItemModel } from 'src/app/shared/models/invoice-item.model';\r\n\r\nInjectable();\r\nexport class InvoiceItemAmountCalculatorService {\r\n  public getInvoiceItemAmount(invoiceItem: InvoiceItemModel): number {\r\n    console.log('IZRACUNAJ ZA:');\r\n    console.log(invoiceItem);\r\n    let glassPrice = 0;\r\n    let passpartuPrice = 0;\r\n    let mirrorPrice = 0;\r\n    let framesPrice = 0;\r\n    let facetingPrice = 0;\r\n    let sandingPrice = 0;\r\n    if (invoiceItem.glass) {\r\n      const surface =\r\n        this.getConstructionMeasure(invoiceItem.dimensions.height) *\r\n        this.getConstructionMeasure(invoiceItem.dimensions.width);\r\n      glassPrice = this.getPricePerUom(\r\n        { ppUom: invoiceItem.glass.pricePerUom, uom: invoiceItem.glass.uom },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.passpartu) {\r\n      const surface =\r\n        this.getConstructionMeasure(invoiceItem.dimensions.height) *\r\n        this.getConstructionMeasure(invoiceItem.dimensions.width);\r\n      passpartuPrice = this.getPricePerUom(\r\n        {\r\n          ppUom: invoiceItem.passpartu.value.passpartu.pricePerUom,\r\n          uom: invoiceItem.passpartu.value.passpartu.uom,\r\n        },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.mirror) {\r\n      const surface =\r\n        this.getConstructionMeasure(invoiceItem.dimensions.height) *\r\n        this.getConstructionMeasure(invoiceItem.dimensions.width);\r\n      mirrorPrice = this.getPricePerUom(\r\n        { ppUom: invoiceItem.mirror.pricePerUom, uom: invoiceItem.mirror.uom },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.faceting) {\r\n      const surface =\r\n        invoiceItem.dimensions.height * 2 + invoiceItem.dimensions.width * 2;\r\n      facetingPrice = this.getPricePerUom(\r\n        {\r\n          ppUom: invoiceItem.faceting.pricePerUom,\r\n          uom: invoiceItem.faceting.uom,\r\n        },\r\n        { count: surface, uom: UOM.CENTIMETER }\r\n      );\r\n    }\r\n    if (invoiceItem.sanding) {\r\n      const surface =\r\n        invoiceItem.dimensions.height * invoiceItem.dimensions.width;\r\n      sandingPrice = this.getPricePerUom(\r\n        {\r\n          ppUom: invoiceItem.sanding.pricePerUom,\r\n          uom: invoiceItem.sanding.uom,\r\n        },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.selectedFrames.length > 0) {\r\n      invoiceItem.selectedFrames.forEach((frame) => {\r\n        framesPrice += this.getFramePrice(\r\n          invoiceItem.dimensions.height,\r\n          invoiceItem.dimensions.width,\r\n          invoiceItem.dimensions.uom,\r\n          frame.frame.frameWidthMM,\r\n          frame.frame.pricePerUom,\r\n          frame.frame.uom\r\n        );\r\n      });\r\n    }\r\n    console.log('glassPrice');\r\n    console.log(glassPrice);\r\n    console.log('passpartuPrice');\r\n    console.log(passpartuPrice);\r\n    console.log('mirrorPrice');\r\n    console.log(mirrorPrice);\r\n    console.log('framesPrice');\r\n    console.log(framesPrice);\r\n    console.log('facetingPrice');\r\n    console.log(facetingPrice);\r\n    console.log('sandingPrice');\r\n    console.log(sandingPrice);\r\n    let grossAmount =\r\n      glassPrice +\r\n      passpartuPrice +\r\n      mirrorPrice +\r\n      framesPrice +\r\n      facetingPrice +\r\n      sandingPrice;\r\n    return this.roundOnDigits(grossAmount);\r\n  }\r\n\r\n  private getFramePrice(\r\n    imageHeight: number,\r\n    imageWidth: number,\r\n    imageUom: UOM,\r\n    frameWidthMM: number,\r\n    framePpUom: number,\r\n    frameUom: UOM\r\n  ): number {\r\n    let amount = 0;\r\n    let length = imageHeight * 2 + imageWidth * 2;\r\n    if (imageUom === UOM.CENTIMETER) {\r\n      if (frameUom === UOM.CENTIMETER) {\r\n        length += length + (frameWidthMM * 8) / 10;\r\n        amount = length * framePpUom;\r\n      } else if (frameUom === UOM.METER) {\r\n        length += length + (frameWidthMM * 8) / 10;\r\n        amount = (length * framePpUom) / 100;\r\n      }\r\n    }\r\n    return amount;\r\n  }\r\n\r\n  private getConstructionMeasure(num: number): number {\r\n    num++;\r\n    if (num % 3 === 0) {\r\n      return num;\r\n    } else if (num++) {\r\n      return num;\r\n    } else if (num++) {\r\n      return num;\r\n    }\r\n  }\r\n\r\n  private getPricePerUom(\r\n    price: { ppUom: number; uom: UOM },\r\n    unit: { count: number; uom: UOM }\r\n  ): number {\r\n    if (unit.uom === UOM.CENTIMETER2) {\r\n      if (price.uom === UOM.CENTIMETER2) {\r\n        return unit.count * price.ppUom;\r\n      } else if (price.uom === UOM.METER2) {\r\n        return (unit.count * price.ppUom) / 10000;\r\n      }\r\n    } else if (unit.uom === UOM.CENTIMETER) {\r\n      if (price.uom === UOM.CENTIMETER) {\r\n        return unit.count * price.ppUom;\r\n      } else if (price.uom === UOM.METER) {\r\n        return (unit.count * price.ppUom) / 100;\r\n      }\r\n    } else if (unit.uom === UOM.METER) {\r\n      if (price.uom === UOM.CENTIMETER) {\r\n        return unit.count * price.ppUom;\r\n      } else if (price.uom === UOM.METER) {\r\n        return (unit.count * price.ppUom) / 100;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  roundOnDigits(value: number, digits: number = 3): number {\r\n    return Math.round(value * Math.pow(10, digits)) / Math.pow(10, digits);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { SelectionItem } from './selection-item/selection-item.interface';\r\nimport { SelectionPopupComponent } from './selection-popup.component';\r\n\r\n@Injectable()\r\nexport class SelectionComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(items: SelectionItem[]): Observable<string> {\r\n    return new Observable((observer: Subscriber<string>) => {\r\n      const config: MatDialogConfig = new MatDialogConfig();\r\n      config.width = '80%';\r\n      config.height = '80%';\r\n      config.data = {\r\n        items,\r\n      };\r\n\r\n      this.subs.sink.$openSelectPopup = this._matDialog\r\n        .open(SelectionPopupComponent, config)\r\n        .afterClosed()\r\n        .subscribe(\r\n          (oid: string) => {\r\n            observer.next(oid);\r\n            observer.complete();\r\n          },\r\n          () => observer.error()\r\n        );\r\n    });\r\n  }\r\n}\r\n","<div class=\"item-card\" [ngClass]=\"{ selected: dataModel.selected }\">\r\n  <div\r\n    *ngIf=\"dataModel.thumbnailUrl\"\r\n    class=\"thumbnail\"\r\n    [style.background-image]=\"'url(' + dataModel.thumbnailUrl + ')'\"\r\n    [style.width]=\"'100%'\"\r\n    [style.height]=\"'100%'\"\r\n    [style.background-position]=\"'center'\"\r\n    [style.background-size]=\"'cover'\"\r\n    [style.background-repeat]=\"'no-repeat'\"\r\n    [style.opacity]=\"'0.5'\"\r\n  ></div>\r\n  <div class=\"container\">\r\n    <div class=\"name\">\r\n      <span> {{ dataModel.name }}</span>\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.uom\">\r\n      <span> {{ \"uom\" | translate }} : {{ dataModel.uom }}</span>\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.pricePerUom\">\r\n      <span> {{ \"ppUom\" | translate }} : {{ dataModel.pricePerUom }}</span>\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.frameWidthMM\">\r\n      <span>\r\n        {{ \"frameWidthMM\" | translate }} : {{ dataModel.frameWidthMM }}</span\r\n      >\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.cashRegisterNumber\">\r\n      <span>\r\n        {{ \"crNum\" | translate }} : {{ dataModel.cashRegisterNumber }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div class=\"checkbox\">\r\n    <mat-checkbox\r\n      [checked]=\"dataModel.selected\"\r\n      name=\"Primary\"\r\n      color=\"primary\"\r\n    ></mat-checkbox>\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SelectionItem } from './selection-item.interface';\r\n\r\n@Component({\r\n  selector: 'app-selection-item',\r\n  templateUrl: './selection-item.component.html',\r\n  styleUrls: ['./selection-item.component.scss'],\r\n  providers: [],\r\n})\r\nexport class SelectionItemComponent implements OnInit {\r\n  @Input() dataModel: SelectionItem;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SelectionItemComponent } from './selection-item.component';\r\nimport { IconsModule } from 'src/app/shared/modules/icons.module';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [SelectionItemComponent],\r\n  imports: [CommonModule, IconsModule, MatCheckboxModule, TranslateModule],\r\n  exports: [SelectionItemComponent],\r\n})\r\nexport class SelectionItemModule {}\r\n","<app-search-input (changeEvent)=\"searchInputEvent($event)\"></app-search-input>\r\n\r\n<mat-dialog-content>\r\n  <!-- <div\r\n    class=\"item\"\r\n    *ngFor=\"let item of items\"\r\n    (click)=\"!$event.defaultPrevented && handleItemClick(item)\"\r\n  >\r\n    {{ item.displayValue }}\r\n  </div> -->\r\n  <ng-container *ngFor=\"let item of items\">\r\n    <app-selection-item\r\n      class=\"item\"\r\n      [dataModel]=\"item\"\r\n      (click)=\"handleItemClick(item)\"\r\n      *ngIf=\"isSearchSatisfied(item.name)\"\r\n    ></app-selection-item>\r\n  </ng-container>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <app-button\r\n    [text]=\"'cancel' | translate\"\r\n    color=\"secondary\"\r\n    (clickEvent)=\"cancelSaveSelection()\"\r\n  ></app-button>\r\n</mat-dialog-actions>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { SelectionItem } from './selection-item/selection-item.interface';\r\n\r\nexport interface DialogData {\r\n  selectedOids: string[];\r\n  isSingleSelection: boolean;\r\n  items: SelectionItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-selection-popup',\r\n  templateUrl: './selection-popup.component.html',\r\n  styleUrls: ['./selection-popup.component.scss'],\r\n})\r\nexport class SelectionPopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  public selectedOids: string[] = [];\r\n  public isSingleSelection: boolean = true;\r\n  public items: SelectionItem[] = [];\r\n  searchValue: string = '';\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<SelectionPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.selectedOids = data?.selectedOids || [];\r\n    this.isSingleSelection = !(data.isSingleSelection === false);\r\n    this.items = data.items;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  searchInputEvent(searchValue: string): void {\r\n    this.searchValue = searchValue;\r\n  }\r\n\r\n  isSearchSatisfied(name: string): boolean {\r\n    return (\r\n      !this.searchValue ||\r\n      name.toLowerCase().includes(this.searchValue.toLowerCase())\r\n    );\r\n  }\r\n\r\n  handleItemClick(card: SelectionItem): void {\r\n    this.dialogRef.close(card.oid);\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close(this.selectedOids);\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SelectionPopupComponent } from '@features/selection-popup/selection-popup.component';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { SelectionItemModule } from './selection-item/selection-item.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SearchInputModule } from 'src/app/shared/components/search-input/search-input.module';\r\n\r\n@NgModule({\r\n  declarations: [SelectionPopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    ButtonModule,\r\n    SelectionItemModule,\r\n    TranslateModule,\r\n    SearchInputModule,\r\n  ],\r\n  exports: [SelectionPopupComponent],\r\n  entryComponents: [SelectionPopupComponent],\r\n})\r\nexport class SelectionPopupModule {}\r\n","export class Button {\r\n  key: string;\r\n  rs: { displayValue: string; displayValueCL: string };\r\n  en: { displayValue: string; displayValueCL: string };\r\n}\r\n\r\nexport class KeyboardButtons {\r\n  public ALL_BUTTONS: Button[] = [\r\n    {\r\n      key: '1',\r\n      rs: { displayValue: 'q', displayValueCL: 'Q' },\r\n      en: { displayValue: 'q', displayValueCL: 'Q' },\r\n    },\r\n    {\r\n      key: '2',\r\n      rs: { displayValue: 'w', displayValueCL: 'W' },\r\n      en: { displayValue: 'w', displayValueCL: 'W' },\r\n    },\r\n    {\r\n      key: '3',\r\n      rs: { displayValue: 'e', displayValueCL: 'E' },\r\n      en: { displayValue: 'e', displayValueCL: 'E' },\r\n    },\r\n    {\r\n      key: '4',\r\n      rs: { displayValue: 'r', displayValueCL: 'R' },\r\n      en: { displayValue: 'r', displayValueCL: 'R' },\r\n    },\r\n    {\r\n      key: '5',\r\n      rs: { displayValue: 't', displayValueCL: 'T' },\r\n      en: { displayValue: 't', displayValueCL: 'T' },\r\n    },\r\n    {\r\n      key: '6',\r\n      rs: { displayValue: 'z', displayValueCL: 'Z' },\r\n      en: { displayValue: 'y', displayValueCL: 'Y' },\r\n    },\r\n    {\r\n      key: '7',\r\n      rs: { displayValue: 'u', displayValueCL: 'U' },\r\n      en: { displayValue: 'u', displayValueCL: 'U' },\r\n    },\r\n    {\r\n      key: '8',\r\n      rs: { displayValue: 'i', displayValueCL: 'I' },\r\n      en: { displayValue: 'i', displayValueCL: 'I' },\r\n    },\r\n    {\r\n      key: '9',\r\n      rs: { displayValue: 'o', displayValueCL: 'O' },\r\n      en: { displayValue: 'o', displayValueCL: 'O' },\r\n    },\r\n    {\r\n      key: '10',\r\n      rs: { displayValue: 'p', displayValueCL: 'P' },\r\n      en: { displayValue: 'p', displayValueCL: 'P' },\r\n    },\r\n    {\r\n      key: '11',\r\n      rs: { displayValue: 'š', displayValueCL: 'Š' },\r\n      en: { displayValue: '[', displayValueCL: '{' },\r\n    },\r\n    {\r\n      key: '12',\r\n      rs: { displayValue: 'đ', displayValueCL: 'Đ' },\r\n      en: { displayValue: ']', displayValueCL: '}' },\r\n    },\r\n    {\r\n      key: '13',\r\n      rs: { displayValue: 'a', displayValueCL: 'A' },\r\n      en: { displayValue: 'a', displayValueCL: 'A' },\r\n    },\r\n    {\r\n      key: '14',\r\n      rs: { displayValue: 's', displayValueCL: 'S' },\r\n      en: { displayValue: 's', displayValueCL: 'S' },\r\n    },\r\n    {\r\n      key: '15',\r\n      rs: { displayValue: 'd', displayValueCL: 'D' },\r\n      en: { displayValue: 'd', displayValueCL: 'D' },\r\n    },\r\n    {\r\n      key: '16',\r\n      rs: { displayValue: 'f', displayValueCL: 'F' },\r\n      en: { displayValue: 'f', displayValueCL: 'F' },\r\n    },\r\n    {\r\n      key: '17',\r\n      rs: { displayValue: 'g', displayValueCL: 'G' },\r\n      en: { displayValue: 'g', displayValueCL: 'G' },\r\n    },\r\n    {\r\n      key: '18',\r\n      rs: { displayValue: 'h', displayValueCL: 'H' },\r\n      en: { displayValue: 'h', displayValueCL: 'H' },\r\n    },\r\n    {\r\n      key: '19',\r\n      rs: { displayValue: 'j', displayValueCL: 'J' },\r\n      en: { displayValue: 'j', displayValueCL: 'J' },\r\n    },\r\n    {\r\n      key: '20',\r\n      rs: { displayValue: 'k', displayValueCL: 'K' },\r\n      en: { displayValue: 'k', displayValueCL: 'K' },\r\n    },\r\n    {\r\n      key: '21',\r\n      rs: { displayValue: 'l', displayValueCL: 'L' },\r\n      en: { displayValue: 'l', displayValueCL: 'L' },\r\n    },\r\n    {\r\n      key: '22',\r\n      rs: { displayValue: 'č', displayValueCL: 'Č' },\r\n      en: { displayValue: ';', displayValueCL: ':' },\r\n    },\r\n    {\r\n      key: '23',\r\n      rs: { displayValue: 'ć', displayValueCL: 'Ć' },\r\n      en: { displayValue: '\"', displayValueCL: '\"' },\r\n    },\r\n    {\r\n      key: '24',\r\n      rs: { displayValue: 'ž', displayValueCL: 'Ž' },\r\n      en: { displayValue: '|', displayValueCL: '|' },\r\n    },\r\n    {\r\n      key: '25',\r\n      rs: { displayValue: 'y', displayValueCL: 'Y' },\r\n      en: { displayValue: 'z', displayValueCL: 'Z' },\r\n    },\r\n    {\r\n      key: '26',\r\n      rs: { displayValue: 'x', displayValueCL: 'X' },\r\n      en: { displayValue: 'x', displayValueCL: 'X' },\r\n    },\r\n    {\r\n      key: '27',\r\n      rs: { displayValue: 'c', displayValueCL: 'C' },\r\n      en: { displayValue: 'c', displayValueCL: 'C' },\r\n    },\r\n    {\r\n      key: '28',\r\n      rs: { displayValue: 'v', displayValueCL: 'V' },\r\n      en: { displayValue: 'v', displayValueCL: 'V' },\r\n    },\r\n    {\r\n      key: '29',\r\n      rs: { displayValue: 'b', displayValueCL: 'B' },\r\n      en: { displayValue: 'b', displayValueCL: 'B' },\r\n    },\r\n    {\r\n      key: '30',\r\n      rs: { displayValue: 'n', displayValueCL: 'N' },\r\n      en: { displayValue: 'n', displayValueCL: 'N' },\r\n    },\r\n    {\r\n      key: '31',\r\n      rs: { displayValue: 'm', displayValueCL: 'M' },\r\n      en: { displayValue: 'm', displayValueCL: 'M' },\r\n    },\r\n    {\r\n      key: '32',\r\n      rs: { displayValue: ',', displayValueCL: ';' },\r\n      en: { displayValue: ',', displayValueCL: '<' },\r\n    },\r\n    {\r\n      key: '33',\r\n      rs: { displayValue: '.', displayValueCL: ':' },\r\n      en: { displayValue: '.', displayValueCL: '>' },\r\n    },\r\n    {\r\n      key: '34',\r\n      rs: { displayValue: '-', displayValueCL: '_' },\r\n      en: { displayValue: '/', displayValueCL: '?' },\r\n    },\r\n    {\r\n      key: '35',\r\n      rs: { displayValue: '`', displayValueCL: '~' },\r\n      en: { displayValue: '`', displayValueCL: '~' },\r\n    },\r\n    {\r\n      key: '36',\r\n      rs: { displayValue: '1', displayValueCL: '!' },\r\n      en: { displayValue: '1', displayValueCL: '!' },\r\n    },\r\n    {\r\n      key: '37',\r\n      rs: { displayValue: '2', displayValueCL: '\"' },\r\n      en: { displayValue: '2', displayValueCL: '@' },\r\n    },\r\n    {\r\n      key: '38',\r\n      rs: { displayValue: '3', displayValueCL: '#' },\r\n      en: { displayValue: '3', displayValueCL: '#' },\r\n    },\r\n    {\r\n      key: '39',\r\n      rs: { displayValue: '4', displayValueCL: '$' },\r\n      en: { displayValue: '4', displayValueCL: '$' },\r\n    },\r\n    {\r\n      key: '40',\r\n      rs: { displayValue: '5', displayValueCL: '%' },\r\n      en: { displayValue: '5', displayValueCL: '%' },\r\n    },\r\n    {\r\n      key: '41',\r\n      rs: { displayValue: '6', displayValueCL: '&' },\r\n      en: { displayValue: '6', displayValueCL: '^' },\r\n    },\r\n    {\r\n      key: '42',\r\n      rs: { displayValue: '7', displayValueCL: '/' },\r\n      en: { displayValue: '7', displayValueCL: '&' },\r\n    },\r\n    {\r\n      key: '43',\r\n      rs: { displayValue: '8', displayValueCL: '(' },\r\n      en: { displayValue: '8', displayValueCL: '*' },\r\n    },\r\n    {\r\n      key: '44',\r\n      rs: { displayValue: '9', displayValueCL: ')' },\r\n      en: { displayValue: '9', displayValueCL: '(' },\r\n    },\r\n    {\r\n      key: '45',\r\n      rs: { displayValue: '0', displayValueCL: '=' },\r\n      en: { displayValue: '0', displayValueCL: ')' },\r\n    },\r\n    {\r\n      key: '46',\r\n      rs: { displayValue: '?', displayValueCL: '?' },\r\n      en: { displayValue: '-', displayValueCL: '_' },\r\n    },\r\n    {\r\n      key: '47',\r\n      rs: { displayValue: '+', displayValueCL: '*' },\r\n      en: { displayValue: '=', displayValueCL: '+' },\r\n    },\r\n  ];\r\n\r\n  getButtonById(key: string): Button {\r\n    return this.ALL_BUTTONS.find((b) => b.key === key);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { KeyboardAlphabetComponent } from './keyboard-alphabet.component';\r\n\r\n@Injectable()\r\nexport class KeyboardAlphabetComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  /*\r\n  EXAMPLE\r\n  this.subs.sink.$inputText =\r\n  this.keyboardAlphabetComponentService.openDialog().subscribe((text) => {\r\n    if (text!==undefined) {\r\n      // TODO set text to value\r\n    }\r\n  });\r\n*/\r\n\r\n  openDialog(value: string = '', title: string = ''): Observable<string> {\r\n    return new Observable((observer: Subscriber<string>) => {\r\n      const config: MatDialogConfig = new MatDialogConfig();\r\n      // config.width = '80%';\r\n      // config.height = '80%';\r\n      config.data = {\r\n        value,\r\n        title,\r\n      };\r\n\r\n      this.subs.sink.$openSelectPopup = this._matDialog\r\n        .open(KeyboardAlphabetComponent, config)\r\n        .afterClosed()\r\n        .subscribe(\r\n          (text: string) => {\r\n            observer.next(text);\r\n            observer.complete();\r\n          },\r\n          () => observer.error()\r\n        );\r\n    });\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"input\">\r\n    <form [formGroup]=\"valueForm\">\r\n      <mat-form-field class=\"field\">\r\n        <mat-label>{{ inputFieldTitle }}</mat-label>\r\n        <input\r\n          matInput\r\n          #inputValue\r\n          formControlName=\"value\"\r\n          [width]=\"100\"\r\n          class=\"center\"\r\n        />\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <div class=\"content\">\r\n    <div class=\"row-zero\">\r\n      <div class=\"empty-div\"></div>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonZeroRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n      <app-button\r\n        class=\"button-key backspace\"\r\n        [iconName]=\"'arrow-left'\"\r\n        [color]=\"'secondary'\"\r\n        [buttonSize]=\"'middle'\"\r\n        [fullWidth]=\"true\"\r\n        (clickEvent)=\"backspaceClicked()\"\r\n      ></app-button>\r\n    </div>\r\n    <div class=\"row-first\">\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('SR')\"\r\n        [text]=\"'SR'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"!(language === 'SR')\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('EN')\"\r\n        [text]=\"'EN'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"!(language === 'EN')\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key language\"\r\n      ></app-button>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonFirstRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n    </div>\r\n    <div class=\"row-second\">\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('capsLock')\"\r\n        [text]=\"'Caps Lock'\"\r\n        [isTransparentMode]=\"!capsLockActive\"\r\n        [buttonSize]=\"'middle'\"\r\n        [fullWidth]=\"true\"\r\n        class=\"button-key caps-lock\"\r\n      ></app-button>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonSecondRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n    </div>\r\n    <div class=\"row-third\">\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('shift')\"\r\n        [text]=\"'Shift'\"\r\n        [isTransparentMode]=\"!shiftActive\"\r\n        [buttonSize]=\"'middle'\"\r\n        [fullWidth]=\"true\"\r\n        class=\"button-key shift\"\r\n      ></app-button>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonThirdRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row-fourth\">\r\n    <app-button\r\n      (clickEvent)=\"specialButtonClicked('space')\"\r\n      [text]=\"'space' | translate\"\r\n      [isTransparentMode]=\"true\"\r\n      [buttonSize]=\"'middle'\"\r\n      class=\"button-key\"\r\n      [fullWidth]=\"true\"\r\n    ></app-button>\r\n  </div>\r\n  <div class=\"footer\">\r\n    <app-button\r\n      [iconName]=\"'arrow-left'\"\r\n      (clickEvent)=\"cancelSaveSelection()\"\r\n      [isSquare]=\"true\"\r\n      [color]=\"'danger'\"\r\n    ></app-button>\r\n    <app-button\r\n      [iconName]=\"'check'\"\r\n      [isSquare]=\"true\"\r\n      (clickEvent)=\"saveSelection()\"\r\n      [color]=\"'success'\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { Button, KeyboardButtons } from './all-buttons';\r\n\r\nexport interface DialogData {\r\n  title: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-keyboard-alphabet',\r\n  templateUrl: './keyboard-alphabet.component.html',\r\n  styleUrls: ['./keyboard-alphabet.component.scss'],\r\n})\r\nexport class KeyboardAlphabetComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n  language: 'SR' | 'EN' = 'SR';\r\n\r\n  buttonZeroRow: string[] = [\r\n    '35',\r\n    '36',\r\n    '37',\r\n    '38',\r\n    '39',\r\n    '40',\r\n    '41',\r\n    '42',\r\n    '43',\r\n    '44',\r\n    '45',\r\n    '46',\r\n  ];\r\n  buttonFirstRow: string[] = [\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    '10',\r\n    '11',\r\n    '12',\r\n  ];\r\n  buttonSecondRow: string[] = [\r\n    '13',\r\n    '14',\r\n    '15',\r\n    '16',\r\n    '17',\r\n    '18',\r\n    '19',\r\n    '20',\r\n    '21',\r\n    '22',\r\n    '23',\r\n    '24',\r\n  ];\r\n  buttonThirdRow: string[] = [\r\n    '25',\r\n    '26',\r\n    '27',\r\n    '28',\r\n    '29',\r\n    '30',\r\n    '31',\r\n    '32',\r\n    '33',\r\n    '34',\r\n  ];\r\n\r\n  title: string = '';\r\n  inputFieldTitle: string = '';\r\n  @ViewChild('inputValue') inputValue: ElementRef;\r\n  valueForm: FormGroup;\r\n\r\n  capsLockActive: boolean = false;\r\n  shiftActive: boolean = false;\r\n  private keyboardButtons: KeyboardButtons = new KeyboardButtons();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<KeyboardAlphabetComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.title = data?.title || '';\r\n    this.valueForm = new FormGroup({\r\n      value: new FormControl(data?.value ? data.value : '', []),\r\n    });\r\n  }\r\n\r\n  get valueControl(): AbstractControl | null {\r\n    return this.valueForm.get('value');\r\n  }\r\n\r\n  getButton(key: string): Button {\r\n    return this.keyboardButtons.getButtonById(key);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.inputValue.nativeElement.focus();\r\n      this.inputValue.nativeElement.select();\r\n    });\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close(this.valueForm.value.value);\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  keyClicked(key: string): void {\r\n    const button = this.keyboardButtons.getButtonById(key);\r\n    this.valueControl.setValue(\r\n      this.valueControl.value +\r\n        (this.language === 'SR'\r\n          ? this.capsLockActive || this.shiftActive\r\n            ? button.rs.displayValueCL\r\n            : button.rs.displayValue\r\n          : this.capsLockActive || this.shiftActive\r\n          ? button.en.displayValueCL\r\n          : button.en.displayValue)\r\n    );\r\n    this.shiftActive = false;\r\n  }\r\n\r\n  specialButtonClicked(type: string): void {\r\n    switch (type) {\r\n      case 'SR':\r\n        this.language = 'SR';\r\n        break;\r\n      case 'EN':\r\n        this.language = 'EN';\r\n        break;\r\n      case 'capsLock':\r\n        this.capsLockActive = !this.capsLockActive;\r\n        break;\r\n      case 'shift':\r\n        this.shiftActive = true;\r\n        break;\r\n      case 'space':\r\n        this.valueControl.setValue(this.valueControl.value + ' ');\r\n        break;\r\n    }\r\n  }\r\n\r\n  backspaceClicked(): void {\r\n    if (this.valueControl.value.length > 0) {\r\n      this.valueControl.setValue(this.valueControl.value.slice(0, -1));\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { KeyboardAlphabetComponent } from './keyboard-alphabet.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [KeyboardAlphabetComponent],\r\n  declarations: [KeyboardAlphabetComponent],\r\n})\r\nexport class KeyboardAlphabetModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { UOM } from 'src/app/shared/enums/uom-enum';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { KeyboardNumericComponent } from './keyboard-numeric.component';\r\n\r\n@Injectable()\r\nexport class KeyboardNumericComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(\r\n    title: string,\r\n    uom: UOM,\r\n    showNextOperationButton: boolean,\r\n    inputFieldTitle: string,\r\n    value: number = 0,\r\n    codeInput: boolean = false\r\n  ): Observable<{ value: string; nextOperation: boolean }> {\r\n    return new Observable(\r\n      (observer: Subscriber<{ value: string; nextOperation: boolean }>) => {\r\n        const config: MatDialogConfig = new MatDialogConfig();\r\n\r\n        config.data = {\r\n          title,\r\n          uom,\r\n          value,\r\n          showNextOperationButton,\r\n          inputFieldTitle,\r\n          codeInput,\r\n        };\r\n\r\n        this.subs.sink.$openSelectPopup = this._matDialog\r\n          .open(KeyboardNumericComponent, config)\r\n          .afterClosed()\r\n          .subscribe(\r\n            (data: { value: string; nextOperation: boolean }) => {\r\n              observer.next(data);\r\n              observer.complete();\r\n            },\r\n            () => observer.error()\r\n          );\r\n      }\r\n    );\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"content\">\r\n    <div class=\"header\">\r\n      <div class=\"title\">{{ title }}</div>\r\n    </div>\r\n    <div class=\"input-container\">\r\n      <div class=\"input\">\r\n        <form [formGroup]=\"valueForm\">\r\n          <mat-form-field class=\"field\">\r\n            <mat-label>{{ inputFieldTitle }}</mat-label>\r\n            <input\r\n              matInput\r\n              #inputValue\r\n              (keyup)=\"checkIsNumber($event)\"\r\n              formControlName=\"value\"\r\n            />\r\n          </mat-form-field>\r\n        </form>\r\n        <div class=\"uom\">\r\n          {{ uom | translate }}\r\n        </div>\r\n      </div>\r\n      <div class=\"buttons\">\r\n        <app-button\r\n          class=\"button\"\r\n          [iconName]=\"'arrow-left'\"\r\n          [isSquare]=\"true\"\r\n          [color]=\"'secondary'\"\r\n          (clickEvent)=\"backspaceClicked()\"\r\n        ></app-button>\r\n        <app-button\r\n          class=\"button\"\r\n          *ngIf=\"showNextOperationButton\"\r\n          [disabled]=\"valueForm.invalid\"\r\n          [iconName]=\"'x'\"\r\n          [isSquare]=\"true\"\r\n          (clickEvent)=\"saveSelection(true)\"\r\n        ></app-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"grid-container\">\r\n      <app-button\r\n        [text]=\"'7'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('7')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'8'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('8')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'9'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('9')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'4'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('4')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [isSquare]=\"true\"\r\n        [text]=\"'5'\"\r\n        (clickEvent)=\"numberClicked('5')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'6'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('6')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'1'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('1')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'2'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('2')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'3'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('3')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'0'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('0')\"\r\n        [color]=\"'secondary'\"\r\n        class=\"grid-item\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'.'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('.')\"\r\n        [color]=\"'secondary'\"\r\n        class=\"grid-item\"\r\n      ></app-button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <app-button\r\n      [iconName]=\"'arrow-left'\"\r\n      (clickEvent)=\"cancelSaveSelection()\"\r\n      [isSquare]=\"true\"\r\n      [color]=\"'danger'\"\r\n    ></app-button>\r\n    <app-button\r\n      [disabled]=\"valueForm.invalid\"\r\n      [iconName]=\"'check'\"\r\n      [isSquare]=\"true\"\r\n      (clickEvent)=\"saveSelection()\"\r\n      [color]=\"'success'\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { MODE } from '../../me-basic-alert/me-basic-alert.interface';\r\n\r\nexport interface DialogData {\r\n  title: string;\r\n  uom: string;\r\n  value: number;\r\n  showNextOperationButton: boolean;\r\n  inputFieldTitle: string;\r\n  codeInput: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-keyboard-numeric',\r\n  templateUrl: './keyboard-numeric.component.html',\r\n  styleUrls: ['./keyboard-numeric.component.scss'],\r\n})\r\nexport class KeyboardNumericComponent implements OnInit, AfterViewInit {\r\n  title: string = '';\r\n  uom: string = '';\r\n  showNextOperationButton: boolean = false;\r\n  inputFieldTitle: string = '';\r\n  @ViewChild('inputValue') inputValue: ElementRef;\r\n  valueForm: FormGroup;\r\n  initialLoad: boolean = false;\r\n  codeInput: boolean = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<KeyboardNumericComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef,\r\n    private globalService: GlobalService,\r\n    private translateService: TranslateService\r\n  ) {\r\n    this.title = data.title;\r\n    this.uom = data.uom;\r\n    this.showNextOperationButton = data.showNextOperationButton;\r\n    this.inputFieldTitle = data.inputFieldTitle;\r\n    this.valueForm = new FormGroup({\r\n      value: new FormControl(data.value ? data.value : '0', [\r\n        Validators.min(0),\r\n      ]),\r\n    });\r\n    this.codeInput = data.codeInput;\r\n  }\r\n\r\n  get valueControl(): AbstractControl | null {\r\n    return this.valueForm.get('value');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initialLoad = true;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.inputValue.nativeElement.focus();\r\n      this.inputValue.nativeElement.select();\r\n    });\r\n  }\r\n\r\n  public saveSelection(nextOperation: boolean = false): void {\r\n    this.dialogRef.close({\r\n      value: this.valueForm.value.value,\r\n      nextOperation,\r\n    });\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  numberClicked(event: string): void {\r\n    if (this.initialLoad) {\r\n      this.valueControl.setValue('0');\r\n      if (this.codeInput) {\r\n        this.valueControl.setValue('');\r\n      }\r\n      this.initialLoad = false;\r\n    }\r\n    switch (event) {\r\n      case '1':\r\n      case '2':\r\n      case '3':\r\n      case '4':\r\n      case '5':\r\n      case '6':\r\n      case '7':\r\n      case '8':\r\n      case '9':\r\n      case '0':\r\n        if (this.valueControl.value === '0' && !this.codeInput) {\r\n          this.valueControl.setValue('');\r\n        }\r\n        this.valueControl.setValue(this.valueControl.value + event);\r\n        break;\r\n      case '.':\r\n        if (!this.valueControl.value.includes('.')) {\r\n          this.valueControl.setValue(this.valueControl.value + event);\r\n        }\r\n        break;\r\n    }\r\n    this.inputValue.nativeElement.focus();\r\n  }\r\n\r\n  backspaceClicked(): void {\r\n    if (this.valueControl.value.slice(-1) === '.') {\r\n      this.valueControl.setValue(this.valueControl.value.slice(0, -1));\r\n    }\r\n    if (this.valueControl.value.length > 0) {\r\n      this.valueControl.setValue(this.valueControl.value.slice(0, -1));\r\n    }\r\n    if (this.valueControl.value.length === 0) {\r\n      this.valueControl.setValue('0');\r\n    }\r\n  }\r\n\r\n  checkIsNumber(event): void {\r\n    if (event.key === 'Enter') {\r\n      this.saveSelection(this.showNextOperationButton);\r\n    }\r\n    if (isNaN(+this.valueForm.get('value').value)) {\r\n      this.globalService.showBasicAlert(\r\n        MODE.error,\r\n        this.translateService.instant('inputError'),\r\n        this.translateService.instant('onlyNumbersAreAllowed')\r\n      );\r\n    } else {\r\n      this.initialLoad = false;\r\n    }\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { KeyboardNumericComponent } from './keyboard-numeric.component';\r\n\r\n@NgModule({\r\n  declarations: [KeyboardNumericComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [KeyboardNumericComponent],\r\n  entryComponents: [KeyboardNumericComponent],\r\n})\r\nexport class KeyboardNumericModule {}\r\n","<mat-form-field class=\"me-search-input-form-field\">\r\n  <mat-label>{{ \"searchFor\" | translate }}</mat-label>\r\n  <input\r\n    type=\"text\"\r\n    matInput\r\n    [formControl]=\"searchInput\"\r\n    [autocomplete]=\"'off'\"\r\n  />\r\n  <i-feather\r\n    *ngIf=\"!searchInput.value\"\r\n    matSuffix\r\n    name=\"search\"\r\n    class=\"search-icon\"\r\n  ></i-feather>\r\n  <i-feather\r\n    *ngIf=\"searchInput.value\"\r\n    (click)=\"resetSearchInputValue()\"\r\n    name=\"x\"\r\n    class=\"close\"\r\n    matSuffix\r\n  ></i-feather>\r\n</mat-form-field>\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search-input',\r\n  templateUrl: './search-input.component.html',\r\n  styleUrls: ['./search-input.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SearchInputComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() keyword: string = '';\r\n  @Input() debounceTime: number = 100;\r\n  @Input() minCharacters: number = 1;\r\n  @Output() changeEvent: EventEmitter<string> = new EventEmitter();\r\n\r\n  searchInput: FormControl = new FormControl();\r\n\r\n  private inputChangeSubscription!: Subscription;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.inputChangeSubscription = this.searchInput.valueChanges\r\n      .pipe(debounceTime(this.debounceTime))\r\n      .subscribe(() => {\r\n        if (this.searchInput.value.length === 0) {\r\n          this.changeEvent.emit(this.searchInput.value);\r\n        } else if (this.searchInput.value.length >= this.minCharacters) {\r\n          this.changeEvent.emit(this.searchInput.value);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.keyword && changes.keyword.previousValue) {\r\n      if (changes.keyword.currentValue !== changes.keyword.previousValue) {\r\n        // if the change is comming from outside we are not emiting, just setting the value\r\n        this.searchInput.setValue(this.keyword, { emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  resetSearchInputValue(): void {\r\n    this.searchInput.setValue('');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.inputChangeSubscription.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SearchInputComponent } from './search-input.component';\r\nimport { IconsModule } from '../../modules/icons.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [SearchInputComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    IconsModule,\r\n    TranslateModule,\r\n    MatFormFieldModule,\r\n  ],\r\n  exports: [SearchInputComponent],\r\n})\r\nexport class SearchInputModule {}\r\n","export class Constants {\r\n  public static THUMBNAIL_GLASS = 'assets/glass_thumbnail.jpg';\r\n  public static THUMBNAIL_FRAME = 'assets/frames_thumbnail.jpg';\r\n  public static THUMBNAIL_PASSPARTU = 'assets/passpartu_thumbnail.jpg';\r\n  public static THUMBNAIL_MIRROR = 'assets/mirror_thumbnail.jpg';\r\n  public static THUMBNAIL_FACETING = 'assets/faceting_thumbnail.jpg';\r\n  public static THUMBNAIL_SANDING = 'assets/sanding_thumbnail.jpeg';\r\n}\r\n"]}