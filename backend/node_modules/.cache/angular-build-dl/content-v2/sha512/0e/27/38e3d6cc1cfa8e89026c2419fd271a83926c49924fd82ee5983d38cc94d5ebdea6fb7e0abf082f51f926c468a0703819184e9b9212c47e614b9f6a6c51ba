{"version":3,"file":"src_app_features_invoice-create-edit_framing_framing_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAoD;AACW;AACqB;AACJ;AACrC;AAC+O;AACvP;AACmB;;AAEtD;AACA;AACA;AACA,cAAc,yGAAyG;AACvH;AACwC;AACI;;AAE5C,mDAAmD;AACnD,IAAI,0DAAmB;AACvB;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,yDAAyD,gCAAgC,+DAAwB,CAAC,qDAAiB;AACnI,mCAAmC,+DAAwB,GAAG,yFAAyF;AACvJ;AACA;AACA,MAAM,MAAM,qDAAU;AACtB;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,qDAAiB,EAAE,IAAI,UAAU;AACvE,IAAI,KAAK,EAAE,EAMV;;AAED;AACA;AACA;AACA,cAAc,yGAAyG;AACvH;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,uDAAuD,+BAA+B,+DAAwB,CAAC,sDAAkB;AACjI,kCAAkC,+DAAwB,GAAG,2DAA2D;AACxH;AACA;AACA,MAAM,MAAM,sDAAW;AACvB;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,sDAAkB,EAAE,IAAI,UAAU;AACxE,IAAI,KAAK,EAAE,EAMV;;AAED;AACA;AACA;AACA,cAAc,yGAAyG;AACvH;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAqBV;AACD;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,mCAAmC,yDAAc;AACjD;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAcV;AACD;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,yBAAyB,4EAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,yBAAyB,4EAAqB;AAC9C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,kCAAkC,4EAAqB;AACvD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,4BAA4B,4EAAqB;AACjD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,0BAA0B,+DAAwB,CAAC,yDAAU;AAC1G,4BAA4B;AAC5B,wCAAwC,+DAAwB;AAChE,6BAA6B,+DAAwB,GAAG,+GAA+G;AACvK,QAAQ,4DAAqB;AAC7B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,+CAA+C;AACtD,QAAQ,yDAAkB,CAAC,sDAAW;AACtC,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,YAAY,mRAAmR,oCAAoC,kEAA2B,8FAA8F;AACnc,QAAQ,6DAAsB;AAC9B,QAAQ,wDAAiB;AACzB,OAAO,wCAAwC;AAC/C;AACA;AACA,MAAM,iCAAiC,MAAM,iDAAM,SAAS,yDAAU;AACtE,gCAAgC;AAChC;AACA,0CAA0C,GAAG;AAC7C,MAAM,gCAAgC,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,mCAAmC;AACzG;AACA;AACA,kBAAkB,MAAM,uDAAY,yBAAyB;AAC7D,gBAAgB,MAAM,oDAAS,SAAS,sDAAW,IAAI,cAAc,IAAI;AACzE,oBAAoB,MAAM,gDAAK,EAAE;AACjC,cAAc,MAAM,gDAAK,EAAE;AAC3B,qBAAqB,MAAM,gDAAK,EAAE;AAClC,kBAAkB,MAAM,gDAAK,yBAAyB;AACtD,uBAAuB,MAAM,gDAAK,8BAA8B;AAChE,cAAc,MAAM,gDAAK,EAAE;AAC3B,iBAAiB,MAAM,gDAAK,EAAE;AAC9B,iBAAiB,MAAM,gDAAK,EAAE;AAC9B,kBAAkB,MAAM,gDAAK,EAAE;AAC/B,iBAAiB,MAAM,gDAAK,EAAE;AAC9B;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA,+BAA+B,iEAAsB;AACrD,iCAAiC,yEAA8B;AAC/D,aAAa;AACb,KAAK,iBAAiB,UAAU;AAChC,sBAAsB,iDAAM;AAC5B,uBAAuB,yDAAU;AACjC,gDAAgD;AAChD;AACA,aAAa,GAAG,IAAI;AACpB,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B;AACA,aAAa,GAAG,IAAI,IAAI;AACxB,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,uDAAY;AAC9B;AACA,SAAS;AACT,kBAAkB,oDAAS;AAC3B,mBAAmB,sDAAW,IAAI,cAAc;AAChD,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,gDAAK;AACvB;AACA,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS,GAAG,IAAI;AAChB,IAAI,KAAK,EAAE,EAsFV;AACD;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,yCAAO;AACrC;AACA;AACA;AACA;AACA;AACA,mCAAmC,uDAAY;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,4EAAqB;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB,yBAAyB,2EAAoB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,mFAAmF,GAAG;AACtF;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,+BAA+B,8DAAe;AAC9C;AACA;AACA,kCAAkC,GAAG,0BAA0B,wCAAE;AACjE,kBAAkB,yDAAS,2BAA2B,yDAAS;AAC/D;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA,gCAAgC,yDAAS;AACzC,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,iCAAiC,cAAc,GAAG,EAAE;AACpD;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mCAAmC,cAAc,GAAG,EAAE;AACtD;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB,4BAA4B,qEAAc;AAC1C,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,yBAAyB,wDAAK,gBAAgB,wDAAK;AACnD;AACA;AACA;AACA,6BAA6B,uDAAI;AACjC;AACA;AACA;AACA,6BAA6B,sDAAG;AAChC;AACA;AACA;AACA;AACA;AACA;AACA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,EAAE,EAKV;AACD;AACA;AACA,UAAU;AACV;AACA,yCAAyC,yDAAc;AACvD;AACA;AACA,CAAC;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,sCAAsC,yDAAc;;AAEpD;AACA;AACA;AACA,cAAc,yGAAyG;AACvH;AACA;AACA,WAAW,GAAG;AACd;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,aAAa,6DAAiB;AAC9B,iBAAiB,yDAAU;AAC3B,gBAAgB;AAChB;AACA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAWV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD,WAAW,GAAG;AACd,8BAA8B,qEAAa,CAAC,kEAAU,CAAC,0EAAkB,CAAC,qEAAa;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,eAAe;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;AACA,uCAAuC,uDAAY;AACnD;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,oBAAoB;AACpB;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB,UAAU,0BAA0B;AACxD;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA,0BAA0B,iBAAiB,4EAAqB;AAChE;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB;AACpB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB,yBAAyB,4EAAqB;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,0BAA0B;AAC1B;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,8BAA8B,4EAAqB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,IAAI;AACnB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,WAAW;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB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AAyC,yBAAyB,qBAAqB,mEAAe,2CAA2C,IAAI;;AAE3Y;AACA;AACA;AACA,cAAc,yGAAyG;AACvH;;AAEA;AACA;AACA;;AAEqS;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACp6B1C;AACtL;AACP;AACnB;AACmB;AACe;AAC3B;AACO;;AAEzD;AACA;AACA;AACA,cAAc,yGAAyG;AACvH;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACwC;AACO;AACK;;AAEpD;AACA;AACA,uDAAuD,SAAS;AAChE;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,0DAA0D,IAAI;AAC9D;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAMV;AACD;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B,0CAA0C,GAAG;AAC7C;AACA;AACA,mCAAmC,GAAG;AACtC;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAOV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB,6CAA6C,GAAG,+BAA+B,+DAAoB;AACnG;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,uCAAuC,GAAG;AAC1C,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB,6CAA6C,GAAG,+BAA+B,+DAAoB;AACnG;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,uCAAuC,GAAG;AAC1C,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,oBAAoB,GAAG;AACvB,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,GAAG;AACvB,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB,6CAA6C,uEAA4B;AACzE;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,mBAAmB,wCAAE;AACrB;AACA,4EAA4E,mDAAG;AAC/E,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA,sDAAsD,GAAG,mBAAmB,mDAAG;AAC/E,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA,eAAe,gDAAU;AACzB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,wCAAE;AACrB;AACA;AACA;AACA,4DAA4D,mDAAG;AAC/D,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA,8CAA8C,mDAAG;AACjD,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA,mBAAmB,wCAAE;AACrB;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA,sEAAsE,0DAAU;AAChF,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA,2BAA2B,GAAG;AAC9B,qDAAqD,uEAA4B;AACjF;AACA;AACA,2BAA2B,GAAG;AAC9B,8DAA8D,KAAK,UAAU,YAAY;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wCAAE;AACzB,aAAa;AACb,SAAS;AACT;AACA;AACA,eAAe,8CAAQ,4BAA4B,mDAAG;AACtD,oBAAoB;AACpB;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,gDAAgD,QAAQ;AACxD,uBAAuB,GAAG;AAC1B;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,kBAAkB,mDAAG;AACrB,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,wCAAE;AACrB;AACA,+CAA+C,mDAAG;AAClD,mBAAmB,GAAG;AACtB,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,yDAAyD,SAAS;AAClE;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,wCAAwC,GAAG;AAC3C;AACA;AACA;AACA;AACA,sDAAsD,GAAG;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,mBAAmB,GAAG;AACtB,gCAAgC,GAAG;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,wBAAwB,uBAAuB;AAC/C,oBAAoB,cAAc;AAClC;AACA;AACA;AACA;AACA,wBAAwB,+BAA+B;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,QAAQ;AAC/D;AACA,mBAAmB,GAAG;AACtB,6CAA6C,uEAA4B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,gDAAgD,sBAAsB,OAAO,wDAAQ;AACrF,oBAAoB;AACpB;AACA,wDAAwD,qDAAK;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,oBAAoB,GAAG;AACvB,2BAA2B,GAAG;AAC9B;AACA;AACA;AACA;AACA;AACA,cAAc;AACd,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB,4CAA4C,GAAG;AAC/C;AACA;AACA;AACA;AACA,wBAAwB,GAAG;AAC3B;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA,6DAA6D,kCAAkC,sDAAe,CAAC,4DAAiB,MAAM,sDAAe,CAAC,oEAAmB,GAAG,sDAAe,CAAC,sDAAQ,MAAM,sDAAe,CAAC,uDAAmB;AAC7O;AACA;AACA,MAAM,MAAM,4DAAU,iBAAiB,MAAM,mDAAQ,EAAE,GAAG;AAC1D,MAAM,MAAM,oEAAY,EAAE;AAC1B,MAAM,gCAAgC,MAAM,mDAAQ,EAAE,IAAI,MAAM,iDAAM,SAAS,sDAAQ,IAAI,GAAG;AAC9F,MAAM,MAAM,uDAAY,iBAAiB,MAAM,mDAAQ,EAAE;AACzD;AACA,2CAA2C,oEAAkB,GAAG,8CAA8C,2BAA2B,0DAAQ,CAAC,4DAAU,MAAM,0DAAQ,CAAC,oEAAY,GAAG,0DAAQ,CAAC,sDAAQ,MAAM,0DAAQ,CAAC,uDAAY,QAAQ,8CAA8C;AAC5R,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,iBAAiB,oBAAoB;AACrC,KAAK,iBAAiB,UAAU,MAAM,4DAAiB;AACvD,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI,MAAM,oEAAmB,EAAE,IAAI;AACnD,sBAAsB,mDAAQ;AAC9B,aAAa;AACb,sBAAsB,iDAAM;AAC5B,uBAAuB,sDAAQ;AAC/B,aAAa,GAAG,IAAI,MAAM,uDAAmB;AAC7C,sBAAsB,mDAAQ;AAC9B,aAAa,GAAG,IAAI,UAAU;AAC9B,IAAI,KAAK,EAAE,EA4DV;AACD;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,GAAG;AACd,WAAW,IAAI;AACf,WAAW,IAAI;AACf,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA,aAAa,mDAAQ,QAAQ,mDAAQ;AACrC,aAAa,mDAAQ,IAAI,4DAAU;AACnC,QAAQ,oEAAY;AACpB,aAAa,mDAAQ,IAAI,uDAAY;AACrC,aAAa,mDAAQ,gBAAgB,GAAG,IAAI,sDAAQ;AACpD;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA,WAAW,GAAG;AACd,WAAW,GAAG;AACd,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,yGAAyG;AACvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD,WAAW,GAAG;AACd,0BAA0B,mEAAU;AACpC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,8BAA8B,yDAAc;AAC5C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,EAGV;AACD;AACA;AACA,YAAY;AACZ;AACA;AACA,eAAe,GAAG;AAClB,sBAAsB,qDAAM,CAAC,sDAAQ;AACrC,eAAe,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,GAAG;AACd,YAAY;AACZ;AACA,YAAY,KAAK;AACjB;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,GAAG;AAClB,eAAe,IAAI;AACnB,eAAe,IAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,qDAAkB;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,uBAAuB,6EAAqB;AAC5C;AACA;AACA;AACA,gBAAgB;AAChB;AACA,oBAAoB;AACpB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA,qBAAqB;AACrB;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,2CAA2C;AAC3C,uCAAuC,GAAG;AAC1C,wDAAwD,SAAS;AACjE;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,qDAAI;AAC9B;AACA,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA,+BAA+B,GAAG;AAClC,kEAAkE,UAAU,GAAG,SAAS,IAAI,YAAY;AACxG;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB,sCAAsC,GAAG;AACzC,wBAAwB,sBAAsB;AAC9C;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA;AACA;AACA,uBAAuB,GAAG;AAC1B,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA;AACA,2BAA2B,GAAG;AAC9B,4BAA4B;AAC5B;AACA;AACA,4DAA4D,KAAK,GAAG,WAAW;AAC/E,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,gBAAgB;AAChB;AACA;AACA,mBAAmB,GAAG;AACtB;AACA,mBAAmB,GAAG;AACtB;AACA;AACA,wBAAwB,gCAAgC;AACxD;AACA,uBAAuB,GAAG;AAC1B,wBAAwB;AACxB;AACA;AACA,2BAA2B,GAAG;AAC9B;AACA,2BAA2B,GAAG;AAC9B;AACA,2BAA2B,GAAG;AAC9B;AACA;AACA,+BAA+B,GAAG;AAClC;AACA;AACA;AACA;AACA;AACA,gCAAgC,GAAG,wBAAwB,6BAA6B;AACxF;AACA,aAAa;AACb;AACA;AACA;AACA,6CAA6C,0BAA0B,+DAAwB,CAAC,qDAAiB,GAA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","sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/stepper.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js","./node_modules/@angular/material/__ivy_ngcc__/fesm2015/stepper.js","./src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup-component.service.ts","./src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup.component.ts","./src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup.component.html","./src/app/features/invoice-create-edit/framing/faceting-sanding-selection-popup/faceting-sanding-popup.module.ts","./src/app/features/invoice-create-edit/framing/framing-routing.module.ts","./src/app/features/invoice-create-edit/framing/framing.component.ts","./src/app/features/invoice-create-edit/framing/framing.component.html","./src/app/features/invoice-create-edit/framing/framing.module.ts","./src/app/features/invoice-create-edit/framing/invoice-item-amount-calculator.service.ts","./src/app/features/selection-popup/selection-component.service.ts","./src/app/features/selection-popup/selection-item/selection-item.component.ts","./src/app/features/selection-popup/selection-item/selection-item.component.html","./src/app/features/selection-popup/selection-item/selection-item.module.ts","./src/app/features/selection-popup/selection-popup.component.ts","./src/app/features/selection-popup/selection-popup.component.html","./src/app/features/selection-popup/selection-popup.module.ts","./src/app/shared/components/keyboard/alphabet/all-buttons.ts","./src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.service.ts","./src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.ts","./src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.html","./src/app/shared/components/keyboard/alphabet/keyboard-alphabet.module.ts","./src/app/shared/components/keyboard/numeric/keyboard-numeric.component.service.ts","./src/app/shared/components/keyboard/numeric/keyboard-numeric.component.ts","./src/app/shared/components/keyboard/numeric/keyboard-numeric.component.html","./src/app/shared/components/keyboard/numeric/keyboard-numeric.module.ts","./src/app/shared/components/search-input/search-input.component.ts","./src/app/shared/components/search-input/search-input.component.html","./src/app/shared/components/search-input/search-input.module.ts","./src/app/shared/constants.ts"],"sourcesContent":["import { FocusKeyManager } from '@angular/cdk/a11y';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { hasModifierKey, SPACE, ENTER, HOME, END } from '@angular/cdk/keycodes';\nimport { DOCUMENT } from '@angular/common';\nimport { Directive, ElementRef, TemplateRef, InjectionToken, Component, ViewEncapsulation, ChangeDetectionStrategy, Inject, forwardRef, Optional, ContentChild, ViewChild, Input, EventEmitter, ChangeDetectorRef, ContentChildren, Output, HostListener, NgModule } from '@angular/core';\nimport { Subject, of } from 'rxjs';\nimport { startWith, takeUntil } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\n\nfunction CdkStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nclass CdkStepHeader {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n}\nCdkStepHeader.ɵfac = function CdkStepHeader_Factory(t) { return new (t || CdkStepHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nCdkStepHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepHeader, selectors: [[\"\", \"cdkStepHeader\", \"\"]], hostAttrs: [\"role\", \"tab\"] });\n/** @nocollapse */\nCdkStepHeader.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepHeader, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepHeader]',\n                host: {\n                    'role': 'tab'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepHeader.prototype._elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepLabel {\n    /**\n     * @param {?} template\n     */\n    constructor(/** @docs-private */ template) {\n        this.template = template;\n    }\n}\nCdkStepLabel.ɵfac = function CdkStepLabel_Factory(t) { return new (t || CdkStepLabel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nCdkStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepLabel, selectors: [[\"\", \"cdkStepLabel\", \"\"]] });\n/** @nocollapse */\nCdkStepLabel.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepLabel]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    CdkStepLabel.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID for each stepper component.\n * @type {?}\n */\nlet nextId = 0;\n/**\n * Change event emitted on selection changes.\n */\nclass StepperSelectionEvent {\n}\nif (false) {\n    /**\n     * Index of the step now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedIndex;\n    /**\n     * Index of the step previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedIndex;\n    /**\n     * The step instance now selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.selectedStep;\n    /**\n     * The step instance previously selected.\n     * @type {?}\n     */\n    StepperSelectionEvent.prototype.previouslySelectedStep;\n}\n/**\n * Enum to represent the different states of the steps.\n * @type {?}\n */\nconst STEP_STATE = {\n    NUMBER: 'number',\n    EDIT: 'edit',\n    DONE: 'done',\n    ERROR: 'error'\n};\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @type {?}\n */\nconst STEPPER_GLOBAL_OPTIONS = new InjectionToken('STEPPER_GLOBAL_OPTIONS');\n/**\n * InjectionToken that can be used to specify the global stepper options.\n * @deprecated Use `STEPPER_GLOBAL_OPTIONS` instead.\n * \\@breaking-change 8.0.0.\n * @type {?}\n */\nconst MAT_STEPPER_GLOBAL_OPTIONS = STEPPER_GLOBAL_OPTIONS;\n/**\n * Configurable options for stepper.\n * @record\n */\nfunction StepperOptions() { }\nif (false) {\n    /**\n     * Whether the stepper should display an error state or not.\n     * Default behavior is assumed to be false.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.showError;\n    /**\n     * Whether the stepper should display the default indicator type\n     * or not.\n     * Default behavior is assumed to be true.\n     * @type {?|undefined}\n     */\n    StepperOptions.prototype.displayDefaultIndicatorType;\n}\nclass CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} _stepper\n     * @param {?=} stepperOptions\n     */\n    constructor(_stepper, stepperOptions) {\n        this._stepper = _stepper;\n        /**\n         * Whether user has seen the expanded step content or not.\n         */\n        this.interacted = false;\n        this._editable = true;\n        this._optional = false;\n        this._completedOverride = null;\n        this._customError = null;\n        this._stepperOptions = stepperOptions ? stepperOptions : {};\n        this._displayDefaultIndicatorType = this._stepperOptions.displayDefaultIndicatorType !== false;\n        this._showError = !!this._stepperOptions.showError;\n    }\n    /**\n     * Whether the user can return to this step once it has been marked as completed.\n     * @return {?}\n     */\n    get editable() {\n        return this._editable;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set editable(value) {\n        this._editable = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the completion of step is optional.\n     * @return {?}\n     */\n    get optional() {\n        return this._optional;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set optional(value) {\n        this._optional = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether step is marked as completed.\n     * @return {?}\n     */\n    get completed() {\n        return this._completedOverride == null ? this._getDefaultCompleted() : this._completedOverride;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set completed(value) {\n        this._completedOverride = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultCompleted() {\n        return this.stepControl ? this.stepControl.valid && this.interacted : this.interacted;\n    }\n    /**\n     * Whether step has an error.\n     * @return {?}\n     */\n    get hasError() {\n        return this._customError == null ? this._getDefaultError() : this._customError;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasError(value) {\n        this._customError = coerceBooleanProperty(value);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _getDefaultError() {\n        return this.stepControl && this.stepControl.invalid && this.interacted;\n    }\n    /**\n     * Selects this step component.\n     * @return {?}\n     */\n    select() {\n        this._stepper.selected = this;\n    }\n    /**\n     * Resets the step to its initial state. Note that this includes resetting form data.\n     * @return {?}\n     */\n    reset() {\n        this.interacted = false;\n        if (this._completedOverride != null) {\n            this._completedOverride = false;\n        }\n        if (this._customError != null) {\n            this._customError = false;\n        }\n        if (this.stepControl) {\n            this.stepControl.reset();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        // Since basically all inputs of the MatStep get proxied through the view down to the\n        // underlying MatStepHeader, we have to make sure that change detection runs correctly.\n        this._stepper._stateChanged();\n    }\n}\nCdkStep.ɵfac = function CdkStep_Factory(t) { return new (t || CdkStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => CdkStepper))), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nCdkStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: CdkStep, selectors: [[\"cdk-step\"]], contentQueries: function CdkStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepLabel, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, viewQuery: function CdkStep_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.content = _t.first);\n    } }, inputs: { editable: \"editable\", optional: \"optional\", completed: \"completed\", hasError: \"hasError\", stepControl: \"stepControl\", label: \"label\", errorMessage: \"errorMessage\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], state: \"state\" }, exportAs: [\"cdkStep\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function CdkStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, CdkStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkStep.ctorParameters = () => [\n    { type: CdkStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => CdkStepper)),] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nCdkStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [CdkStepLabel,] }],\n    content: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    stepControl: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    state: [{ type: Input }],\n    editable: [{ type: Input }],\n    optional: [{ type: Input }],\n    completed: [{ type: Input }],\n    hasError: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStep, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-step',\n                exportAs: 'cdkStep',\n                template: '<ng-template><ng-content></ng-content></ng-template>',\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: CdkStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => CdkStepper))]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { editable: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], completed: [{\n            type: Input\n        }], hasError: [{\n            type: Input\n        }], stepLabel: [{\n            type: ContentChild,\n            args: [CdkStepLabel]\n        }], content: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], stepControl: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], state: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStep.ngAcceptInputType_completed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepperOptions;\n    /** @type {?} */\n    CdkStep.prototype._showError;\n    /** @type {?} */\n    CdkStep.prototype._displayDefaultIndicatorType;\n    /**\n     * Template for step label if it exists.\n     * @type {?}\n     */\n    CdkStep.prototype.stepLabel;\n    /**\n     * Template for step content.\n     * @type {?}\n     */\n    CdkStep.prototype.content;\n    /**\n     * The top level abstract control of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.stepControl;\n    /**\n     * Whether user has seen the expanded step content or not.\n     * @type {?}\n     */\n    CdkStep.prototype.interacted;\n    /**\n     * Plain text label of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    CdkStep.prototype.errorMessage;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    CdkStep.prototype.ariaLabelledby;\n    /**\n     * State of the step.\n     * @type {?}\n     */\n    CdkStep.prototype.state;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._editable;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._optional;\n    /** @type {?} */\n    CdkStep.prototype._completedOverride;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._customError;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStep.prototype._stepper;\n}\nclass CdkStepper {\n    /**\n     * @param {?} _dir\n     * @param {?} _changeDetectorRef\n     * @param {?=} _elementRef\n     * @param {?=} _document\n     */\n    constructor(_dir, _changeDetectorRef, _elementRef, _document) {\n        this._dir = _dir;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        this._linear = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the selected step has changed.\n         */\n        this.selectionChange = new EventEmitter();\n        this._orientation = 'horizontal';\n        this._groupId = nextId++;\n        this._document = _document;\n    }\n    /**\n     * The list of step components that the stepper is holding.\n     * @return {?}\n     */\n    get steps() {\n        return this._steps;\n    }\n    /**\n     * Whether the validity of previous steps should be checked or not.\n     * @return {?}\n     */\n    get linear() {\n        return this._linear;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set linear(value) {\n        this._linear = coerceBooleanProperty(value);\n    }\n    /**\n     * The index of the selected step.\n     * @return {?}\n     */\n    get selectedIndex() {\n        return this._selectedIndex;\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    set selectedIndex(index) {\n        /** @type {?} */\n        const newIndex = coerceNumberProperty(index);\n        if (this.steps) {\n            // Ensure that the index can't be out of bounds.\n            if (newIndex < 0 || newIndex > this.steps.length - 1) {\n                throw Error('cdkStepper: Cannot assign out-of-bounds value to `selectedIndex`.');\n            }\n            if (this._selectedIndex != newIndex && !this._anyControlsInvalidOrPending(newIndex) &&\n                (newIndex >= this._selectedIndex || this.steps.toArray()[newIndex].editable)) {\n                this._updateSelectedItemIndex(index);\n            }\n        }\n        else {\n            this._selectedIndex = newIndex;\n        }\n    }\n    /**\n     * The step that is selected.\n     * @return {?}\n     */\n    get selected() {\n        // @breaking-change 8.0.0 Change return type to `CdkStep | undefined`.\n        return this.steps ? this.steps.toArray()[this.selectedIndex] : (/** @type {?} */ (undefined));\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    set selected(step) {\n        this.selectedIndex = this.steps ? this.steps.toArray().indexOf(step) : -1;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // Note that while the step headers are content children by default, any components that\n        // extend this one might have them as view children. We initialize the keyboard handling in\n        // AfterViewInit so we're guaranteed for both view and content children to be defined.\n        this._keyManager = new FocusKeyManager(this._stepHeader)\n            .withWrap()\n            .withVerticalOrientation(this._orientation === 'vertical');\n        (this._dir ? ((/** @type {?} */ (this._dir.change))) : of())\n            .pipe(startWith(this._layoutDirection()), takeUntil(this._destroyed))\n            .subscribe((/**\n         * @param {?} direction\n         * @return {?}\n         */\n        direction => this._keyManager.withHorizontalOrientation(direction)));\n        this._keyManager.updateActiveItem(this._selectedIndex);\n        this.steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            if (!this.selected) {\n                this._selectedIndex = Math.max(this._selectedIndex - 1, 0);\n            }\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Selects and focuses the next step in list.\n     * @return {?}\n     */\n    next() {\n        this.selectedIndex = Math.min(this._selectedIndex + 1, this.steps.length - 1);\n    }\n    /**\n     * Selects and focuses the previous step in list.\n     * @return {?}\n     */\n    previous() {\n        this.selectedIndex = Math.max(this._selectedIndex - 1, 0);\n    }\n    /**\n     * Resets the stepper to its initial state. Note that this includes clearing form data.\n     * @return {?}\n     */\n    reset() {\n        this._updateSelectedItemIndex(0);\n        this.steps.forEach((/**\n         * @param {?} step\n         * @return {?}\n         */\n        step => step.reset()));\n        this._stateChanged();\n    }\n    /**\n     * Returns a unique id for each step label element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepLabelId(i) {\n        return `cdk-step-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns unique id for each step content element.\n     * @param {?} i\n     * @return {?}\n     */\n    _getStepContentId(i) {\n        return `cdk-step-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Marks the component to be change detected.\n     * @return {?}\n     */\n    _stateChanged() {\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Returns position state of the step with the given index.\n     * @param {?} index\n     * @return {?}\n     */\n    _getAnimationDirection(index) {\n        /** @type {?} */\n        const position = index - this._selectedIndex;\n        if (position < 0) {\n            return this._layoutDirection() === 'rtl' ? 'next' : 'previous';\n        }\n        else if (position > 0) {\n            return this._layoutDirection() === 'rtl' ? 'previous' : 'next';\n        }\n        return 'current';\n    }\n    /**\n     * Returns the type of icon to be displayed.\n     * @param {?} index\n     * @param {?=} state\n     * @return {?}\n     */\n    _getIndicatorType(index, state = STEP_STATE.NUMBER) {\n        /** @type {?} */\n        const step = this.steps.toArray()[index];\n        /** @type {?} */\n        const isCurrentStep = this._isCurrentStep(index);\n        return step._displayDefaultIndicatorType ? this._getDefaultIndicatorLogic(step, isCurrentStep) :\n            this._getGuidelineLogic(step, isCurrentStep, state);\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @return {?}\n     */\n    _getDefaultIndicatorLogic(step, isCurrentStep) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (!step.completed || isCurrentStep) {\n            return STEP_STATE.NUMBER;\n        }\n        else {\n            return step.editable ? STEP_STATE.EDIT : STEP_STATE.DONE;\n        }\n    }\n    /**\n     * @private\n     * @param {?} step\n     * @param {?} isCurrentStep\n     * @param {?=} state\n     * @return {?}\n     */\n    _getGuidelineLogic(step, isCurrentStep, state = STEP_STATE.NUMBER) {\n        if (step._showError && step.hasError && !isCurrentStep) {\n            return STEP_STATE.ERROR;\n        }\n        else if (step.completed && !isCurrentStep) {\n            return STEP_STATE.DONE;\n        }\n        else if (step.completed && isCurrentStep) {\n            return state;\n        }\n        else if (step.editable && isCurrentStep) {\n            return STEP_STATE.EDIT;\n        }\n        else {\n            return state;\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _isCurrentStep(index) {\n        return this._selectedIndex === index;\n    }\n    /**\n     * Returns the index of the currently-focused step header.\n     * @return {?}\n     */\n    _getFocusIndex() {\n        return this._keyManager ? this._keyManager.activeItemIndex : this._selectedIndex;\n    }\n    /**\n     * @private\n     * @param {?} newIndex\n     * @return {?}\n     */\n    _updateSelectedItemIndex(newIndex) {\n        /** @type {?} */\n        const stepsArray = this.steps.toArray();\n        this.selectionChange.emit({\n            selectedIndex: newIndex,\n            previouslySelectedIndex: this._selectedIndex,\n            selectedStep: stepsArray[newIndex],\n            previouslySelectedStep: stepsArray[this._selectedIndex],\n        });\n        // If focus is inside the stepper, move it to the next header, otherwise it may become\n        // lost when the active step content is hidden. We can't be more granular with the check\n        // (e.g. checking whether focus is inside the active step), because we don't have a\n        // reference to the elements that are rendering out the content.\n        this._containsFocus() ? this._keyManager.setActiveItem(newIndex) :\n            this._keyManager.updateActiveItem(newIndex);\n        this._selectedIndex = newIndex;\n        this._stateChanged();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onKeydown(event) {\n        /** @type {?} */\n        const hasModifier = hasModifierKey(event);\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        if (manager.activeItemIndex != null && !hasModifier &&\n            (keyCode === SPACE || keyCode === ENTER)) {\n            this.selectedIndex = manager.activeItemIndex;\n            event.preventDefault();\n        }\n        else if (keyCode === HOME) {\n            manager.setFirstItemActive();\n            event.preventDefault();\n        }\n        else if (keyCode === END) {\n            manager.setLastItemActive();\n            event.preventDefault();\n        }\n        else {\n            manager.onKeydown(event);\n        }\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _anyControlsInvalidOrPending(index) {\n        /** @type {?} */\n        const steps = this.steps.toArray();\n        steps[this._selectedIndex].interacted = true;\n        if (this._linear && index >= 0) {\n            return steps.slice(0, index).some((/**\n             * @param {?} step\n             * @return {?}\n             */\n            step => {\n                /** @type {?} */\n                const control = step.stepControl;\n                /** @type {?} */\n                const isIncomplete = control ? (control.invalid || control.pending || !step.interacted) : !step.completed;\n                return isIncomplete && !step.optional && !step._completedOverride;\n            }));\n        }\n        return false;\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _layoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Checks whether the stepper contains the focused element.\n     * @private\n     * @return {?}\n     */\n    _containsFocus() {\n        if (!this._document || !this._elementRef) {\n            return false;\n        }\n        /** @type {?} */\n        const stepperElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        const focusedElement = this._document.activeElement;\n        return stepperElement === focusedElement || stepperElement.contains(focusedElement);\n    }\n}\nCdkStepper.ɵfac = function CdkStepper_Factory(t) { return new (t || CdkStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nCdkStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepper, selectors: [[\"\", \"cdkStepper\", \"\"]], contentQueries: function CdkStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, CdkStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { linear: \"linear\", selectedIndex: \"selectedIndex\", selected: \"selected\" }, outputs: { selectionChange: \"selectionChange\" }, exportAs: [\"cdkStepper\"] });\n/** @nocollapse */\nCdkStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nCdkStepper.propDecorators = {\n    _steps: [{ type: ContentChildren, args: [CdkStep, { descendants: true },] }],\n    _stepHeader: [{ type: ContentChildren, args: [CdkStepHeader, { descendants: true },] }],\n    linear: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    selected: [{ type: Input }],\n    selectionChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepper, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkStepper]',\n                exportAs: 'cdkStepper'\n            }]\n    }], function () { return [{ type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { selectionChange: [{\n            type: Output\n        }], linear: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], _steps: [{\n            type: ContentChildren,\n            args: [CdkStep, { descendants: true }]\n        }], _stepHeader: [{\n            type: ContentChildren,\n            args: [CdkStepHeader, { descendants: true }]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_hasError;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_linear;\n    /** @type {?} */\n    CdkStepper.ngAcceptInputType_selectedIndex;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._destroyed;\n    /**\n     * Used for managing keyboard focus.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._keyManager;\n    /**\n     * \\@breaking-change 8.0.0 Remove `| undefined` once the `_document`\n     * constructor param is required.\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._document;\n    /**\n     * The list of step components that the stepper is holding.\n     * @deprecated use `steps` instead\n     * \\@breaking-change 9.0.0 remove this property\n     * @type {?}\n     */\n    CdkStepper.prototype._steps;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @deprecated Type to be changed to `QueryList<CdkStepHeader>`.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    CdkStepper.prototype._stepHeader;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._linear;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._selectedIndex;\n    /**\n     * Event emitted when the selected step has changed.\n     * @type {?}\n     */\n    CdkStepper.prototype.selectionChange;\n    /**\n     * Used to track unique ID for each stepper component.\n     * @type {?}\n     */\n    CdkStepper.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkStepper.prototype._orientation;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkStepper.prototype._elementRef;\n}\n/**\n * Simplified representation of an \"AbstractControl\" from \\@angular/forms.\n * Used to avoid having to bring in \\@angular/forms for a single optional interface.\n * \\@docs-private\n * @record\n */\nfunction AbstractControlLike() { }\nif (false) {\n    /** @type {?} */\n    AbstractControlLike.prototype.asyncValidator;\n    /** @type {?} */\n    AbstractControlLike.prototype.dirty;\n    /** @type {?} */\n    AbstractControlLike.prototype.disabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.enabled;\n    /** @type {?} */\n    AbstractControlLike.prototype.errors;\n    /** @type {?} */\n    AbstractControlLike.prototype.invalid;\n    /** @type {?} */\n    AbstractControlLike.prototype.parent;\n    /** @type {?} */\n    AbstractControlLike.prototype.pending;\n    /** @type {?} */\n    AbstractControlLike.prototype.pristine;\n    /** @type {?} */\n    AbstractControlLike.prototype.root;\n    /** @type {?} */\n    AbstractControlLike.prototype.status;\n    /** @type {?} */\n    AbstractControlLike.prototype.statusChanges;\n    /** @type {?} */\n    AbstractControlLike.prototype.touched;\n    /** @type {?} */\n    AbstractControlLike.prototype.untouched;\n    /** @type {?} */\n    AbstractControlLike.prototype.updateOn;\n    /** @type {?} */\n    AbstractControlLike.prototype.valid;\n    /** @type {?} */\n    AbstractControlLike.prototype.validator;\n    /** @type {?} */\n    AbstractControlLike.prototype.value;\n    /** @type {?} */\n    AbstractControlLike.prototype.valueChanges;\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearAsyncValidators = function () { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.clearValidators = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.disable = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.enable = function (opts) { };\n    /**\n     * @param {?} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.get = function (path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.getError = function (errorCode, path) { };\n    /**\n     * @param {?} errorCode\n     * @param {?=} path\n     * @return {?}\n     */\n    AbstractControlLike.prototype.hasError = function (errorCode, path) { };\n    /**\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAllAsTouched = function () { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsDirty = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPending = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsPristine = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsTouched = function (opts) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.markAsUntouched = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (value, options) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setAsyncValidators = function (newValidator) { };\n    /**\n     * @param {?} errors\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setErrors = function (errors, opts) { };\n    /**\n     * @param {?} parent\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setParent = function (parent) { };\n    /**\n     * @param {?} newValidator\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValidators = function (newValidator) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n    /**\n     * @param {?=} opts\n     * @return {?}\n     */\n    AbstractControlLike.prototype.updateValueAndValidity = function (opts) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.patchValue = function (value, options) { };\n    /**\n     * @param {?=} formState\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.reset = function (formState, options) { };\n    /**\n     * @param {?} value\n     * @param {?=} options\n     * @return {?}\n     */\n    AbstractControlLike.prototype.setValue = function (value, options) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass CdkStepperNext {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the next button. Defaults to \"submit\" if not specified.\n         */\n        this.type = 'submit';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.next();\n    }\n}\nCdkStepperNext.ɵfac = function CdkStepperNext_Factory(t) { return new (t || CdkStepperNext)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperNext, selectors: [[\"button\", \"cdkStepperNext\", \"\"]], hostVars: 1, hostBindings: function CdkStepperNext_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperNext_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperNext.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperNext.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperNext]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the next button. Defaults to \"submit\" if not specified.\n     * @type {?}\n     */\n    CdkStepperNext.prototype.type;\n    /** @type {?} */\n    CdkStepperNext.prototype._stepper;\n}\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass CdkStepperPrevious {\n    /**\n     * @param {?} _stepper\n     */\n    constructor(_stepper) {\n        this._stepper = _stepper;\n        /**\n         * Type of the previous button. Defaults to \"button\" if not specified.\n         */\n        this.type = 'button';\n    }\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick() {\n        this._stepper.previous();\n    }\n}\nCdkStepperPrevious.ɵfac = function CdkStepperPrevious_Factory(t) { return new (t || CdkStepperPrevious)(ɵngcc0.ɵɵdirectiveInject(CdkStepper)); };\nCdkStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkStepperPrevious, selectors: [[\"button\", \"cdkStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function CdkStepperPrevious_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkStepperPrevious_click_HostBindingHandler() { return ctx._handleClick(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" } });\n/** @nocollapse */\nCdkStepperPrevious.ctorParameters = () => [\n    { type: CdkStepper }\n];\nCdkStepperPrevious.propDecorators = {\n    type: [{ type: Input }],\n    _handleClick: [{ type: HostListener, args: ['click',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[cdkStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                }\n            }]\n    }], function () { return [{ type: CdkStepper }]; }, { type: [{\n            type: Input\n        }], \n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    /**\n     * @return {?}\n     */\n    _handleClick: [{\n            type: HostListener,\n            args: ['click']\n        }] }); })();\nif (false) {\n    /**\n     * Type of the previous button. Defaults to \"button\" if not specified.\n     * @type {?}\n     */\n    CdkStepperPrevious.prototype.type;\n    /** @type {?} */\n    CdkStepperPrevious.prototype._stepper;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass CdkStepperModule {\n}\nCdkStepperModule.ɵfac = function CdkStepperModule_Factory(t) { return new (t || CdkStepperModule)(); };\nCdkStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: CdkStepperModule });\nCdkStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[BidiModule]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule],\n                exports: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ],\n                declarations: [\n                    CdkStep,\n                    CdkStepper,\n                    CdkStepHeader,\n                    CdkStepLabel,\n                    CdkStepperNext,\n                    CdkStepperPrevious,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CdkStepperModule, { declarations: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; }, imports: function () { return [BidiModule]; }, exports: function () { return [CdkStep, CdkStepper, CdkStepHeader, CdkStepLabel, CdkStepperNext, CdkStepperPrevious]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkStep, CdkStepHeader, CdkStepLabel, CdkStepper, CdkStepperModule, CdkStepperNext, CdkStepperPrevious, MAT_STEPPER_GLOBAL_OPTIONS, STEPPER_GLOBAL_OPTIONS, STEP_STATE, StepperSelectionEvent };\n\n","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, NgZone, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-checkbox` options that can be overridden.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/cdk/observers';\n\nconst _c0 = [\"input\"];\nconst _c1 = function () { return { enterDuration: 150 }; };\nconst _c2 = [\"*\"];\nfunction MatCheckboxDefaultOptions() { }\nif (false) {\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.color;\n    /** @type {?|undefined} */\n    MatCheckboxDefaultOptions.prototype.clickAction;\n}\n/**\n * Injection token to be used to override the default options for `mat-checkbox`.\n * @type {?}\n */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * \\@breaking-change 10.0.0\n * @type {?}\n */\nconst MAT_CHECKBOX_CLICK_ACTION = new InjectionToken('mat-checkbox-click-action');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Increasing integer for generating unique ids for checkbox components.\n/** @type {?} */\nlet nextUniqueId = 0;\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * \\@docs-private\n * @type {?}\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckbox)),\n    multi: true\n};\n/** @enum {number} */\nconst TransitionCheckState = {\n    /** The initial state of the component before any user interaction. */\n    Init: 0,\n    /** The state representing the component when it's becoming checked. */\n    Checked: 1,\n    /** The state representing the component when it's becoming unchecked. */\n    Unchecked: 2,\n    /** The state representing the component when it's becoming indeterminate. */\n    Indeterminate: 3,\n};\n/**\n * Change event object emitted by MatCheckbox.\n */\nclass MatCheckboxChange {\n}\nif (false) {\n    /**\n     * The source MatCheckbox of the event.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.source;\n    /**\n     * The new `checked` value of the checkbox.\n     * @type {?}\n     */\n    MatCheckboxChange.prototype.checked;\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/**\n * \\@docs-private\n */\nclass MatCheckboxBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatCheckboxBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatCheckboxMixinBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _focusMonitor\n     * @param {?} _ngZone\n     * @param {?} tabIndex\n     * @param {?} _clickAction\n     * @param {?=} _animationMode\n     * @param {?=} _options\n     */\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _clickAction, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._clickAction = _clickAction;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /**\n         * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n         */\n        this.id = this._uniqueId;\n        /**\n         * Whether the label should appear after or before the checkbox. Defaults to 'after'\n         */\n        this.labelPosition = 'after';\n        /**\n         * Name value will be applied to the input element if present\n         */\n        this.name = null;\n        /**\n         * Event emitted when the checkbox's `checked` value changes.\n         */\n        this.change = new EventEmitter();\n        /**\n         * Event emitted when the checkbox's `indeterminate` value changes.\n         */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * \\@docs-private\n         */\n        this._onTouched = (/**\n         * @return {?}\n         */\n        () => { });\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = (/**\n         * @return {?}\n         */\n        () => { });\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || {};\n        if (this._options.color) {\n            this.color = this._options.color;\n        }\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this._focusMonitor.monitor(elementRef, true).subscribe((/**\n         * @param {?} focusOrigin\n         * @return {?}\n         */\n        focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._onTouched();\n                    _changeDetectorRef.markForCheck();\n                }));\n            }\n        }));\n        // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n        this._clickAction = this._clickAction || this._options.clickAction;\n    }\n    /**\n     * Returns the unique id for the visual hidden input.\n     * @return {?}\n     */\n    get inputId() { return `${this.id || this._uniqueId}-input`; }\n    /**\n     * Whether the checkbox is required.\n     * @return {?}\n     */\n    get required() { return this._required; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set required(value) { this._required = coerceBooleanProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() { }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set checked(value) {\n        if (value != this.checked) {\n            this._checked = value;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        /** @type {?} */\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     * @return {?}\n     */\n    get indeterminate() { return this._indeterminate; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set indeterminate(value) {\n        /** @type {?} */\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    /**\n     * @return {?}\n     */\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /**\n     * Method being called whenever the label text changes.\n     * @return {?}\n     */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /**\n     * @return {?}\n     */\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    /**\n     * @private\n     * @param {?} newState\n     * @return {?}\n     */\n    _transitionCheckState(newState) {\n        /** @type {?} */\n        let oldState = this._currentCheckState;\n        /** @type {?} */\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            /** @type {?} */\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                setTimeout((/**\n                 * @return {?}\n                 */\n                () => {\n                    element.classList.remove(animationClass);\n                }), 1000);\n            }));\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        /** @type {?} */\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n    }\n    /**\n     * Toggles the `checked` state of the checkbox.\n     * @return {?}\n     */\n    toggle() {\n        this.checked = !this.checked;\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param {?} event\n     * @return {?}\n     */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && this._clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && this._clickAction !== 'check') {\n                Promise.resolve().then((/**\n                 * @return {?}\n                 */\n                () => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                }));\n            }\n            this.toggle();\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && this._clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /**\n     * Focuses the checkbox.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'keyboard', options) {\n        this._focusMonitor.focusVia(this._inputElement, origin, options);\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    /**\n     * @private\n     * @param {?} oldState\n     * @param {?} newState\n     * @return {?}\n     */\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        /** @type {?} */\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'unchecked-checked' : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix = newState === 2 /* Unchecked */ ?\n                    'checked-unchecked' : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix = newState === 1 /* Checked */ ?\n                    'indeterminate-checked' : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _syncIndeterminate(value) {\n        /** @type {?} */\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = function MatCheckbox_Factory(t) { return new (t || MatCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_CLICK_ACTION, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8), ɵngcc0.ɵɵdirectiveInject(MAT_CHECKBOX_DEFAULT_OPTIONS, 8)); };\nMatCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatCheckbox, selectors: [[\"mat-checkbox\"]], viewQuery: function MatCheckbox_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n        ɵngcc0.ɵɵviewQuery(MatRipple, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.ripple = _t.first);\n    } }, hostAttrs: [1, \"mat-checkbox\"], hostVars: 12, hostBindings: function MatCheckbox_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵattribute(\"tabindex\", null);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-indeterminate\", ctx.indeterminate)(\"mat-checkbox-checked\", ctx.checked)(\"mat-checkbox-disabled\", ctx.disabled)(\"mat-checkbox-label-before\", ctx.labelPosition == \"before\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } }, inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", labelPosition: \"labelPosition\", name: \"name\", required: \"required\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\", value: \"value\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, exportAs: [\"matCheckbox\"], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c2, decls: 17, vars: 19, consts: [[1, \"mat-checkbox-layout\"], [\"label\", \"\"], [1, \"mat-checkbox-inner-container\"], [\"type\", \"checkbox\", 1, \"mat-checkbox-input\", \"cdk-visually-hidden\", 3, \"id\", \"required\", \"checked\", \"disabled\", \"tabIndex\", \"change\", \"click\"], [\"input\", \"\"], [\"matRipple\", \"\", 1, \"mat-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleRadius\", \"matRippleCentered\", \"matRippleAnimation\"], [1, \"mat-ripple-element\", \"mat-checkbox-persistent-ripple\"], [1, \"mat-checkbox-frame\"], [1, \"mat-checkbox-background\"], [\"version\", \"1.1\", \"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", 0, \"xml\", \"space\", \"preserve\", 1, \"mat-checkbox-checkmark\"], [\"fill\", \"none\", \"stroke\", \"white\", \"d\", \"M4.1,12.7 9,17.6 20.3,6.3\", 1, \"mat-checkbox-checkmark-path\"], [1, \"mat-checkbox-mixedmark\"], [1, \"mat-checkbox-label\", 3, \"cdkObserveContent\"], [\"checkboxLabel\", \"\"], [2, \"display\", \"none\"]], template: function MatCheckbox_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"label\", 0, 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵelementStart(3, \"input\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"change\", function MatCheckbox_Template_input_change_3_listener($event) { return ctx._onInteractionEvent($event); })(\"click\", function MatCheckbox_Template_input_click_3_listener($event) { return ctx._onInputClick($event); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5);\n        ɵngcc0.ɵɵelement(6, \"div\", 6);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(7, \"div\", 7);\n        ɵngcc0.ɵɵelementStart(8, \"div\", 8);\n        ɵngcc0.ɵɵnamespaceSVG();\n        ɵngcc0.ɵɵelementStart(9, \"svg\", 9);\n        ɵngcc0.ɵɵelement(10, \"path\", 10);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵnamespaceHTML();\n        ɵngcc0.ɵɵelement(11, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(12, \"span\", 12, 13);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatCheckbox_Template_span_cdkObserveContent_12_listener() { return ctx._onLabelTextChange(); });\n        ɵngcc0.ɵɵelementStart(14, \"span\", 14);\n        ɵngcc0.ɵɵtext(15, \"\\u00A0\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(16);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        const _r0 = ɵngcc0.ɵɵreference(1);\n        const _r2 = ɵngcc0.ɵɵreference(13);\n        ɵngcc0.ɵɵattribute(\"for\", ctx.inputId);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-checkbox-inner-container-no-side-margin\", !_r2.textContent || !_r2.textContent.trim());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"id\", ctx.inputId)(\"required\", ctx.required)(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵattribute(\"value\", ctx.value)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-checked\", ctx._getAriaChecked());\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx._isRippleDisabled())(\"matRippleRadius\", 20)(\"matRippleCentered\", true)(\"matRippleAnimation\", ɵngcc0.ɵɵpureFunction0(18, _c1));\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.CdkObserveContent], styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatCheckbox.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: FocusMonitor },\n    { type: NgZone },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_CLICK_ACTION,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_CHECKBOX_DEFAULT_OPTIONS,] }] }\n];\nMatCheckbox.propDecorators = {\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    id: [{ type: Input }],\n    required: [{ type: Input }],\n    labelPosition: [{ type: Input }],\n    name: [{ type: Input }],\n    change: [{ type: Output }],\n    indeterminateChange: [{ type: Output }],\n    value: [{ type: Input }],\n    _inputElement: [{ type: ViewChild, args: ['input',] }],\n    ripple: [{ type: ViewChild, args: [MatRipple,] }],\n    checked: [{ type: Input }],\n    disabled: [{ type: Input }],\n    indeterminate: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckbox, [{\n        type: Component,\n        args: [{\n                selector: 'mat-checkbox',\n                template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <div class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <div matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: 150}\\\">\\n      <div class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></div>\\n    </div>\\n    <div class=\\\"mat-checkbox-frame\\\"></div>\\n    <div class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           xml:space=\\\"preserve\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <div class=\\\"mat-checkbox-mixedmark\\\"></div>\\n    </div>\\n  </div>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\",\n                exportAs: 'matCheckbox',\n                host: {\n                    'class': 'mat-checkbox',\n                    '[id]': 'id',\n                    '[attr.tabindex]': 'null',\n                    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                    '[class.mat-checkbox-checked]': 'checked',\n                    '[class.mat-checkbox-disabled]': 'disabled',\n                    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                },\n                providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n                inputs: ['disableRipple', 'color', 'tabIndex'],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox.cdk-keyboard-focused .cdk-high-contrast-active .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.NgZone }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_CLICK_ACTION]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n            }] }]; }, { ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], id: [{\n            type: Input\n        }], labelPosition: [{\n            type: Input\n        }], name: [{\n            type: Input\n        }], change: [{\n            type: Output\n        }], indeterminateChange: [{\n            type: Output\n        }], required: [{\n            type: Input\n        }], checked: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], indeterminate: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], _inputElement: [{\n            type: ViewChild,\n            args: ['input']\n        }], ripple: [{\n            type: ViewChild,\n            args: [MatRipple]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_required;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatCheckbox.ngAcceptInputType_indeterminate;\n    /**\n     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n     * take precedence so this may be omitted.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabel;\n    /**\n     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.ariaLabelledby;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._uniqueId;\n    /**\n     * A unique id for the checkbox input. If none is supplied, it will be auto-generated.\n     * @type {?}\n     */\n    MatCheckbox.prototype.id;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._required;\n    /**\n     * Whether the label should appear after or before the checkbox. Defaults to 'after'\n     * @type {?}\n     */\n    MatCheckbox.prototype.labelPosition;\n    /**\n     * Name value will be applied to the input element if present\n     * @type {?}\n     */\n    MatCheckbox.prototype.name;\n    /**\n     * Event emitted when the checkbox's `checked` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.change;\n    /**\n     * Event emitted when the checkbox's `indeterminate` value changes.\n     * @type {?}\n     */\n    MatCheckbox.prototype.indeterminateChange;\n    /**\n     * The value attribute of the native input element\n     * @type {?}\n     */\n    MatCheckbox.prototype.value;\n    /**\n     * The native `<input type=\"checkbox\">` element\n     * @type {?}\n     */\n    MatCheckbox.prototype._inputElement;\n    /**\n     * Reference to the ripple instance of the checkbox.\n     * @type {?}\n     */\n    MatCheckbox.prototype.ripple;\n    /**\n     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n     * \\@docs-private\n     * @type {?}\n     */\n    MatCheckbox.prototype._onTouched;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentAnimationClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._currentCheckState;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._controlValueAccessorChangeFn;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._checked;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._indeterminate;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._focusMonitor;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._ngZone;\n    /**\n     * @deprecated `_clickAction` parameter to be removed, use\n     * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._clickAction;\n    /** @type {?} */\n    MatCheckbox.prototype._animationMode;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatCheckbox.prototype._options;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-required-validator.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef((/**\n     * @return {?}\n     */\n    () => MatCheckboxRequiredValidator)),\n    multi: true\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = /*@__PURE__*/ function () { let ɵMatCheckboxRequiredValidator_BaseFactory; return function MatCheckboxRequiredValidator_Factory(t) { return (ɵMatCheckboxRequiredValidator_BaseFactory || (ɵMatCheckboxRequiredValidator_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatCheckboxRequiredValidator)))(t || MatCheckboxRequiredValidator); }; }();\nMatCheckboxRequiredValidator.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatCheckboxRequiredValidator, selectors: [[\"mat-checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"mat-checkbox\", \"required\", \"\", \"ngModel\", \"\"]], features: [ɵngcc0.ɵɵProvidersFeature([MAT_CHECKBOX_REQUIRED_VALIDATOR]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxRequiredValidator, [{\n        type: Directive,\n        args: [{\n                selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/checkbox-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * This module is used by both original and MDC-based checkbox implementations.\n */\n// tslint:disable-next-line:class-name\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = function _MatCheckboxRequiredValidatorModule_Factory(t) { return new (t || _MatCheckboxRequiredValidatorModule)(); };\n_MatCheckboxRequiredValidatorModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: _MatCheckboxRequiredValidatorModule });\n_MatCheckboxRequiredValidatorModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatCheckboxRequiredValidatorModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatCheckboxRequiredValidator],\n                declarations: [MatCheckboxRequiredValidator]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatCheckboxRequiredValidatorModule, { declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] }); })();\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = function MatCheckboxModule_Factory(t) { return new (t || MatCheckboxModule)(); };\nMatCheckboxModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatCheckboxModule });\nMatCheckboxModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            MatRippleModule, MatCommonModule, ObserversModule,\n            _MatCheckboxRequiredValidatorModule\n        ], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatCheckboxModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatRippleModule, MatCommonModule, ObserversModule,\n                    _MatCheckboxRequiredValidatorModule\n                ],\n                exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                declarations: [MatCheckbox]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatCheckboxModule, { declarations: function () { return [MatCheckbox]; }, imports: function () { return [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule]; }, exports: function () { return [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/checkbox/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n\n","import { SecurityContext, Injectable, Optional, Inject, ErrorHandler, ɵɵdefineInjectable, ɵɵinject, SkipSelf, InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, Attribute, Input, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { DOCUMENT } from '@angular/common';\nimport { of, throwError, forkJoin, Subscription } from 'rxjs';\nimport { tap, map, catchError, finalize, share, take } from 'rxjs/operators';\nimport { HttpClient } from '@angular/common/http';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-registry.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * \\@docs-private\n * @param {?} iconName\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common/http';\nimport * as ɵngcc2 from '@angular/platform-browser';\n\nconst _c0 = [\"*\"];\nfunction getMatIconNameNotFoundError(iconName) {\n    return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including \\@angular/common/http.\n * \\@docs-private\n * @return {?}\n */\nfunction getMatIconNoHttpProviderError() {\n    return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n        'Please include the HttpClientModule from @angular/common/http in your ' +\n        'app imports.');\n}\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * \\@docs-private\n * @param {?} url URL that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeUrlError(url) {\n    return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n        `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * \\@docs-private\n * @param {?} literal HTML that was attempted to be sanitized.\n * @return {?}\n */\nfunction getMatIconFailedToSanitizeLiteralError(literal) {\n    return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n        `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n/**\n * Options that can be used to configure how an icon or the icons in an icon set are presented.\n * @record\n */\nfunction IconOptions() { }\nif (false) {\n    /**\n     * View box to set on the icon.\n     * @type {?|undefined}\n     */\n    IconOptions.prototype.viewBox;\n}\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * \\@docs-private\n */\nclass SvgIconConfig {\n    /**\n     * @param {?} data\n     * @param {?=} options\n     */\n    constructor(data, options) {\n        this.options = options;\n        // Note that we can't use `instanceof SVGElement` here,\n        // because it'll break during server-side rendering.\n        if (!!((/** @type {?} */ (data))).nodeName) {\n            this.svgElement = (/** @type {?} */ (data));\n        }\n        else {\n            this.url = (/** @type {?} */ (data));\n        }\n    }\n}\nif (false) {\n    /** @type {?} */\n    SvgIconConfig.prototype.url;\n    /** @type {?} */\n    SvgIconConfig.prototype.svgElement;\n    /** @type {?} */\n    SvgIconConfig.prototype.options;\n}\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\nclass MatIconRegistry {\n    /**\n     * @param {?} _httpClient\n     * @param {?} _sanitizer\n     * @param {?} document\n     * @param {?=} _errorHandler\n     */\n    constructor(_httpClient, _sanitizer, document, _errorHandler) {\n        this._httpClient = _httpClient;\n        this._sanitizer = _sanitizer;\n        this._errorHandler = _errorHandler;\n        /**\n         * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n         */\n        this._svgIconConfigs = new Map();\n        /**\n         * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n         * Multiple icon sets can be registered under the same namespace.\n         */\n        this._iconSetConfigs = new Map();\n        /**\n         * Cache for icons loaded by direct URLs.\n         */\n        this._cachedIconsByUrl = new Map();\n        /**\n         * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n         */\n        this._inProgressUrlFetches = new Map();\n        /**\n         * Map from font identifiers to their CSS class names. Used for icon fonts.\n         */\n        this._fontCssClassesByAlias = new Map();\n        /**\n         * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n         * The default 'material-icons' value assumes that the material icon font has been loaded as\n         * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n         */\n        this._defaultFontSetClass = 'material-icons';\n        this._document = document;\n    }\n    /**\n     * Registers an icon by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIcon(iconName, url, options) {\n        return (/** @type {?} */ (this)).addSvgIconInNamespace('', iconName, url, options);\n    }\n    /**\n     * Registers an icon using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteral(iconName, literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconLiteralInNamespace('', iconName, literal, options);\n    }\n    /**\n     * Registers an icon by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconInNamespace(namespace, iconName, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which the icon should be registered.\n     * @param {?} iconName Name under which the icon should be registered.\n     * @param {?} literal SVG source of the icon.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._createSvgElementForSingleIcon(sanitizedLiteral, options);\n        return (/** @type {?} */ (this))._addSvgIconConfig(namespace, iconName, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Registers an icon set by URL in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSet(url, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetInNamespace('', url, options);\n    }\n    /**\n     * Registers an icon set using an HTML string in the default namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteral(literal, options) {\n        return (/** @type {?} */ (this)).addSvgIconSetLiteralInNamespace('', literal, options);\n    }\n    /**\n     * Registers an icon set by URL in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} url\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetInNamespace(namespace, url, options) {\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(url, options));\n    }\n    /**\n     * Registers an icon set using an HTML string in the specified namespace.\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon set.\n     * @param {?} literal SVG source of the icon set.\n     * @param {?=} options\n     * @return {THIS}\n     */\n    addSvgIconSetLiteralInNamespace(namespace, literal, options) {\n        /** @type {?} */\n        const sanitizedLiteral = (/** @type {?} */ (this))._sanitizer.sanitize(SecurityContext.HTML, literal);\n        if (!sanitizedLiteral) {\n            throw getMatIconFailedToSanitizeLiteralError(literal);\n        }\n        /** @type {?} */\n        const svgElement = (/** @type {?} */ (this))._svgElementFromString(sanitizedLiteral);\n        return (/** @type {?} */ (this))._addSvgIconSetConfig(namespace, new SvgIconConfig(svgElement, options));\n    }\n    /**\n     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n     * component with the alias as the fontSet input will cause the class name to be applied\n     * to the `<mat-icon>` element.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} alias Alias for the font.\n     * @param {?=} className Class name override to be used instead of the alias.\n     * @return {THIS}\n     */\n    registerFontClassAlias(alias, className = alias) {\n        (/** @type {?} */ (this))._fontCssClassesByAlias.set(alias, className);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name associated with the alias by a previous call to\n     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n     * @param {?} alias\n     * @return {?}\n     */\n    classNameForFontAlias(alias) {\n        return this._fontCssClassesByAlias.get(alias) || alias;\n    }\n    /**\n     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     *\n     * @template THIS\n     * @this {THIS}\n     * @param {?} className\n     * @return {THIS}\n     */\n    setDefaultFontSetClass(className) {\n        (/** @type {?} */ (this))._defaultFontSetClass = className;\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n     * have a fontSet input value, and is not loading an icon by name or URL.\n     * @return {?}\n     */\n    getDefaultFontSetClass() {\n        return this._defaultFontSetClass;\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n     * The response from the URL may be cached so this will not always cause an HTTP request, but\n     * the produced element will always be a new copy of the originally fetched icon. (That is,\n     * it will not contain any modifications made to elements previously returned).\n     *\n     * @param {?} safeUrl URL from which to fetch the SVG icon.\n     * @return {?}\n     */\n    getSvgIconFromUrl(safeUrl) {\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        /** @type {?} */\n        const cachedIcon = this._cachedIconsByUrl.get(url);\n        if (cachedIcon) {\n            return of(cloneSvg(cachedIcon));\n        }\n        return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl)).pipe(tap((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => this._cachedIconsByUrl.set((/** @type {?} */ (url)), svg))), map((/**\n         * @param {?} svg\n         * @return {?}\n         */\n        svg => cloneSvg(svg))));\n    }\n    /**\n     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n     * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n     * if not, the Observable will throw an error.\n     *\n     * @param {?} name Name of the icon to be retrieved.\n     * @param {?=} namespace Namespace in which to look for the icon.\n     * @return {?}\n     */\n    getNamedSvgIcon(name, namespace = '') {\n        // Return (copy of) cached icon if possible.\n        /** @type {?} */\n        const key = iconKey(namespace, name);\n        /** @type {?} */\n        const config = this._svgIconConfigs.get(key);\n        if (config) {\n            return this._getSvgFromConfig(config);\n        }\n        // See if we have any icon sets registered for the namespace.\n        /** @type {?} */\n        const iconSetConfigs = this._iconSetConfigs.get(namespace);\n        if (iconSetConfigs) {\n            return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n        }\n        return throwError(getMatIconNameNotFoundError(key));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._svgIconConfigs.clear();\n        this._iconSetConfigs.clear();\n        this._cachedIconsByUrl.clear();\n    }\n    /**\n     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _getSvgFromConfig(config) {\n        if (config.svgElement) {\n            // We already have the SVG element for this icon, return a copy.\n            return of(cloneSvg(config.svgElement));\n        }\n        else {\n            // Fetch the icon from the config's URL, cache it, and return a copy.\n            return this._loadSvgIconFromConfig(config).pipe(tap((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => config.svgElement = svg)), map((/**\n             * @param {?} svg\n             * @return {?}\n             */\n            svg => cloneSvg(svg))));\n        }\n    }\n    /**\n     * Attempts to find an icon with the specified name in any of the SVG icon sets.\n     * First searches the available cached icons for a nested element with a matching name, and\n     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n     * that have not been cached, and searches again after all fetches are completed.\n     * The returned Observable produces the SVG element if possible, and throws\n     * an error if no icon with the specified name can be found.\n     * @private\n     * @param {?} name\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _getSvgFromIconSetConfigs(name, iconSetConfigs) {\n        // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n        // requested name.\n        /** @type {?} */\n        const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n        if (namedIcon) {\n            // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n            // time anyway, there's probably not much advantage compared to just always extracting\n            // it from the icon set.\n            return of(namedIcon);\n        }\n        // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n        // fetched, fetch them now and look for iconName in the results.\n        /** @type {?} */\n        const iconSetFetchRequests = iconSetConfigs\n            .filter((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => !iconSetConfig.svgElement))\n            .map((/**\n         * @param {?} iconSetConfig\n         * @return {?}\n         */\n        iconSetConfig => {\n            return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(catchError((/**\n             * @param {?} err\n             * @return {?}\n             */\n            (err) => {\n                /** @type {?} */\n                const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n                // Swallow errors fetching individual URLs so the\n                // combined Observable won't necessarily fail.\n                /** @type {?} */\n                const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n                // @breaking-change 9.0.0 _errorHandler parameter to be made required\n                if (this._errorHandler) {\n                    this._errorHandler.handleError(new Error(errorMessage));\n                }\n                else {\n                    console.error(errorMessage);\n                }\n                return of(null);\n            })));\n        }));\n        // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n        // cached SVG element (unless the request failed), and we can check again for the icon.\n        return forkJoin(iconSetFetchRequests).pipe(map((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n            if (!foundIcon) {\n                throw getMatIconNameNotFoundError(name);\n            }\n            return foundIcon;\n        })));\n    }\n    /**\n     * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconName\n     * @param {?} iconSetConfigs\n     * @return {?}\n     */\n    _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {\n        // Iterate backwards, so icon sets added later have precedence.\n        for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n            /** @type {?} */\n            const config = iconSetConfigs[i];\n            if (config.svgElement) {\n                /** @type {?} */\n                const foundIcon = this._extractSvgIconFromSet(config.svgElement, iconName, config.options);\n                if (foundIcon) {\n                    return foundIcon;\n                }\n            }\n        }\n        return null;\n    }\n    /**\n     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconFromConfig(config) {\n        return this._fetchUrl(config.url)\n            .pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => this._createSvgElementForSingleIcon(svgText, config.options))));\n    }\n    /**\n     * Loads the content of the icon set URL specified in the SvgIconConfig and creates an SVG element\n     * from it.\n     * @private\n     * @param {?} config\n     * @return {?}\n     */\n    _loadSvgIconSetFromConfig(config) {\n        // If the SVG for this icon set has already been parsed, do nothing.\n        if (config.svgElement) {\n            return of(config.svgElement);\n        }\n        return this._fetchUrl(config.url).pipe(map((/**\n         * @param {?} svgText\n         * @return {?}\n         */\n        svgText => {\n            // It is possible that the icon set was parsed and cached by an earlier request, so parsing\n            // only needs to occur if the cache is yet unset.\n            if (!config.svgElement) {\n                config.svgElement = this._svgElementFromString(svgText);\n            }\n            return config.svgElement;\n        })));\n    }\n    /**\n     * Creates a DOM element from the given SVG string, and adds default attributes.\n     * @private\n     * @param {?} responseText\n     * @param {?=} options\n     * @return {?}\n     */\n    _createSvgElementForSingleIcon(responseText, options) {\n        /** @type {?} */\n        const svg = this._svgElementFromString(responseText);\n        this._setSvgAttributes(svg, options);\n        return svg;\n    }\n    /**\n     * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n     * tag matches the specified name. If found, copies the nested element to a new SVG element and\n     * returns it. Returns null if no matching element is found.\n     * @private\n     * @param {?} iconSet\n     * @param {?} iconName\n     * @param {?=} options\n     * @return {?}\n     */\n    _extractSvgIconFromSet(iconSet, iconName, options) {\n        // Use the `id=\"iconName\"` syntax in order to escape special\n        // characters in the ID (versus using the #iconName syntax).\n        /** @type {?} */\n        const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n        if (!iconSource) {\n            return null;\n        }\n        // Clone the element and remove the ID to prevent multiple elements from being added\n        // to the page with the same ID.\n        /** @type {?} */\n        const iconElement = (/** @type {?} */ (iconSource.cloneNode(true)));\n        iconElement.removeAttribute('id');\n        // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n        // the content of a new <svg> node.\n        if (iconElement.nodeName.toLowerCase() === 'svg') {\n            return this._setSvgAttributes((/** @type {?} */ (iconElement)), options);\n        }\n        // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n        // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n        // tag is problematic on Firefox, because it needs to include the current page path.\n        if (iconElement.nodeName.toLowerCase() === 'symbol') {\n            return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n        }\n        // createElement('SVG') doesn't work as expected; the DOM ends up with\n        // the correct nodes, but the SVG content doesn't render. Instead we\n        // have to create an empty SVG node using innerHTML and append its content.\n        // Elements created using DOMParser.parseFromString have the same problem.\n        // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        // Clone the node so we don't remove it from the parent icon set element.\n        svg.appendChild(iconElement);\n        return this._setSvgAttributes(svg, options);\n    }\n    /**\n     * Creates a DOM element from the given SVG string.\n     * @private\n     * @param {?} str\n     * @return {?}\n     */\n    _svgElementFromString(str) {\n        /** @type {?} */\n        const div = this._document.createElement('DIV');\n        div.innerHTML = str;\n        /** @type {?} */\n        const svg = (/** @type {?} */ (div.querySelector('svg')));\n        if (!svg) {\n            throw Error('<svg> tag not found');\n        }\n        return svg;\n    }\n    /**\n     * Converts an element into an SVG node by cloning all of its children.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _toSvgElement(element) {\n        /** @type {?} */\n        const svg = this._svgElementFromString('<svg></svg>');\n        /** @type {?} */\n        const attributes = element.attributes;\n        // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n        for (let i = 0; i < attributes.length; i++) {\n            const { name, value } = attributes[i];\n            if (name !== 'id') {\n                svg.setAttribute(name, value);\n            }\n        }\n        for (let i = 0; i < element.childNodes.length; i++) {\n            if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n                svg.appendChild(element.childNodes[i].cloneNode(true));\n            }\n        }\n        return svg;\n    }\n    /**\n     * Sets the default attributes for an SVG element to be used as an icon.\n     * @private\n     * @param {?} svg\n     * @param {?=} options\n     * @return {?}\n     */\n    _setSvgAttributes(svg, options) {\n        svg.setAttribute('fit', '');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n        svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n        if (options && options.viewBox) {\n            svg.setAttribute('viewBox', options.viewBox);\n        }\n        return svg;\n    }\n    /**\n     * Returns an Observable which produces the string contents of the given URL. Results may be\n     * cached, so future calls with the same URL may not cause another HTTP request.\n     * @private\n     * @param {?} safeUrl\n     * @return {?}\n     */\n    _fetchUrl(safeUrl) {\n        if (!this._httpClient) {\n            throw getMatIconNoHttpProviderError();\n        }\n        if (safeUrl == null) {\n            throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n        }\n        /** @type {?} */\n        const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n        if (!url) {\n            throw getMatIconFailedToSanitizeUrlError(safeUrl);\n        }\n        // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n        // already a request in progress for that URL. It's necessary to call share() on the\n        // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n        /** @type {?} */\n        const inProgressFetch = this._inProgressUrlFetches.get(url);\n        if (inProgressFetch) {\n            return inProgressFetch;\n        }\n        // TODO(jelbourn): for some reason, the `finalize` operator \"loses\" the generic type on the\n        // Observable. Figure out why and fix it.\n        /** @type {?} */\n        const req = this._httpClient.get(url, { responseType: 'text' }).pipe(finalize((/**\n         * @return {?}\n         */\n        () => this._inProgressUrlFetches.delete(url))), share());\n        this._inProgressUrlFetches.set(url, req);\n        return req;\n    }\n    /**\n     * Registers an icon config by name in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} iconName Name under which to register the config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconConfig(namespace, iconName, config) {\n        (/** @type {?} */ (this))._svgIconConfigs.set(iconKey(namespace, iconName), config);\n        return (/** @type {?} */ (this));\n    }\n    /**\n     * Registers an icon set config in the specified namespace.\n     * @private\n     * @template THIS\n     * @this {THIS}\n     * @param {?} namespace Namespace in which to register the icon config.\n     * @param {?} config Config to be registered.\n     * @return {THIS}\n     */\n    _addSvgIconSetConfig(namespace, config) {\n        /** @type {?} */\n        const configNamespace = (/** @type {?} */ (this))._iconSetConfigs.get(namespace);\n        if (configNamespace) {\n            configNamespace.push(config);\n        }\n        else {\n            (/** @type {?} */ (this))._iconSetConfigs.set(namespace, [config]);\n        }\n        return (/** @type {?} */ (this));\n    }\n}\nMatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) { return new (t || MatIconRegistry)(ɵngcc0.ɵɵinject(ɵngcc1.HttpClient, 8), ɵngcc0.ɵɵinject(ɵngcc2.DomSanitizer), ɵngcc0.ɵɵinject(DOCUMENT, 8), ɵngcc0.ɵɵinject(ɵngcc0.ErrorHandler, 8)); };\n/** @nocollapse */\nMatIconRegistry.ctorParameters = () => [\n    { type: HttpClient, decorators: [{ type: Optional }] },\n    { type: DomSanitizer },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DOCUMENT,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\n/** @nocollapse */ MatIconRegistry.ɵprov = ɵɵdefineInjectable({ factory: function MatIconRegistry_Factory() { return new MatIconRegistry(ɵɵinject(HttpClient, 8), ɵɵinject(DomSanitizer), ɵɵinject(DOCUMENT, 8), ɵɵinject(ErrorHandler, 8)); }, token: MatIconRegistry, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconRegistry, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.HttpClient, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc2.DomSanitizer }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._document;\n    /**\n     * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._svgIconConfigs;\n    /**\n     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n     * Multiple icon sets can be registered under the same namespace.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._iconSetConfigs;\n    /**\n     * Cache for icons loaded by direct URLs.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._cachedIconsByUrl;\n    /**\n     * In-progress icon fetches. Used to coalesce multiple requests to the same URL.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._inProgressUrlFetches;\n    /**\n     * Map from font identifiers to their CSS class names. Used for icon fonts.\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._fontCssClassesByAlias;\n    /**\n     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n     * The default 'material-icons' value assumes that the material icon font has been loaded as\n     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._defaultFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._httpClient;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._sanitizer;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIconRegistry.prototype._errorHandler;\n}\n/**\n * \\@docs-private\n * @param {?} parentRegistry\n * @param {?} httpClient\n * @param {?} sanitizer\n * @param {?=} document\n * @param {?=} errorHandler\n * @return {?}\n */\nfunction ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, document, errorHandler) {\n    return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst ICON_REGISTRY_PROVIDER = {\n    // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n    provide: MatIconRegistry,\n    deps: [\n        [new Optional(), new SkipSelf(), MatIconRegistry],\n        [new Optional(), HttpClient],\n        DomSanitizer,\n        [new Optional(), ErrorHandler],\n        [new Optional(), (/** @type {?} */ (DOCUMENT))],\n    ],\n    useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n/**\n * Clones an SVGElement while preserving type information.\n * @param {?} svg\n * @return {?}\n */\nfunction cloneSvg(svg) {\n    return (/** @type {?} */ (svg.cloneNode(true)));\n}\n/**\n * Returns the cache key to use for an icon namespace and name.\n * @param {?} namespace\n * @param {?} name\n * @return {?}\n */\nfunction iconKey(namespace, name) {\n    return namespace + ':' + name;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatIcon.\n/**\n * \\@docs-private\n */\nclass MatIconBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatIconBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatIconMixinBase = mixinColor(MatIconBase);\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_ICON_LOCATION = new InjectionToken('mat-icon-location', {\n    providedIn: 'root',\n    factory: MAT_ICON_LOCATION_FACTORY\n});\n/**\n * Stubbed out location for `MatIcon`.\n * \\@docs-private\n * @record\n */\nfunction MatIconLocation() { }\nif (false) {\n    /** @type {?} */\n    MatIconLocation.prototype.getPathname;\n}\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_ICON_LOCATION_FACTORY() {\n    /** @type {?} */\n    const _document = inject(DOCUMENT);\n    /** @type {?} */\n    const _location = _document ? _document.location : null;\n    return {\n        // Note that this needs to be a function, rather than a property, because Angular\n        // will only resolve it once, but we want the current path on each call.\n        getPathname: (/**\n         * @return {?}\n         */\n        () => _location ? (_location.pathname + _location.search) : '')\n    };\n}\n/**\n * SVG attributes that accept a FuncIRI (e.g. `url(<something>)`).\n * @type {?}\n */\nconst funcIriAttributes = [\n    'clip-path',\n    'color-profile',\n    'src',\n    'cursor',\n    'fill',\n    'filter',\n    'marker',\n    'marker-start',\n    'marker-mid',\n    'marker-end',\n    'mask',\n    'stroke'\n];\nconst ɵ0 = /**\n * @param {?} attr\n * @return {?}\n */\nattr => `[${attr}]`;\n/**\n * Selector that can be used to find all elements that are using a `FuncIRI`.\n * @type {?}\n */\nconst funcIriAttributeSelector = funcIriAttributes.map((ɵ0)).join(', ');\n/**\n * Regex that can be used to extract the id out of a FuncIRI.\n * @type {?}\n */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\nclass MatIcon extends _MatIconMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _iconRegistry\n     * @param {?} ariaHidden\n     * @param {?=} _location\n     * @param {?=} _errorHandler\n     */\n    constructor(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {\n        super(elementRef);\n        this._iconRegistry = _iconRegistry;\n        this._location = _location;\n        this._errorHandler = _errorHandler;\n        this._inline = false;\n        /**\n         * Subscription to the current in-progress SVG icon request.\n         */\n        this._currentIconFetch = Subscription.EMPTY;\n        // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n        // the right thing to do for the majority of icon use-cases.\n        if (!ariaHidden) {\n            elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n        }\n    }\n    /**\n     * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n     * the element the icon is contained in.\n     * @return {?}\n     */\n    get inline() {\n        return this._inline;\n    }\n    /**\n     * @param {?} inline\n     * @return {?}\n     */\n    set inline(inline) {\n        this._inline = coerceBooleanProperty(inline);\n    }\n    /**\n     * Font set that the icon is a part of.\n     * @return {?}\n     */\n    get fontSet() { return this._fontSet; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontSet(value) {\n        this._fontSet = this._cleanupFontValue(value);\n    }\n    /**\n     * Name of an icon within a font set.\n     * @return {?}\n     */\n    get fontIcon() { return this._fontIcon; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set fontIcon(value) {\n        this._fontIcon = this._cleanupFontValue(value);\n    }\n    /**\n     * Splits an svgIcon binding value into its icon set and icon name components.\n     * Returns a 2-element array of [(icon set), (icon name)].\n     * The separator for the two fields is ':'. If there is no separator, an empty\n     * string is returned for the icon set and the entire value is returned for\n     * the icon name. If the argument is falsy, returns an array of two empty strings.\n     * Throws an error if the name contains two or more ':' separators.\n     * Examples:\n     *   `'social:cake' -> ['social', 'cake']\n     *   'penguin' -> ['', 'penguin']\n     *   null -> ['', '']\n     *   'a:b:c' -> (throws Error)`\n     * @private\n     * @param {?} iconName\n     * @return {?}\n     */\n    _splitIconName(iconName) {\n        if (!iconName) {\n            return ['', ''];\n        }\n        /** @type {?} */\n        const parts = iconName.split(':');\n        switch (parts.length) {\n            case 1: return ['', parts[0]]; // Use default namespace.\n            case 2: return (/** @type {?} */ (parts));\n            default: throw Error(`Invalid icon name: \"${iconName}\"`);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n        /** @type {?} */\n        const svgIconChanges = changes['svgIcon'];\n        if (svgIconChanges) {\n            this._currentIconFetch.unsubscribe();\n            if (this.svgIcon) {\n                const [namespace, iconName] = this._splitIconName(this.svgIcon);\n                this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n                    .pipe(take(1))\n                    .subscribe((/**\n                 * @param {?} svg\n                 * @return {?}\n                 */\n                svg => this._setSvgElement(svg)), (/**\n                 * @param {?} err\n                 * @return {?}\n                 */\n                (err) => {\n                    /** @type {?} */\n                    const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n                    // @breaking-change 9.0.0 _errorHandler parameter to be made required.\n                    if (this._errorHandler) {\n                        this._errorHandler.handleError(new Error(errorMessage));\n                    }\n                    else {\n                        console.error(errorMessage);\n                    }\n                }));\n            }\n            else if (svgIconChanges.previousValue) {\n                this._clearSvgElement();\n            }\n        }\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n        // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n        if (this._usingFontIcon()) {\n            this._updateFontIconClasses();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewChecked() {\n        /** @type {?} */\n        const cachedElements = this._elementsWithExternalReferences;\n        if (cachedElements && this._location && cachedElements.size) {\n            /** @type {?} */\n            const newPath = this._location.getPathname();\n            // We need to check whether the URL has changed on each change detection since\n            // the browser doesn't have an API that will let us react on link clicks and\n            // we can't depend on the Angular router. The references need to be updated,\n            // because while most browsers don't care whether the URL is correct after\n            // the first render, Safari will break if the user navigates to a different\n            // page and the SVG isn't re-rendered.\n            if (newPath !== this._previousPath) {\n                this._previousPath = newPath;\n                this._prependPathToReferences(newPath);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._currentIconFetch.unsubscribe();\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _usingFontIcon() {\n        return !this.svgIcon;\n    }\n    /**\n     * @private\n     * @param {?} svg\n     * @return {?}\n     */\n    _setSvgElement(svg) {\n        this._clearSvgElement();\n        // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n        // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n        // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n        /** @type {?} */\n        const styleTags = (/** @type {?} */ (svg.querySelectorAll('style')));\n        for (let i = 0; i < styleTags.length; i++) {\n            styleTags[i].textContent += ' ';\n        }\n        // Note: we do this fix here, rather than the icon registry, because the\n        // references have to point to the URL at the time that the icon was created.\n        if (this._location) {\n            /** @type {?} */\n            const path = this._location.getPathname();\n            this._previousPath = path;\n            this._cacheChildrenWithExternalReferences(svg);\n            this._prependPathToReferences(path);\n        }\n        this._elementRef.nativeElement.appendChild(svg);\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _clearSvgElement() {\n        /** @type {?} */\n        const layoutElement = this._elementRef.nativeElement;\n        /** @type {?} */\n        let childCount = layoutElement.childNodes.length;\n        if (this._elementsWithExternalReferences) {\n            this._elementsWithExternalReferences.clear();\n        }\n        // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n        // we can't use innerHTML, because IE will throw if the element has a data binding.\n        while (childCount--) {\n            /** @type {?} */\n            const child = layoutElement.childNodes[childCount];\n            // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n            // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n            if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n                layoutElement.removeChild(child);\n            }\n        }\n    }\n    /**\n     * @private\n     * @return {?}\n     */\n    _updateFontIconClasses() {\n        if (!this._usingFontIcon()) {\n            return;\n        }\n        /** @type {?} */\n        const elem = this._elementRef.nativeElement;\n        /** @type {?} */\n        const fontSetClass = this.fontSet ?\n            this._iconRegistry.classNameForFontAlias(this.fontSet) :\n            this._iconRegistry.getDefaultFontSetClass();\n        if (fontSetClass != this._previousFontSetClass) {\n            if (this._previousFontSetClass) {\n                elem.classList.remove(this._previousFontSetClass);\n            }\n            if (fontSetClass) {\n                elem.classList.add(fontSetClass);\n            }\n            this._previousFontSetClass = fontSetClass;\n        }\n        if (this.fontIcon != this._previousFontIconClass) {\n            if (this._previousFontIconClass) {\n                elem.classList.remove(this._previousFontIconClass);\n            }\n            if (this.fontIcon) {\n                elem.classList.add(this.fontIcon);\n            }\n            this._previousFontIconClass = this.fontIcon;\n        }\n    }\n    /**\n     * Cleans up a value to be used as a fontIcon or fontSet.\n     * Since the value ends up being assigned as a CSS class, we\n     * have to trim the value and omit space-separated values.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _cleanupFontValue(value) {\n        return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n    }\n    /**\n     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n     * reference. This is required because WebKit browsers require references to be prefixed with\n     * the current path, if the page has a `base` tag.\n     * @private\n     * @param {?} path\n     * @return {?}\n     */\n    _prependPathToReferences(path) {\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences;\n        if (elements) {\n            elements.forEach((/**\n             * @param {?} attrs\n             * @param {?} element\n             * @return {?}\n             */\n            (attrs, element) => {\n                attrs.forEach((/**\n                 * @param {?} attr\n                 * @return {?}\n                 */\n                attr => {\n                    element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n                }));\n            }));\n        }\n    }\n    /**\n     * Caches the children of an SVG element that have `url()`\n     * references that we need to prefix with the current path.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _cacheChildrenWithExternalReferences(element) {\n        /** @type {?} */\n        const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n        /** @type {?} */\n        const elements = this._elementsWithExternalReferences =\n            this._elementsWithExternalReferences || new Map();\n        for (let i = 0; i < elementsWithFuncIri.length; i++) {\n            funcIriAttributes.forEach((/**\n             * @param {?} attr\n             * @return {?}\n             */\n            attr => {\n                /** @type {?} */\n                const elementWithReference = elementsWithFuncIri[i];\n                /** @type {?} */\n                const value = elementWithReference.getAttribute(attr);\n                /** @type {?} */\n                const match = value ? value.match(funcIriPattern) : null;\n                if (match) {\n                    /** @type {?} */\n                    let attributes = elements.get(elementWithReference);\n                    if (!attributes) {\n                        attributes = [];\n                        elements.set(elementWithReference, attributes);\n                    }\n                    (/** @type {?} */ (attributes)).push({ name: attr, value: match[1] });\n                }\n            }));\n        }\n    }\n}\nMatIcon.ɵfac = function MatIcon_Factory(t) { return new (t || MatIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MatIconRegistry), ɵngcc0.ɵɵinjectAttribute('aria-hidden'), ɵngcc0.ɵɵdirectiveInject(MAT_ICON_LOCATION, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ErrorHandler, 8)); };\nMatIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatIcon, selectors: [[\"mat-icon\"]], hostAttrs: [\"role\", \"img\", 1, \"mat-icon\", \"notranslate\"], hostVars: 4, hostBindings: function MatIcon_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-icon-inline\", ctx.inline)(\"mat-icon-no-color\", ctx.color !== \"primary\" && ctx.color !== \"accent\" && ctx.color !== \"warn\");\n    } }, inputs: { color: \"color\", inline: \"inline\", fontSet: \"fontSet\", fontIcon: \"fontIcon\", svgIcon: \"svgIcon\" }, exportAs: [\"matIcon\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatIcon_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n    } }, styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatIcon.ctorParameters = () => [\n    { type: ElementRef },\n    { type: MatIconRegistry },\n    { type: String, decorators: [{ type: Attribute, args: ['aria-hidden',] }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_ICON_LOCATION,] }] },\n    { type: ErrorHandler, decorators: [{ type: Optional }] }\n];\nMatIcon.propDecorators = {\n    inline: [{ type: Input }],\n    svgIcon: [{ type: Input }],\n    fontSet: [{ type: Input }],\n    fontIcon: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIcon, [{\n        type: Component,\n        args: [{\n                template: '<ng-content></ng-content>',\n                selector: 'mat-icon',\n                exportAs: 'matIcon',\n                inputs: ['color'],\n                host: {\n                    'role': 'img',\n                    'class': 'mat-icon notranslate',\n                    '[class.mat-icon-inline]': 'inline',\n                    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: MatIconRegistry }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['aria-hidden']\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_ICON_LOCATION]\n            }] }, { type: ɵngcc0.ErrorHandler, decorators: [{\n                type: Optional\n            }] }]; }, { inline: [{\n            type: Input\n        }], fontSet: [{\n            type: Input\n        }], fontIcon: [{\n            type: Input\n        }], svgIcon: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatIcon.ngAcceptInputType_inline;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._inline;\n    /**\n     * Name of the icon in the SVG icon set.\n     * @type {?}\n     */\n    MatIcon.prototype.svgIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontSet;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._fontIcon;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontSetClass;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousFontIconClass;\n    /**\n     * Keeps track of the current page path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._previousPath;\n    /**\n     * Keeps track of the elements and attributes that we've prefixed with the current path.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._elementsWithExternalReferences;\n    /**\n     * Subscription to the current in-progress SVG icon request.\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._currentIconFetch;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._iconRegistry;\n    /**\n     * @deprecated `location` parameter to be made required.\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._location;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatIcon.prototype._errorHandler;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/icon-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatIconModule {\n}\nMatIconModule.ɵfac = function MatIconModule_Factory(t) { return new (t || MatIconModule)(); };\nMatIconModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatIconModule });\nMatIconModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[MatCommonModule], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatIconModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatIcon, MatCommonModule],\n                declarations: [MatIcon]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatIconModule, { declarations: function () { return [MatIcon]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatIcon, MatCommonModule]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/icon/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError };\n\n","import { PortalModule } from '@angular/cdk/portal';\nimport { CdkStepLabel, CdkStepHeader, CdkStep, STEPPER_GLOBAL_OPTIONS, CdkStepper, CdkStepperNext, CdkStepperPrevious, CdkStepperModule } from '@angular/cdk/stepper';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { Directive, Injectable, ɵɵdefineInjectable, Optional, SkipSelf, Component, ViewEncapsulation, ChangeDetectionStrategy, ElementRef, ChangeDetectorRef, Input, TemplateRef, Inject, forwardRef, ContentChild, EventEmitter, ViewChildren, ContentChildren, Output, NgModule } from '@angular/core';\nimport { MatButtonModule } from '@angular/material/button';\nimport { ErrorStateMatcher, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { MatIconModule } from '@angular/material/icon';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { Subject } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { takeUntil, distinctUntilChanged } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/material/icon';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nfunction MatStepHeader_ng_container_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 9);\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.iconOverrides[ctx_r0.state])(\"ngTemplateOutletContext\", ctx_r0._getIconContext());\n} }\nfunction MatStepHeader_ng_container_4_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r6._getDefaultTextForState(ctx_r6.state));\n} }\nfunction MatStepHeader_ng_container_4_mat_icon_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"mat-icon\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7._getDefaultTextForState(ctx_r7.state));\n} }\nfunction MatStepHeader_ng_container_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0, 10);\n    ɵngcc0.ɵɵtemplate(1, MatStepHeader_ng_container_4_span_1_Template, 2, 1, \"span\", 11);\n    ɵngcc0.ɵɵtemplate(2, MatStepHeader_ng_container_4_mat_icon_2_Template, 2, 1, \"mat-icon\", 12);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngSwitch\", ctx_r1.state);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngSwitchCase\", \"number\");\n} }\nfunction MatStepHeader_ng_container_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainer(0, 13);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2._templateLabel().template);\n} }\nfunction MatStepHeader_div_7_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 14);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r3.label);\n} }\nfunction MatStepHeader_div_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 15);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r4._intl.optionalLabel);\n} }\nfunction MatStepHeader_div_9_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 16);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r5.errorMessage);\n} }\nfunction MatStep_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatHorizontalStepper_ng_container_1_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction MatHorizontalStepper_ng_container_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 4);\n    ɵngcc0.ɵɵlistener(\"click\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r7); const step_r2 = restoredCtx.$implicit; return step_r2.select(); })(\"keydown\", function MatHorizontalStepper_ng_container_1_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r7); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(2, MatHorizontalStepper_ng_container_1_div_2_Template, 1, 0, \"div\", 5);\n    ɵngcc0.ɵɵelementContainerEnd();\n} if (rf & 2) {\n    const step_r2 = ctx.$implicit;\n    const i_r3 = ctx.index;\n    const isLast_r4 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() === i_r3 ? 0 : -1)(\"id\", ctx_r0._getStepLabelId(i_r3))(\"index\", i_r3)(\"state\", ctx_r0._getIndicatorType(i_r3, step_r2.state))(\"label\", step_r2.stepLabel || step_r2.label)(\"selected\", ctx_r0.selectedIndex === i_r3)(\"active\", step_r2.completed || ctx_r0.selectedIndex === i_r3 || !ctx_r0.linear)(\"optional\", step_r2.optional)(\"errorMessage\", step_r2.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r3 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r3))(\"aria-selected\", ctx_r0.selectedIndex == i_r3)(\"aria-label\", step_r2.ariaLabel || null)(\"aria-labelledby\", !step_r2.ariaLabel && step_r2.ariaLabelledby ? step_r2.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !isLast_r4);\n} }\nfunction MatHorizontalStepper_div_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatHorizontalStepper_div_3_Template_div_animation_stepTransition_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11._animationDone.next($event); });\n    ɵngcc0.ɵɵelementContainer(1, 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r9 = ctx.$implicit;\n    const i_r10 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r1._getAnimationDirection(i_r10))(\"id\", ctx_r1._getStepContentId(i_r10));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r1.selectedIndex === i_r10 ? 0 : null)(\"aria-labelledby\", ctx_r1._getStepLabelId(i_r10))(\"aria-expanded\", ctx_r1.selectedIndex === i_r10);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r9.content);\n} }\nfunction MatVerticalStepper_div_0_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 1);\n    ɵngcc0.ɵɵelementStart(1, \"mat-step-header\", 2);\n    ɵngcc0.ɵɵlistener(\"click\", function MatVerticalStepper_div_0_Template_mat_step_header_click_1_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r5); const step_r1 = restoredCtx.$implicit; return step_r1.select(); })(\"keydown\", function MatVerticalStepper_div_0_Template_mat_step_header_keydown_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6._onKeydown($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"div\", 3);\n    ɵngcc0.ɵɵelementStart(3, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"@stepTransition.done\", function MatVerticalStepper_div_0_Template_div_animation_stepTransition_done_3_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const ctx_r7 = ɵngcc0.ɵɵnextContext(); return ctx_r7._animationDone.next($event); });\n    ɵngcc0.ɵɵelementStart(4, \"div\", 5);\n    ɵngcc0.ɵɵelementContainer(5, 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const step_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const isLast_r3 = ctx.last;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"tabIndex\", ctx_r0._getFocusIndex() == i_r2 ? 0 : -1)(\"id\", ctx_r0._getStepLabelId(i_r2))(\"index\", i_r2)(\"state\", ctx_r0._getIndicatorType(i_r2, step_r1.state))(\"label\", step_r1.stepLabel || step_r1.label)(\"selected\", ctx_r0.selectedIndex === i_r2)(\"active\", step_r1.completed || ctx_r0.selectedIndex === i_r2 || !ctx_r0.linear)(\"optional\", step_r1.optional)(\"errorMessage\", step_r1.errorMessage)(\"iconOverrides\", ctx_r0._iconOverrides)(\"disableRipple\", ctx_r0.disableRipple);\n    ɵngcc0.ɵɵattribute(\"aria-posinset\", i_r2 + 1)(\"aria-setsize\", ctx_r0.steps.length)(\"aria-controls\", ctx_r0._getStepContentId(i_r2))(\"aria-selected\", ctx_r0.selectedIndex === i_r2)(\"aria-label\", step_r1.ariaLabel || null)(\"aria-labelledby\", !step_r1.ariaLabel && step_r1.ariaLabelledby ? step_r1.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"mat-stepper-vertical-line\", !isLast_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"@stepTransition\", ctx_r0._getAnimationDirection(i_r2))(\"id\", ctx_r0._getStepContentId(i_r2));\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r0.selectedIndex === i_r2 ? 0 : null)(\"aria-labelledby\", ctx_r0._getStepLabelId(i_r2))(\"aria-expanded\", ctx_r0.selectedIndex === i_r2);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", step_r1.content);\n} }\nconst _c1 = \".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\";\nclass MatStepLabel extends CdkStepLabel {\n}\nMatStepLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatStepLabel_BaseFactory; return function MatStepLabel_Factory(t) { return (ɵMatStepLabel_BaseFactory || (ɵMatStepLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepLabel)))(t || MatStepLabel); }; }();\nMatStepLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepLabel, selectors: [[\"\", \"matStepLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[matStepLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-intl.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Stepper data that is required for internationalization.\n */\nclass MatStepperIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n        /**\n         * Label that is rendered below optional steps.\n         */\n        this.optionalLabel = 'Optional';\n    }\n}\nMatStepperIntl.ɵfac = function MatStepperIntl_Factory(t) { return new (t || MatStepperIntl)(); };\n/** @nocollapse */ MatStepperIntl.ɵprov = ɵɵdefineInjectable({ factory: function MatStepperIntl_Factory() { return new MatStepperIntl(); }, token: MatStepperIntl, providedIn: \"root\" });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIntl, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * Stream that emits whenever the labels here are changed. Use this to notify\n     * components if the labels have changed after initialization.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.changes;\n    /**\n     * Label that is rendered below optional steps.\n     * @type {?}\n     */\n    MatStepperIntl.prototype.optionalLabel;\n}\n/**\n * \\@docs-private\n * @param {?} parentIntl\n * @return {?}\n */\nfunction MAT_STEPPER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatStepperIntl();\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_STEPPER_INTL_PROVIDER = {\n    provide: MatStepperIntl,\n    deps: [[new Optional(), new SkipSelf(), MatStepperIntl]],\n    useFactory: MAT_STEPPER_INTL_PROVIDER_FACTORY\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/step-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepHeader extends CdkStepHeader {\n    /**\n     * @param {?} _intl\n     * @param {?} _focusMonitor\n     * @param {?} _elementRef\n     * @param {?} changeDetectorRef\n     */\n    constructor(_intl, _focusMonitor, _elementRef, changeDetectorRef) {\n        super(_elementRef);\n        this._intl = _intl;\n        this._focusMonitor = _focusMonitor;\n        _focusMonitor.monitor(_elementRef, true);\n        this._intlSubscription = _intl.changes.subscribe((/**\n         * @return {?}\n         */\n        () => changeDetectorRef.markForCheck()));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._intlSubscription.unsubscribe();\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Focuses the step header.\n     * @return {?}\n     */\n    focus() {\n        this._focusMonitor.focusVia(this._elementRef, 'program');\n    }\n    /**\n     * Returns string label of given step if it is a text label.\n     * @return {?}\n     */\n    _stringLabel() {\n        return this.label instanceof MatStepLabel ? null : this.label;\n    }\n    /**\n     * Returns MatStepLabel if the label of given step is a template label.\n     * @return {?}\n     */\n    _templateLabel() {\n        return this.label instanceof MatStepLabel ? this.label : null;\n    }\n    /**\n     * Returns the host HTML element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Template context variables that are exposed to the `matStepperIcon` instances.\n     * @return {?}\n     */\n    _getIconContext() {\n        return {\n            index: this.index,\n            active: this.active,\n            optional: this.optional\n        };\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _getDefaultTextForState(state) {\n        if (state == 'number') {\n            return `${this.index + 1}`;\n        }\n        if (state == 'edit') {\n            return 'create';\n        }\n        if (state == 'error') {\n            return 'warning';\n        }\n        return state;\n    }\n}\nMatStepHeader.ɵfac = function MatStepHeader_Factory(t) { return new (t || MatStepHeader)(ɵngcc0.ɵɵdirectiveInject(MatStepperIntl), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatStepHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStepHeader, selectors: [[\"mat-step-header\"]], hostAttrs: [\"role\", \"tab\", 1, \"mat-step-header\", \"mat-focus-indicator\"], inputs: { state: \"state\", label: \"label\", errorMessage: \"errorMessage\", iconOverrides: \"iconOverrides\", index: \"index\", selected: \"selected\", active: \"active\", optional: \"optional\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 10, vars: 19, consts: [[\"matRipple\", \"\", 1, \"mat-step-header-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [1, \"mat-step-icon-content\", 3, \"ngSwitch\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\", 4, \"ngSwitchCase\"], [3, \"ngSwitch\", 4, \"ngSwitchDefault\"], [1, \"mat-step-label\"], [3, \"ngTemplateOutlet\", 4, \"ngIf\"], [\"class\", \"mat-step-text-label\", 4, \"ngIf\"], [\"class\", \"mat-step-optional\", 4, \"ngIf\"], [\"class\", \"mat-step-sub-label-error\", 4, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [3, \"ngTemplateOutlet\"], [1, \"mat-step-text-label\"], [1, \"mat-step-optional\"], [1, \"mat-step-sub-label-error\"]], template: function MatStepHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\");\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, MatStepHeader_ng_container_3_Template, 1, 2, \"ng-container\", 2);\n        ɵngcc0.ɵɵtemplate(4, MatStepHeader_ng_container_4_Template, 3, 2, \"ng-container\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(5, \"div\", 4);\n        ɵngcc0.ɵɵtemplate(6, MatStepHeader_ng_container_6_Template, 1, 1, \"ng-container\", 5);\n        ɵngcc0.ɵɵtemplate(7, MatStepHeader_div_7_Template, 2, 1, \"div\", 6);\n        ɵngcc0.ɵɵtemplate(8, MatStepHeader_div_8_Template, 2, 1, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(9, MatStepHeader_div_9_Template, 2, 1, \"div\", 8);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate1(\"mat-step-icon-state-\", ctx.state, \" mat-step-icon\");\n        ɵngcc0.ɵɵclassProp(\"mat-step-icon-selected\", ctx.selected);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitch\", !!(ctx.iconOverrides && ctx.iconOverrides[ctx.state]));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngSwitchCase\", true);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵclassProp(\"mat-step-label-active\", ctx.active)(\"mat-step-label-selected\", ctx.selected)(\"mat-step-label-error\", ctx.state == \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._templateLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx._stringLabel());\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.optional && ctx.state != \"error\");\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.state == \"error\");\n    } }, directives: [ɵngcc2.MatRipple, ɵngcc3.NgSwitch, ɵngcc3.NgSwitchCase, ɵngcc3.NgSwitchDefault, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet, ɵngcc4.MatIcon], styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStepHeader.ctorParameters = () => [\n    { type: MatStepperIntl },\n    { type: FocusMonitor },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nMatStepHeader.propDecorators = {\n    state: [{ type: Input }],\n    label: [{ type: Input }],\n    errorMessage: [{ type: Input }],\n    iconOverrides: [{ type: Input }],\n    index: [{ type: Input }],\n    selected: [{ type: Input }],\n    active: [{ type: Input }],\n    optional: [{ type: Input }],\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step-header',\n                template: \"<div class=\\\"mat-step-header-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disableRipple\\\"></div>\\n\\n<div class=\\\"mat-step-icon-state-{{state}} mat-step-icon\\\" [class.mat-step-icon-selected]=\\\"selected\\\">\\n  <div class=\\\"mat-step-icon-content\\\" [ngSwitch]=\\\"!!(iconOverrides && iconOverrides[state])\\\">\\n    <ng-container\\n      *ngSwitchCase=\\\"true\\\"\\n      [ngTemplateOutlet]=\\\"iconOverrides[state]\\\"\\n      [ngTemplateOutletContext]=\\\"_getIconContext()\\\"></ng-container>\\n    <ng-container *ngSwitchDefault [ngSwitch]=\\\"state\\\">\\n      <span *ngSwitchCase=\\\"'number'\\\">{{_getDefaultTextForState(state)}}</span>\\n      <mat-icon *ngSwitchDefault>{{_getDefaultTextForState(state)}}</mat-icon>\\n    </ng-container>\\n  </div>\\n</div>\\n<div class=\\\"mat-step-label\\\"\\n     [class.mat-step-label-active]=\\\"active\\\"\\n     [class.mat-step-label-selected]=\\\"selected\\\"\\n     [class.mat-step-label-error]=\\\"state == 'error'\\\">\\n  <!-- If there is a label template, use it. -->\\n  <ng-container *ngIf=\\\"_templateLabel()\\\" [ngTemplateOutlet]=\\\"_templateLabel()!.template\\\">\\n  </ng-container>\\n  <!-- If there is no label template, fall back to the text label. -->\\n  <div class=\\\"mat-step-text-label\\\" *ngIf=\\\"_stringLabel()\\\">{{label}}</div>\\n\\n  <div class=\\\"mat-step-optional\\\" *ngIf=\\\"optional && state != 'error'\\\">{{_intl.optionalLabel}}</div>\\n  <div class=\\\"mat-step-sub-label-error\\\" *ngIf=\\\"state == 'error'\\\">{{errorMessage}}</div>\\n</div>\\n\\n\",\n                host: {\n                    'class': 'mat-step-header mat-focus-indicator',\n                    'role': 'tab'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-step-header{overflow:hidden;outline:none;cursor:pointer;position:relative;box-sizing:content-box;-webkit-tap-highlight-color:transparent}.mat-step-optional,.mat-step-sub-label-error{font-size:12px}.mat-step-icon{border-radius:50%;height:24px;width:24px;flex-shrink:0;position:relative}.mat-step-icon-content,.mat-step-icon .mat-icon{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}.mat-step-icon .mat-icon{font-size:16px;height:16px;width:16px}.mat-step-icon-state-error .mat-icon{font-size:24px;height:24px;width:24px}.mat-step-label{display:inline-block;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;min-width:50px;vertical-align:middle}.mat-step-text-label{text-overflow:ellipsis;overflow:hidden}.mat-step-header .mat-step-header-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: MatStepperIntl }, { type: ɵngcc1.FocusMonitor }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }]; }, { state: [{\n            type: Input\n        }], label: [{\n            type: Input\n        }], errorMessage: [{\n            type: Input\n        }], iconOverrides: [{\n            type: Input\n        }], index: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }], active: [{\n            type: Input\n        }], optional: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._intlSubscription;\n    /**\n     * State of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.state;\n    /**\n     * Label of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.label;\n    /**\n     * Error message to display when there's an error.\n     * @type {?}\n     */\n    MatStepHeader.prototype.errorMessage;\n    /**\n     * Overrides for the header icons, passed in via the stepper.\n     * @type {?}\n     */\n    MatStepHeader.prototype.iconOverrides;\n    /**\n     * Index of the given step.\n     * @type {?}\n     */\n    MatStepHeader.prototype.index;\n    /**\n     * Whether the given step is selected.\n     * @type {?}\n     */\n    MatStepHeader.prototype.selected;\n    /**\n     * Whether the given step label is active.\n     * @type {?}\n     */\n    MatStepHeader.prototype.active;\n    /**\n     * Whether the given step is optional.\n     * @type {?}\n     */\n    MatStepHeader.prototype.optional;\n    /**\n     * Whether the ripple should be disabled.\n     * @type {?}\n     */\n    MatStepHeader.prototype.disableRipple;\n    /** @type {?} */\n    MatStepHeader.prototype._intl;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStepHeader.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material steppers.\n * \\@docs-private\n * @type {?}\n */\nconst matStepperAnimations = {\n    /**\n     * Animation that transitions the step along the X axis in a horizontal stepper.\n     */\n    horizontalStepTransition: trigger('stepTransition', [\n        state('previous', style({ transform: 'translate3d(-100%, 0, 0)', visibility: 'hidden' })),\n        state('current', style({ transform: 'none', visibility: 'visible' })),\n        state('next', style({ transform: 'translate3d(100%, 0, 0)', visibility: 'hidden' })),\n        transition('* => *', animate('500ms cubic-bezier(0.35, 0, 0.25, 1)'))\n    ]),\n    /**\n     * Animation that transitions the step along the Y axis in a vertical stepper.\n     */\n    verticalStepTransition: trigger('stepTransition', [\n        state('previous', style({ height: '0px', visibility: 'hidden' })),\n        state('next', style({ height: '0px', visibility: 'hidden' })),\n        state('current', style({ height: '*', visibility: 'visible' })),\n        transition('* <=> current', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)'))\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-icon.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Template context available to an attached `matStepperIcon`.\n * @record\n */\nfunction MatStepperIconContext() { }\nif (false) {\n    /**\n     * Index of the step.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.index;\n    /**\n     * Whether the step is currently active.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.active;\n    /**\n     * Whether the step is optional.\n     * @type {?}\n     */\n    MatStepperIconContext.prototype.optional;\n}\n/**\n * Template to be used to override the icons inside the step header.\n */\nclass MatStepperIcon {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nMatStepperIcon.ɵfac = function MatStepperIcon_Factory(t) { return new (t || MatStepperIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatStepperIcon.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperIcon, selectors: [[\"ng-template\", \"matStepperIcon\", \"\"]], inputs: { name: [\"matStepperIcon\", \"name\"] } });\n/** @nocollapse */\nMatStepperIcon.ctorParameters = () => [\n    { type: TemplateRef }\n];\nMatStepperIcon.propDecorators = {\n    name: [{ type: Input, args: ['matStepperIcon',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperIcon, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matStepperIcon]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, { name: [{\n            type: Input,\n            args: ['matStepperIcon']\n        }] }); })();\nif (false) {\n    /**\n     * Name of the icon to be overridden.\n     * @type {?}\n     */\n    MatStepperIcon.prototype.name;\n    /** @type {?} */\n    MatStepperIcon.prototype.templateRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStep extends CdkStep {\n    /**\n     * \\@breaking-change 8.0.0 remove the `?` after `stepperOptions`\n     * @param {?} stepper\n     * @param {?} _errorStateMatcher\n     * @param {?=} stepperOptions\n     */\n    constructor(stepper, _errorStateMatcher, stepperOptions) {\n        super(stepper, stepperOptions);\n        this._errorStateMatcher = _errorStateMatcher;\n    }\n    /**\n     * Custom error state matcher that additionally checks for validity of interacted form.\n     * @param {?} control\n     * @param {?} form\n     * @return {?}\n     */\n    isErrorState(control, form) {\n        /** @type {?} */\n        const originalErrorState = this._errorStateMatcher.isErrorState(control, form);\n        // Custom error state checks for the validity of form that is not submitted or touched\n        // since user can trigger a form change by calling for another step without directly\n        // interacting with the current form.\n        /** @type {?} */\n        const customErrorState = !!(control && control.invalid && this.interacted);\n        return originalErrorState || customErrorState;\n    }\n}\nMatStep.ɵfac = function MatStep_Factory(t) { return new (t || MatStep)(ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatStepper))), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.ErrorStateMatcher, 4), ɵngcc0.ɵɵdirectiveInject(STEPPER_GLOBAL_OPTIONS, 8)); };\nMatStep.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatStep, selectors: [[\"mat-step\"]], contentQueries: function MatStep_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepLabel, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.stepLabel = _t.first);\n    } }, exportAs: [\"matStep\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: ErrorStateMatcher, useExisting: MatStep },\n            { provide: CdkStep, useExisting: MatStep },\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatStep_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatStep_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatStep.ctorParameters = () => [\n    { type: MatStepper, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatStepper)),] }] },\n    { type: ErrorStateMatcher, decorators: [{ type: SkipSelf }] },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [STEPPER_GLOBAL_OPTIONS,] }] }\n];\nMatStep.propDecorators = {\n    stepLabel: [{ type: ContentChild, args: [MatStepLabel,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStep, [{\n        type: Component,\n        args: [{\n                selector: 'mat-step',\n                template: \"<ng-template><ng-content></ng-content></ng-template>\\n\",\n                providers: [\n                    { provide: ErrorStateMatcher, useExisting: MatStep },\n                    { provide: CdkStep, useExisting: MatStep },\n                ],\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matStep',\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: MatStepper, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatStepper))]\n            }] }, { type: ɵngcc2.ErrorStateMatcher, decorators: [{\n                type: SkipSelf\n            }] }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [STEPPER_GLOBAL_OPTIONS]\n            }] }]; }, { stepLabel: [{\n            type: ContentChild,\n            args: [MatStepLabel]\n        }] }); })();\nif (false) {\n    /**\n     * Content for step label given by `<ng-template matStepLabel>`.\n     * @type {?}\n     */\n    MatStep.prototype.stepLabel;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatStep.prototype._errorStateMatcher;\n}\nclass MatStepper extends CdkStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Event emitted when the current step is done transitioning in.\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Consumer-specified template-refs to be used to override the header icons.\n         */\n        this._iconOverrides = {};\n        /**\n         * Stream of animation `done` events when the body expands/collapses.\n         */\n        this._animationDone = new Subject();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._icons.forEach((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ({ name, templateRef }) => this._iconOverrides[name] = templateRef));\n        // Mark the component for change detection whenever the content children query changes\n        this._steps.changes.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._stateChanged();\n        }));\n        this._animationDone.pipe(\n        // This needs a `distinctUntilChanged` in order to avoid emitting the same event twice due\n        // to a bug in animations where the `.done` callback gets invoked twice on some browsers.\n        // See https://github.com/angular/angular/issues/24084\n        distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => x.fromState === y.fromState && x.toState === y.toState)), takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            if (((/** @type {?} */ (event.toState))) === 'current') {\n                this.animationDone.emit();\n            }\n        }));\n    }\n}\nMatStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatStepper_BaseFactory; return function MatStepper_Factory(t) { return (ɵMatStepper_BaseFactory || (ɵMatStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepper)))(t || MatStepper); }; }();\nMatStepper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepper, selectors: [[\"\", \"matStepper\", \"\"]], contentQueries: function MatStepper_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStep, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatStepperIcon, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._steps = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._icons = _t);\n    } }, viewQuery: function MatStepper_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatStepHeader, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._stepHeader = _t);\n    } }, inputs: { disableRipple: \"disableRipple\" }, outputs: { animationDone: \"animationDone\" }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: CdkStepper, useExisting: MatStepper }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\nMatStepper.propDecorators = {\n    _stepHeader: [{ type: ViewChildren, args: [MatStepHeader,] }],\n    _steps: [{ type: ContentChildren, args: [MatStep, { descendants: true },] }],\n    _icons: [{ type: ContentChildren, args: [MatStepperIcon, { descendants: true },] }],\n    animationDone: [{ type: Output }],\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepper, [{\n        type: Directive,\n        args: [{ selector: '[matStepper]', providers: [{ provide: CdkStepper, useExisting: MatStepper }] }]\n    }], null, { animationDone: [{\n            type: Output\n        }], _stepHeader: [{\n            type: ViewChildren,\n            args: [MatStepHeader]\n        }], _steps: [{\n            type: ContentChildren,\n            args: [MatStep, { descendants: true }]\n        }], _icons: [{\n            type: ContentChildren,\n            args: [MatStepperIcon, { descendants: true }]\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatStepper.ngAcceptInputType_hasError;\n    /**\n     * The list of step headers of the steps in the stepper.\n     * @type {?}\n     */\n    MatStepper.prototype._stepHeader;\n    /**\n     * Steps that the stepper holds.\n     * @type {?}\n     */\n    MatStepper.prototype._steps;\n    /**\n     * Custom icon overrides passed in by the consumer.\n     * @type {?}\n     */\n    MatStepper.prototype._icons;\n    /**\n     * Event emitted when the current step is done transitioning in.\n     * @type {?}\n     */\n    MatStepper.prototype.animationDone;\n    /**\n     * Whether ripples should be disabled for the step headers.\n     * @type {?}\n     */\n    MatStepper.prototype.disableRipple;\n    /**\n     * Consumer-specified template-refs to be used to override the header icons.\n     * @type {?}\n     */\n    MatStepper.prototype._iconOverrides;\n    /**\n     * Stream of animation `done` events when the body expands/collapses.\n     * @type {?}\n     */\n    MatStepper.prototype._animationDone;\n}\nclass MatHorizontalStepper extends MatStepper {\n    constructor() {\n        super(...arguments);\n        /**\n         * Whether the label should display in bottom or end position.\n         */\n        this.labelPosition = 'end';\n    }\n}\nMatHorizontalStepper.ɵfac = /*@__PURE__*/ function () { let ɵMatHorizontalStepper_BaseFactory; return function MatHorizontalStepper_Factory(t) { return (ɵMatHorizontalStepper_BaseFactory || (ɵMatHorizontalStepper_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatHorizontalStepper)))(t || MatHorizontalStepper); }; }();\nMatHorizontalStepper.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatHorizontalStepper, selectors: [[\"mat-horizontal-stepper\"]], hostAttrs: [\"aria-orientation\", \"horizontal\", \"role\", \"tablist\", 1, \"mat-stepper-horizontal\"], hostVars: 4, hostBindings: function MatHorizontalStepper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-stepper-label-position-end\", ctx.labelPosition == \"end\")(\"mat-stepper-label-position-bottom\", ctx.labelPosition == \"bottom\");\n    } }, inputs: { selectedIndex: \"selectedIndex\", labelPosition: \"labelPosition\" }, exportAs: [\"matHorizontalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatHorizontalStepper },\n            { provide: CdkStepper, useExisting: MatHorizontalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 4, vars: 2, consts: [[1, \"mat-horizontal-stepper-header-container\"], [4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-content-container\"], [\"class\", \"mat-horizontal-stepper-content\", \"role\", \"tabpanel\", 3, \"id\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-horizontal-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [\"class\", \"mat-stepper-horizontal-line\", 4, \"ngIf\"], [1, \"mat-stepper-horizontal-line\"], [\"role\", \"tabpanel\", 1, \"mat-horizontal-stepper-content\", 3, \"id\"], [3, \"ngTemplateOutlet\"]], template: function MatHorizontalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, MatHorizontalStepper_ng_container_1_Template, 3, 18, \"ng-container\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, MatHorizontalStepper_div_3_Template, 2, 6, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgIf, ɵngcc3.NgTemplateOutlet], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.horizontalStepTransition] }, changeDetection: 0 });\nMatHorizontalStepper.propDecorators = {\n    labelPosition: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatHorizontalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-horizontal-stepper',\n                exportAs: 'matHorizontalStepper',\n                template: \"<div class=\\\"mat-horizontal-stepper-header-container\\\">\\n  <ng-container *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n    <mat-step-header class=\\\"mat-horizontal-stepper-header\\\"\\n                     (click)=\\\"step.select()\\\"\\n                     (keydown)=\\\"_onKeydown($event)\\\"\\n                     [tabIndex]=\\\"_getFocusIndex() === i ? 0 : -1\\\"\\n                     [id]=\\\"_getStepLabelId(i)\\\"\\n                     [attr.aria-posinset]=\\\"i + 1\\\"\\n                     [attr.aria-setsize]=\\\"steps.length\\\"\\n                     [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                     [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n                     [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                     [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                     [index]=\\\"i\\\"\\n                     [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                     [label]=\\\"step.stepLabel || step.label\\\"\\n                     [selected]=\\\"selectedIndex === i\\\"\\n                     [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                     [optional]=\\\"step.optional\\\"\\n                     [errorMessage]=\\\"step.errorMessage\\\"\\n                     [iconOverrides]=\\\"_iconOverrides\\\"\\n                     [disableRipple]=\\\"disableRipple\\\">\\n    </mat-step-header>\\n    <div *ngIf=\\\"!isLast\\\" class=\\\"mat-stepper-horizontal-line\\\"></div>\\n  </ng-container>\\n</div>\\n\\n<div class=\\\"mat-horizontal-content-container\\\">\\n  <div *ngFor=\\\"let step of steps; let i = index\\\"\\n       [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n       class=\\\"mat-horizontal-stepper-content\\\" role=\\\"tabpanel\\\"\\n       [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n       (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n       [id]=\\\"_getStepContentId(i)\\\"\\n       [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n       [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-horizontal',\n                    '[class.mat-stepper-label-position-end]': 'labelPosition == \"end\"',\n                    '[class.mat-stepper-label-position-bottom]': 'labelPosition == \"bottom\"',\n                    'aria-orientation': 'horizontal',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.horizontalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatHorizontalStepper },\n                    { provide: CdkStepper, useExisting: MatHorizontalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], null, { labelPosition: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatHorizontalStepper.ngAcceptInputType_hasError;\n    /**\n     * Whether the label should display in bottom or end position.\n     * @type {?}\n     */\n    MatHorizontalStepper.prototype.labelPosition;\n}\nclass MatVerticalStepper extends MatStepper {\n    /**\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     * @param {?=} elementRef\n     * @param {?=} _document\n     */\n    constructor(dir, changeDetectorRef, \n    // @breaking-change 8.0.0 `elementRef` and `_document` parameters to become required.\n    elementRef, _document) {\n        super(dir, changeDetectorRef, elementRef, _document);\n        this._orientation = 'vertical';\n    }\n}\nMatVerticalStepper.ɵfac = function MatVerticalStepper_Factory(t) { return new (t || MatVerticalStepper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatVerticalStepper.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatVerticalStepper, selectors: [[\"mat-vertical-stepper\"]], hostAttrs: [\"aria-orientation\", \"vertical\", \"role\", \"tablist\", 1, \"mat-stepper-vertical\"], inputs: { selectedIndex: \"selectedIndex\" }, exportAs: [\"matVerticalStepper\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MatStepper, useExisting: MatVerticalStepper },\n            { provide: CdkStepper, useExisting: MatVerticalStepper }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 1, vars: 1, consts: [[\"class\", \"mat-step\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-step\"], [1, \"mat-vertical-stepper-header\", 3, \"tabIndex\", \"id\", \"index\", \"state\", \"label\", \"selected\", \"active\", \"optional\", \"errorMessage\", \"iconOverrides\", \"disableRipple\", \"click\", \"keydown\"], [1, \"mat-vertical-content-container\"], [\"role\", \"tabpanel\", 1, \"mat-vertical-stepper-content\", 3, \"id\"], [1, \"mat-vertical-content\"], [3, \"ngTemplateOutlet\"]], template: function MatVerticalStepper_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, MatVerticalStepper_div_0_Template, 6, 25, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.steps);\n    } }, directives: [ɵngcc3.NgForOf, MatStepHeader, ɵngcc3.NgTemplateOutlet], styles: [_c1], encapsulation: 2, data: { animation: [matStepperAnimations.verticalStepTransition] }, changeDetection: 0 });\n/** @nocollapse */\nMatVerticalStepper.ctorParameters = () => [\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatVerticalStepper, [{\n        type: Component,\n        args: [{\n                selector: 'mat-vertical-stepper',\n                exportAs: 'matVerticalStepper',\n                template: \"<div class=\\\"mat-step\\\" *ngFor=\\\"let step of steps; let i = index; let isLast = last\\\">\\n  <mat-step-header class=\\\"mat-vertical-stepper-header\\\"\\n                   (click)=\\\"step.select()\\\"\\n                   (keydown)=\\\"_onKeydown($event)\\\"\\n                   [tabIndex]=\\\"_getFocusIndex() == i ? 0 : -1\\\"\\n                   [id]=\\\"_getStepLabelId(i)\\\"\\n                   [attr.aria-posinset]=\\\"i + 1\\\"\\n                   [attr.aria-setsize]=\\\"steps.length\\\"\\n                   [attr.aria-controls]=\\\"_getStepContentId(i)\\\"\\n                   [attr.aria-selected]=\\\"selectedIndex === i\\\"\\n                   [attr.aria-label]=\\\"step.ariaLabel || null\\\"\\n                   [attr.aria-labelledby]=\\\"(!step.ariaLabel && step.ariaLabelledby) ? step.ariaLabelledby : null\\\"\\n                   [index]=\\\"i\\\"\\n                   [state]=\\\"_getIndicatorType(i, step.state)\\\"\\n                   [label]=\\\"step.stepLabel || step.label\\\"\\n                   [selected]=\\\"selectedIndex === i\\\"\\n                   [active]=\\\"step.completed || selectedIndex === i || !linear\\\"\\n                   [optional]=\\\"step.optional\\\"\\n                   [errorMessage]=\\\"step.errorMessage\\\"\\n                   [iconOverrides]=\\\"_iconOverrides\\\"\\n                   [disableRipple]=\\\"disableRipple\\\">\\n  </mat-step-header>\\n\\n  <div class=\\\"mat-vertical-content-container\\\" [class.mat-stepper-vertical-line]=\\\"!isLast\\\">\\n    <div class=\\\"mat-vertical-stepper-content\\\" role=\\\"tabpanel\\\"\\n         [attr.tabindex]=\\\"selectedIndex === i ? 0 : null\\\"\\n         [@stepTransition]=\\\"_getAnimationDirection(i)\\\"\\n         (@stepTransition.done)=\\\"_animationDone.next($event)\\\"\\n         [id]=\\\"_getStepContentId(i)\\\"\\n         [attr.aria-labelledby]=\\\"_getStepLabelId(i)\\\"\\n         [attr.aria-expanded]=\\\"selectedIndex === i\\\">\\n      <div class=\\\"mat-vertical-content\\\">\\n        <ng-container [ngTemplateOutlet]=\\\"step.content\\\"></ng-container>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                host: {\n                    'class': 'mat-stepper-vertical',\n                    'aria-orientation': 'vertical',\n                    'role': 'tablist'\n                },\n                animations: [matStepperAnimations.verticalStepTransition],\n                providers: [\n                    { provide: MatStepper, useExisting: MatVerticalStepper },\n                    { provide: CdkStepper, useExisting: MatVerticalStepper }\n                ],\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                styles: [\".mat-stepper-vertical,.mat-stepper-horizontal{display:block}.mat-horizontal-stepper-header-container{white-space:nowrap;display:flex;align-items:center}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header-container{align-items:flex-start}.mat-stepper-horizontal-line{border-top-width:1px;border-top-style:solid;flex:auto;height:0;margin:0 -16px;min-width:32px}.mat-stepper-label-position-bottom .mat-stepper-horizontal-line{margin:0;min-width:0;position:relative;top:36px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before,.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{border-top-width:1px;border-top-style:solid;content:\\\"\\\";display:inline-block;height:0;position:absolute;top:36px;width:calc(50% - 20px)}.mat-horizontal-stepper-header{display:flex;height:72px;overflow:hidden;align-items:center;padding:0 24px}.mat-horizontal-stepper-header .mat-step-icon{margin-right:8px;flex:none}[dir=rtl] .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:8px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header{box-sizing:border-box;flex-direction:column;height:auto;padding:24px}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::after,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::after{right:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:first-child)::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:not(:last-child)::before{left:0}[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:last-child::before,[dir=rtl] .mat-stepper-label-position-bottom .mat-horizontal-stepper-header:first-child::after{display:none}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-icon{margin-right:0;margin-left:0}.mat-stepper-label-position-bottom .mat-horizontal-stepper-header .mat-step-label{padding:16px 0 0 0;text-align:center;width:100%}.mat-vertical-stepper-header{display:flex;align-items:center;padding:24px;height:24px}.mat-vertical-stepper-header .mat-step-icon{margin-right:12px}[dir=rtl] .mat-vertical-stepper-header .mat-step-icon{margin-right:0;margin-left:12px}.mat-horizontal-stepper-content{outline:0}.mat-horizontal-stepper-content[aria-expanded=false]{height:0;overflow:hidden}.mat-horizontal-content-container{overflow:hidden;padding:0 24px 24px 24px}.mat-vertical-content-container{margin-left:36px;border:0;position:relative}[dir=rtl] .mat-vertical-content-container{margin-left:0;margin-right:36px}.mat-stepper-vertical-line::before{content:\\\"\\\";position:absolute;top:-16px;bottom:-16px;left:0;border-left-width:1px;border-left-style:solid}[dir=rtl] .mat-stepper-vertical-line::before{left:auto;right:0}.mat-vertical-stepper-content{overflow:hidden;outline:0}.mat-vertical-content{padding:0 24px 24px 24px}.mat-step:last-child .mat-vertical-content-container{border:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_editable;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_optional;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_completed;\n    /** @type {?} */\n    MatVerticalStepper.ngAcceptInputType_hasError;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-button.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Button that moves to the next step in a stepper workflow.\n */\nclass MatStepperNext extends CdkStepperNext {\n}\nMatStepperNext.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperNext_BaseFactory; return function MatStepperNext_Factory(t) { return (ɵMatStepperNext_BaseFactory || (ɵMatStepperNext_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperNext)))(t || MatStepperNext); }; }();\nMatStepperNext.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperNext, selectors: [[\"button\", \"matStepperNext\", \"\"]], hostVars: 1, hostBindings: function MatStepperNext_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperNext, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperNext]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n/**\n * Button that moves to the previous step in a stepper workflow.\n */\nclass MatStepperPrevious extends CdkStepperPrevious {\n}\nMatStepperPrevious.ɵfac = /*@__PURE__*/ function () { let ɵMatStepperPrevious_BaseFactory; return function MatStepperPrevious_Factory(t) { return (ɵMatStepperPrevious_BaseFactory || (ɵMatStepperPrevious_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatStepperPrevious)))(t || MatStepperPrevious); }; }();\nMatStepperPrevious.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatStepperPrevious, selectors: [[\"button\", \"matStepperPrevious\", \"\"]], hostVars: 1, hostBindings: function MatStepperPrevious_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"type\", ctx.type);\n    } }, inputs: { type: \"type\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperPrevious, [{\n        type: Directive,\n        args: [{\n                selector: 'button[matStepperPrevious]',\n                host: {\n                    '[type]': 'type'\n                },\n                inputs: ['type']\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/stepper-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatStepperModule {\n}\nMatStepperModule.ɵfac = function MatStepperModule_Factory(t) { return new (t || MatStepperModule)(); };\nMatStepperModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatStepperModule });\nMatStepperModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher], imports: [[\n            MatCommonModule,\n            CommonModule,\n            PortalModule,\n            MatButtonModule,\n            CdkStepperModule,\n            MatIconModule,\n            MatRippleModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatStepperModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    MatCommonModule,\n                    CommonModule,\n                    PortalModule,\n                    MatButtonModule,\n                    CdkStepperModule,\n                    MatIconModule,\n                    MatRippleModule,\n                ],\n                exports: [\n                    MatCommonModule,\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                declarations: [\n                    MatHorizontalStepper,\n                    MatVerticalStepper,\n                    MatStep,\n                    MatStepLabel,\n                    MatStepper,\n                    MatStepperNext,\n                    MatStepperPrevious,\n                    MatStepHeader,\n                    MatStepperIcon,\n                ],\n                providers: [MAT_STEPPER_INTL_PROVIDER, ErrorStateMatcher]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatStepperModule, { declarations: function () { return [MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; }, imports: function () { return [MatCommonModule,\n        CommonModule,\n        PortalModule,\n        MatButtonModule,\n        CdkStepperModule,\n        MatIconModule,\n        MatRippleModule]; }, exports: function () { return [MatCommonModule, MatHorizontalStepper, MatVerticalStepper, MatStep, MatStepLabel, MatStepper, MatStepperNext, MatStepperPrevious, MatStepHeader, MatStepperIcon]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/stepper/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_STEPPER_INTL_PROVIDER, MAT_STEPPER_INTL_PROVIDER_FACTORY, MatHorizontalStepper, MatStep, MatStepHeader, MatStepLabel, MatStepper, MatStepperIcon, MatStepperIntl, MatStepperModule, MatStepperNext, MatStepperPrevious, MatVerticalStepper, matStepperAnimations };\n\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { ProductModel } from 'src/app/shared/models/product-model';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { FacetingSandingPopupComponent } from './faceting-sanding-popup.component';\r\n\r\n@Injectable()\r\nexport class FacetingSandingPopupService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(\r\n    faceting: ProductModel,\r\n    sanding: ProductModel\r\n  ): Observable<{ faceting: ProductModel; sanding: ProductModel }> {\r\n    return new Observable(\r\n      (\r\n        observer: Subscriber<{ faceting: ProductModel; sanding: ProductModel }>\r\n      ) => {\r\n        const config: MatDialogConfig = new MatDialogConfig();\r\n        // config.width = '80%';\r\n        // config.height = '80%';\r\n        config.data = {\r\n          faceting,\r\n          sanding,\r\n        };\r\n\r\n        this.subs.sink.$openSelectPopup = this._matDialog\r\n          .open(FacetingSandingPopupComponent, config)\r\n          .afterClosed()\r\n          .subscribe(\r\n            (data: { faceting: ProductModel; sanding: ProductModel }) => {\r\n              observer.next(data);\r\n              observer.complete();\r\n            },\r\n            () => observer.error()\r\n          );\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SelectionComponentService } from '@features/selection-popup/selection-component.service';\r\nimport { SelectionItem } from '@features/selection-popup/selection-item/selection-item.interface';\r\nimport { Constants } from 'src/app/shared/constants';\r\nimport { ProductModel } from 'src/app/shared/models/product-model';\r\nimport { FacetingDataStoreService } from 'src/app/shared/services/data-store-services/faceting-data-store.service';\r\nimport { SandingDataStoreService } from 'src/app/shared/services/data-store-services/sanding-data-store.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\n\r\nexport interface DialogData {\r\n  faceting: ProductModel;\r\n  sanding: ProductModel;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-faceting-sanding-popup',\r\n  templateUrl: './faceting-sanding-popup.component.html',\r\n  styleUrls: ['./faceting-sanding-popup.component.scss'],\r\n  providers: [SelectionComponentService],\r\n})\r\nexport class FacetingSandingPopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  faceting?: ProductModel;\r\n  sanding?: ProductModel;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<FacetingSandingPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef,\r\n    private selectionComponentService: SelectionComponentService,\r\n    private facetingData: FacetingDataStoreService,\r\n    private sandingData: SandingDataStoreService\r\n  ) {\r\n    this.faceting = data.faceting;\r\n    this.sanding = data.sanding;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close({ faceting: this.faceting, sanding: this.sanding });\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  selectFaceting(): void {\r\n    this.subs.sink.facetingData = this.facetingData.entities.subscribe(\r\n      (faces) => {\r\n        this.selectionComponentService\r\n          .openDialog(\r\n            faces.map((f) => {\r\n              return {\r\n                oid: f.oid,\r\n                name: f.name,\r\n                selected: this.faceting?.oid === f.oid,\r\n                uom: f.uom,\r\n                pricePerUom: f.pricePerUom,\r\n                cashRegisterNumber: f.cashRegisterNumber,\r\n                thumbnailUrl: Constants.THUMBNAIL_FACETING,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.faceting = faces.filter((f) => f.oid === oid)[0];\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  selectSanding(): void {\r\n    this.subs.sink.sandingData = this.sandingData.entities.subscribe(\r\n      (sands) => {\r\n        this.selectionComponentService\r\n          .openDialog(\r\n            sands.map((s) => {\r\n              return {\r\n                oid: s.oid,\r\n                name: s.name,\r\n                selected: this.sanding?.oid === s.oid,\r\n                uom: s.uom,\r\n                pricePerUom: s.pricePerUom,\r\n                cashRegisterNumber: s.cashRegisterNumber,\r\n                thumbnailUrl: Constants.THUMBNAIL_SANDING,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.sanding = sands.filter((s) => s.oid === oid)[0];\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  removeFromInvoiceItem(type: 'faceting' | 'sanding'): void {\r\n    type === 'faceting'\r\n      ? (this.faceting = undefined)\r\n      : (this.sanding = undefined);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <div class=\"grid-container\">\r\n    <app-button\r\n      class=\"grid-item\"\r\n      [text]=\"'faceting' | translate\"\r\n      buttonSize=\"middle\"\r\n      fullWidth=\"true\"\r\n      (clickEvent)=\"selectFaceting()\"\r\n    ></app-button>\r\n    <div class=\"grid-item\">\r\n      <div class=\"object-name\">\r\n        <i-feather\r\n          [name]=\"faceting?.name ? 'check' : 'alert-triangle'\"\r\n          [class.success]=\"faceting?.name\"\r\n          [class.danger]=\"!faceting?.name\"\r\n        ></i-feather>\r\n        {{ faceting?.name || \"facetingNotSelected\" | translate }}\r\n      </div>\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <app-button\r\n        *ngIf=\"faceting\"\r\n        [iconName]=\"'trash-2'\"\r\n        [buttonSize]=\"'small'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        (clickEvent)=\"removeFromInvoiceItem('faceting')\"\r\n        class=\"button\"\r\n      ></app-button>\r\n    </div>\r\n\r\n    <app-button\r\n      class=\"grid-item\"\r\n      [text]=\"'sanding' | translate\"\r\n      buttonSize=\"middle\"\r\n      fullWidth=\"true\"\r\n      (clickEvent)=\"selectSanding()\"\r\n    ></app-button>\r\n    <div class=\"grid-item\">\r\n      <div class=\"object-name\">\r\n        <i-feather\r\n          [name]=\"sanding?.name ? 'check' : 'alert-triangle'\"\r\n          [class.success]=\"sanding?.name\"\r\n          [class.danger]=\"!sanding?.name\"\r\n        ></i-feather>\r\n        {{ sanding?.name || \"sandingNotSelected\" | translate }}\r\n      </div>\r\n    </div>\r\n    <div class=\"grid-item\">\r\n      <app-button\r\n        *ngIf=\"sanding\"\r\n        [iconName]=\"'trash-2'\"\r\n        [buttonSize]=\"'small'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        (clickEvent)=\"removeFromInvoiceItem('sanding')\"\r\n        class=\"button\"\r\n      ></app-button>\r\n    </div>\r\n  </div>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <app-button\r\n    [text]=\"'cancel' | translate\"\r\n    color=\"secondary\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"cancelSaveSelection()\"\r\n  ></app-button>\r\n  <app-button\r\n    [text]=\"'ok' | translate\"\r\n    color=\"success\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"saveSelection()\"\r\n  ></app-button>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FacetingSandingPopupComponent } from './faceting-sanding-popup.component';\r\nimport { IconsModule } from 'src/app/shared/modules/icons.module';\r\n\r\n@NgModule({\r\n  declarations: [FacetingSandingPopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n    IconsModule,\r\n  ],\r\n  exports: [FacetingSandingPopupComponent],\r\n  entryComponents: [FacetingSandingPopupComponent],\r\n})\r\nexport class FacetingSandingPopupModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FramingComponent } from './framing.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: FramingComponent },\r\n  { path: 'edit/:invoiceItemOid', component: FramingComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class FramingRoutingModule {}\r\n","import { StepperSelectionEvent } from '@angular/cdk/stepper';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SelectionComponentService } from '@features/selection-popup/selection-component.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { KeyboardAlphabetComponentService } from 'src/app/shared/components/keyboard/alphabet/keyboard-alphabet.component.service';\r\nimport { KeyboardNumericComponentService } from 'src/app/shared/components/keyboard/numeric/keyboard-numeric.component.service';\r\nimport { MODE } from 'src/app/shared/components/me-basic-alert/me-basic-alert.interface';\r\nimport { Constants } from 'src/app/shared/constants';\r\nimport { UOM } from 'src/app/shared/enums/uom-enum';\r\nimport { InvoiceItemModel } from 'src/app/shared/models/invoice-item.model';\r\nimport { AppSettingsService } from 'src/app/shared/services/app-settings.service';\r\nimport { FrameDataStoreService } from 'src/app/shared/services/data-store-services/frame-data-store.service';\r\nimport { GlassDataStoreService } from 'src/app/shared/services/data-store-services/glass-data-store.service';\r\nimport { DraftInvoicesService } from 'src/app/shared/services/data-store-services/draft-invoice-items-store.service';\r\nimport { MirrorDataStoreService } from 'src/app/shared/services/data-store-services/mirror-data-store.service';\r\nimport { PasspartuColorDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-color-data-store.service';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { FacetingSandingPopupService } from './faceting-sanding-selection-popup/faceting-sanding-popup-component.service';\r\nimport { InvoiceItemAmountCalculatorService } from './invoice-item-amount-calculator.service';\r\n\r\n@Component({\r\n  selector: 'app-framing',\r\n  templateUrl: './framing.component.html',\r\n  styleUrls: ['./framing.component.scss'],\r\n  providers: [\r\n    SelectionComponentService,\r\n    InvoiceItemAmountCalculatorService,\r\n    FacetingSandingPopupService,\r\n    KeyboardNumericComponentService,\r\n    KeyboardAlphabetComponentService,\r\n  ],\r\n})\r\nexport class FramingComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  isEdit: boolean = false;\r\n\r\n  currency: string;\r\n\r\n  @ViewChild('stepper') stepper;\r\n  dimensionsInputAttributeForm!: FormGroup;\r\n\r\n  invoiceOid: string | undefined;\r\n\r\n  invoiceItem: InvoiceItemModel = {\r\n    oid: '',\r\n    count: 1,\r\n    itemTitle: '',\r\n    dimensions: { width: 20, height: 30, uom: UOM.CENTIMETER },\r\n    selectedFrames: [],\r\n    amount: 0,\r\n  };\r\n\r\n  private $isOutterDimension: BehaviorSubject<boolean> =\r\n    new BehaviorSubject<boolean>(false);\r\n  isOutterDimension: Observable<boolean> =\r\n    this.$isOutterDimension.asObservable();\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private _activeRoute: ActivatedRoute,\r\n    private selectPopUp: SelectionComponentService,\r\n    private glassStoreService: GlassDataStoreService,\r\n    private passpartuColorStoreService: PasspartuColorDataStoreService,\r\n    private frameStoreService: FrameDataStoreService,\r\n    private mirrorStoreService: MirrorDataStoreService,\r\n    private draftInvoicesStoreService: DraftInvoicesService,\r\n    private itemAmountCalcService: InvoiceItemAmountCalculatorService,\r\n    private facetingSandingPopupService: FacetingSandingPopupService,\r\n    private keyboardNumericComponentService: KeyboardNumericComponentService,\r\n    private translateService: TranslateService,\r\n    private appSettingsService: AppSettingsService,\r\n    private globalService: GlobalService,\r\n    private keyboardAlphabetComponentService: KeyboardAlphabetComponentService\r\n  ) {}\r\n\r\n  get countControl(): AbstractControl | null {\r\n    return this.dimensionsInputAttributeForm.get('count');\r\n  }\r\n\r\n  get widthControl(): AbstractControl | null {\r\n    return this.dimensionsInputAttributeForm.get('width');\r\n  }\r\n\r\n  get heightControl(): AbstractControl | null {\r\n    return this.dimensionsInputAttributeForm.get('height');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.invoiceItem.itemTitle = this.translateService.instant('image');\r\n    this.subs.sink = this.appSettingsService.settings.subscribe((settings) => {\r\n      this.currency = settings.formatSettings.currencyDisplayValue;\r\n    });\r\n    this.invoiceOid = this._activeRoute.snapshot.paramMap.get('invoiceOid');\r\n    const oid = this._activeRoute.snapshot.paramMap.get('invoiceItemOid');\r\n\r\n    if (this.invoiceOid) {\r\n      this.draftInvoicesStoreService.draftInvoices.subscribe((invoices) => {\r\n        let inv = invoices.filter((i) => i.oid === this.invoiceOid)[0];\r\n        this.invoiceOid = inv.oid;\r\n        if (oid) {\r\n          this.isEdit = true;\r\n          this.invoiceItem = inv.invoiceItems.filter((ii) => ii.oid === oid)[0];\r\n          if (this.invoiceItem.dimensions.outter) {\r\n            this.$isOutterDimension.next(true);\r\n          }\r\n          this.initializeForm();\r\n        } else {\r\n          this.initializeForm();\r\n        }\r\n      });\r\n    } else {\r\n      this.initializeForm();\r\n    }\r\n  }\r\n\r\n  toggleInnerOutterDimension(): void {\r\n    if (\r\n      this.$isOutterDimension.getValue() &&\r\n      this.invoiceItem.passpartu &&\r\n      !this.invoiceItem.passpartu.width\r\n    ) {\r\n      this.selectPasspartuWidth();\r\n    }\r\n    this.$isOutterDimension.next(!this.$isOutterDimension.getValue());\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.dimensionsInputAttributeForm = new FormGroup({\r\n      count: new FormControl(this.invoiceItem.count, [\r\n        Validators.required,\r\n        Validators.min(1),\r\n      ]),\r\n      width: new FormControl(this.invoiceItem.dimensions.width, [\r\n        Validators.required,\r\n        Validators.min(1),\r\n      ]),\r\n      height: new FormControl(this.invoiceItem.dimensions.height, [\r\n        Validators.required,\r\n        Validators.min(1),\r\n      ]),\r\n    });\r\n    this.subs.sink = this.isOutterDimension.subscribe((selected) => {\r\n      if (selected) {\r\n        this.invoiceItem.dimensions.outter = {\r\n          width: this.invoiceItem.dimensions?.outter?.width\r\n            ? this.invoiceItem.dimensions.outter.width\r\n            : this.invoiceItem.dimensions.width,\r\n          height: this.invoiceItem.dimensions?.outter?.height\r\n            ? this.invoiceItem.dimensions.outter.height\r\n            : this.invoiceItem.dimensions.height,\r\n        };\r\n        this.dimensionsInputAttributeForm.addControl(\r\n          'outterWidth',\r\n          new FormControl(this.invoiceItem.dimensions.outter.width || 0, [\r\n            Validators.required,\r\n            Validators.min(1),\r\n          ])\r\n        );\r\n        this.dimensionsInputAttributeForm.addControl(\r\n          'outterHeight',\r\n          new FormControl(this.invoiceItem.dimensions.outter.height || 0, [\r\n            Validators.required,\r\n            Validators.min(1),\r\n          ])\r\n        );\r\n      } else {\r\n        this.invoiceItem.dimensions.outter = undefined;\r\n        this.dimensionsInputAttributeForm.removeControl('outterWidth');\r\n        this.dimensionsInputAttributeForm.removeControl('outterHeight');\r\n      }\r\n    });\r\n  }\r\n\r\n  selectGlass(): void {\r\n    this.subs.sink.selectGlass = this.glassStoreService.entities.subscribe(\r\n      (glasses) => {\r\n        // TODO map glasses to needed entity...\r\n        this.subs.sink.selectGlassPopUp = this.selectPopUp\r\n          .openDialog(\r\n            glasses.map((glass) => {\r\n              return {\r\n                oid: glass.oid,\r\n                name: glass.name,\r\n                pricePerUom: glass.pricePerUom,\r\n                uom: glass.uom,\r\n                cashRegisterNumber: glass.cashRegisterNumber,\r\n                selected: this.invoiceItem?.glass?.oid === glass.oid,\r\n                thumbnailUrl: Constants.THUMBNAIL_GLASS,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.invoiceItem.glass = glasses.filter((g) => g.oid === oid)[0];\r\n              this.invoiceItem.mirror = undefined;\r\n              this.invoiceItem.faceting = undefined;\r\n              this.invoiceItem.sanding = undefined;\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  selectPasspartu(): void {\r\n    this.subs.sink.selectPasspartu =\r\n      this.passpartuColorStoreService.entities.subscribe((passpartues) => {\r\n        this.subs.sink.selectPasspartuPopUp = this.selectPopUp\r\n          .openDialog(\r\n            passpartues.map((passpartu) => {\r\n              return {\r\n                oid: passpartu.oid,\r\n                name: passpartu.name,\r\n                pricePerUom: passpartu.passpartu.pricePerUom,\r\n                uom: passpartu.passpartu.uom,\r\n                cashRegisterNumber: passpartu.passpartu.cashRegisterNumber,\r\n                selected:\r\n                  this.invoiceItem?.passpartu?.value?.oid === passpartu.oid,\r\n                thumbnailUrl: Constants.THUMBNAIL_PASSPARTU,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.invoiceItem.passpartu = {\r\n                value: passpartues.filter((g) => g.oid === oid)[0],\r\n              };\r\n              if (!this.invoiceItem.dimensions.outter) {\r\n                this.selectPasspartuWidth();\r\n              }\r\n              this.invoiceItem.mirror = undefined;\r\n              this.invoiceItem.faceting = undefined;\r\n              this.invoiceItem.sanding = undefined;\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  selectPasspartuWidth(): void {\r\n    this.subs.sink.passInputWidth = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('passpartuWidth'),\r\n        UOM.CENTIMETER,\r\n        false,\r\n        this.translateService.instant('insertPasspartuWidth'),\r\n        this.invoiceItem.passpartu.width || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.invoiceItem.passpartu.width = parseFloat(data.value);\r\n          this.invoiceItem.passpartu.widthUom = UOM.CENTIMETER;\r\n        }\r\n        if (!this.invoiceItem.passpartu.width) {\r\n          this.globalService.showBasicAlert(\r\n            MODE.error,\r\n            this.translateService.instant('missingData'),\r\n            this.translateService.instant('passpartuWidthIsRequiredField')\r\n          );\r\n          this.selectPasspartuWidth();\r\n        }\r\n      });\r\n  }\r\n\r\n  selectMirror(): void {\r\n    this.subs.sink.selectMirror = this.mirrorStoreService.entities.subscribe(\r\n      (mirrors) => {\r\n        this.subs.sink.selectMirrorPopUp = this.selectPopUp\r\n          .openDialog(\r\n            mirrors.map((mirror) => {\r\n              return {\r\n                oid: mirror.oid,\r\n                name: mirror.name,\r\n                pricePerUom: mirror.pricePerUom,\r\n                uom: mirror.uom,\r\n                cashRegisterNumber: mirror.cashRegisterNumber,\r\n                selected: this.invoiceItem?.glass?.oid === mirror.oid,\r\n                thumbnailUrl: Constants.THUMBNAIL_MIRROR,\r\n              };\r\n            })\r\n          )\r\n          .subscribe((oid: string) => {\r\n            if (oid) {\r\n              this.invoiceItem.mirror = mirrors.filter((g) => g.oid === oid)[0];\r\n              this.invoiceItem.glass = undefined;\r\n              this.invoiceItem.passpartu = undefined;\r\n\r\n              this.openFacetingAndSandingSelectPopup();\r\n            }\r\n          });\r\n      }\r\n    );\r\n  }\r\n\r\n  openFacetingAndSandingSelectPopup(): void {\r\n    this.subs.sink.facetingAndSandingPopup = this.facetingSandingPopupService\r\n      .openDialog(this.invoiceItem.faceting, this.invoiceItem.sanding)\r\n      .subscribe((data) => {\r\n        if (data) {\r\n          this.invoiceItem.faceting = data.faceting;\r\n          this.invoiceItem.sanding = data.sanding;\r\n        }\r\n      });\r\n  }\r\n\r\n  removeFromInvoiceItem(type: 'glass' | 'passpartu' | 'mirror'): void {\r\n    switch (type) {\r\n      case 'glass':\r\n        this.invoiceItem.glass = undefined;\r\n        break;\r\n      case 'passpartu':\r\n        this.invoiceItem.passpartu = undefined;\r\n        this.dimensionsInputAttributeForm.removeControl('passpartuWidth');\r\n        break;\r\n      case 'mirror':\r\n        this.invoiceItem.mirror = undefined;\r\n        break;\r\n    }\r\n  }\r\n\r\n  addNewFrameToInvoiceItem(): void {\r\n    this.subs.sink.addNewFrameToInvoice =\r\n      this.frameStoreService.entities.subscribe((frames) => {\r\n        this.keyboardNumericComponentService\r\n          .openDialog(\r\n            this.translateService.instant('insertFrameCode'),\r\n            UOM.NUMBER,\r\n            false,\r\n            this.translateService.instant('fourDigitsForFrameForColor'),\r\n            0,\r\n            true\r\n          )\r\n          .subscribe((code: { value: string; nextOperation: boolean }) => {\r\n            if (code && code.value) {\r\n              if (code.value.length === 4) {\r\n                const c = code.value.substring(0, 2);\r\n                const colorCode = code.value.substring(2, 4);\r\n                console.log('colorCode');\r\n                console.log(colorCode);\r\n                const frame = frames.find((f) => f.code === c);\r\n                if (frame) {\r\n                  this.invoiceItem.selectedFrames.push({ frame, colorCode });\r\n                  return;\r\n                }\r\n                this.globalService.showBasicAlert(\r\n                  MODE.error,\r\n                  this.translateService.instant('wrongCode'),\r\n                  this.translateService.instant(\r\n                    'firstDigitsOfCodeHaveToBeCodeOfFrame'\r\n                  )\r\n                );\r\n              } else {\r\n                this.globalService.showBasicAlert(\r\n                  MODE.error,\r\n                  this.translateService.instant('wrongCode'),\r\n                  this.translateService.instant('codeCanBeFourDigitsLong')\r\n                );\r\n              }\r\n              this.addNewFrameToInvoiceItem();\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  removeAddedFrame(index: number): void {\r\n    this.invoiceItem.selectedFrames.splice(index, 1);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  finish(): void {\r\n    this.invoiceItem.count = this.dimensionsInputAttributeForm.value.count;\r\n    this.invoiceItem.dimensions.height =\r\n      this.dimensionsInputAttributeForm.value.height;\r\n    this.invoiceItem.dimensions.width =\r\n      this.dimensionsInputAttributeForm.value.width;\r\n\r\n    if (this.invoiceItem.dimensions.outter) {\r\n      this.invoiceItem.dimensions.outter.width =\r\n        this.dimensionsInputAttributeForm.value.outterWidth;\r\n      this.invoiceItem.dimensions.outter.height =\r\n        this.dimensionsInputAttributeForm.value.outterHeight;\r\n    }\r\n    this.invoiceItem.amount = this.itemAmountCalcService.getInvoiceItemAmount(\r\n      this.invoiceItem\r\n    );\r\n\r\n    if (this.isEdit) {\r\n      this.draftInvoicesStoreService.editDraftInvoiceItem(\r\n        this.invoiceOid,\r\n        this.invoiceItem\r\n      );\r\n      this.route.navigate(['invoice-create-edit', 'edit', this.invoiceOid]);\r\n    } else {\r\n      let newOid = this.draftInvoicesStoreService.addNewInvoiceItem(\r\n        this.invoiceItem,\r\n        this.invoiceOid\r\n      );\r\n      this.route.navigate(['invoice-create-edit', 'edit', newOid]);\r\n    }\r\n  }\r\n\r\n  // On tab index change set previous step form as touched\r\n  markFormAsTouched(changeObj: StepperSelectionEvent): void {\r\n    changeObj.previouslySelectedStep.stepControl?.markAllAsTouched();\r\n    if (changeObj.selectedIndex !== 0) {\r\n      if (this.invoiceItem.dimensions.outter) {\r\n        // TODO passpartu have to be selected\r\n        this.invoiceItem.passpartu.width =\r\n          (this.dimensionsInputAttributeForm.value.outterWidth -\r\n            this.invoiceItem.dimensions.width) /\r\n          2;\r\n      }\r\n    }\r\n  }\r\n\r\n  insertCount(): void {\r\n    this.subs.sink.insertCount = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertCount'),\r\n        UOM.PIECES,\r\n        false,\r\n        this.translateService.instant('countOfSameProducts'),\r\n        this.dimensionsInputAttributeForm.get('count').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('count')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n      });\r\n  }\r\n\r\n  insertWidthAndHeight(): void {\r\n    this.subs.sink.insertWidth = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        true,\r\n        this.translateService.instant('insertDimensionWidth'),\r\n        this.dimensionsInputAttributeForm.get('width').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('width')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n        if (data?.nextOperation) {\r\n          this.insertHeight();\r\n        }\r\n      });\r\n  }\r\n\r\n  insertHeight(): void {\r\n    this.subs.sink.insertHeight = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        false,\r\n        this.translateService.instant('insertDimensionHeight'),\r\n        this.dimensionsInputAttributeForm.get('height').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('height')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n      });\r\n  }\r\n\r\n  insertOutterWidthAndHeight(): void {\r\n    this.subs.sink.insertWidth = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        true,\r\n        this.translateService.instant('insertDimensionWidth'),\r\n        this.dimensionsInputAttributeForm.get('outterWidth').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('outterWidth')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n        if (data?.nextOperation) {\r\n          this.insertOutterHeight();\r\n        }\r\n      });\r\n  }\r\n\r\n  insertOutterHeight(): void {\r\n    this.subs.sink.insertHeight = this.keyboardNumericComponentService\r\n      .openDialog(\r\n        this.translateService.instant('insertDimensions'),\r\n        UOM.CENTIMETER,\r\n        false,\r\n        this.translateService.instant('insertDimensionHeight'),\r\n        this.dimensionsInputAttributeForm.get('outterHeight').value || 0\r\n      )\r\n      .subscribe((data) => {\r\n        if (data?.value) {\r\n          this.dimensionsInputAttributeForm\r\n            .get('outterHeight')\r\n            .setValue(parseFloat(data.value));\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <mat-horizontal-stepper\r\n    linear\r\n    #stepper\r\n    class=\"user-select-none\"\r\n    (selectionChange)=\"markFormAsTouched($event)\"\r\n  >\r\n    <ng-template matStepperIcon=\"edit\">\r\n      <i-feather\r\n        name=\"check\"\r\n        class=\"step-label-heading-completed icon\"\r\n      ></i-feather>\r\n    </ng-template>\r\n    <mat-step\r\n      #stepOne\r\n      *ngIf=\"dimensionsInputAttributeForm\"\r\n      [stepControl]=\"dimensionsInputAttributeForm\"\r\n    >\r\n      <form [formGroup]=\"dimensionsInputAttributeForm\">\r\n        <ng-template matStepLabel>\r\n          <span\r\n            class=\"step-label-heading bold\"\r\n            [class.step-label-heading-active]=\"stepper.selected === stepOne\"\r\n            [class.step-label-heading-completed]=\"\r\n              stepOne.completed && stepper.selected !== stepOne\r\n            \"\r\n            >{{ \"inputDimensions\" | translate }}</span\r\n          >\r\n        </ng-template>\r\n\r\n        <div class=\"step-content box-sizing-border-box\">\r\n          <h1 class=\"step-content-label bold\">\r\n            {{ \"inputDimensions\" | translate }}\r\n          </h1>\r\n\r\n          <div class=\"group-container\">\r\n            <div class=\"row-container dimensions\">\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"count\"\r\n                  placeholder=\"{{ 'inputCount' | translate }}\"\r\n                  (click)=\"insertCount()\"\r\n                />\r\n              </mat-form-field>\r\n              <app-button\r\n                [text]=\"\r\n                  ('outterDimension' | translate) +\r\n                  ':' +\r\n                  ' ' +\r\n                  (!(isOutterDimension | async)\r\n                    ? ('no' | translate)\r\n                    : ('yes' | translate))\r\n                \"\r\n                (clickEvent)=\"toggleInnerOutterDimension()\"\r\n                [isTransparentMode]=\"!(isOutterDimension | async)\"\r\n                [buttonSize]=\"'small'\"\r\n              ></app-button>\r\n            </div>\r\n            <div class=\"row-container dimensions\">\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"width\"\r\n                  placeholder=\"{{ 'width' | translate }}\"\r\n                  (click)=\"insertWidthAndHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"element\">X</div>\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"height\"\r\n                  placeholder=\"{{ 'height' | translate }}\"\r\n                  (click)=\"insertHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"uom\">{{ invoiceItem.dimensions.uom }}</div>\r\n            </div>\r\n            <div\r\n              class=\"row-container dimensions\"\r\n              *ngIf=\"invoiceItem.dimensions.outter\"\r\n            >\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"outterWidth\"\r\n                  placeholder=\"{{ 'width' | translate }}\"\r\n                  (click)=\"insertOutterWidthAndHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"element\">X</div>\r\n              <mat-form-field class=\"element\">\r\n                <input\r\n                  type=\"number\"\r\n                  matInput\r\n                  formControlName=\"outterHeight\"\r\n                  placeholder=\"{{ 'height' | translate }}\"\r\n                  (click)=\"insertOutterHeight()\"\r\n                />\r\n              </mat-form-field>\r\n              <div class=\"uom\">{{ invoiceItem.dimensions.uom }}</div>\r\n            </div>\r\n            <div class=\"item-select\">\r\n              <div class=\"grid-container\">\r\n                <ng-container *ngIf=\"!invoiceItem.mirror\">\r\n                  <app-button\r\n                    class=\"grid-item\"\r\n                    [text]=\"'glass' | translate\"\r\n                    buttonSize=\"middle\"\r\n                    fullWidth=\"true\"\r\n                    (clickEvent)=\"selectGlass()\"\r\n                  ></app-button>\r\n                  <div class=\"grid-item\">\r\n                    <div\r\n                      class=\"object-name\"\r\n                      [ngClass]=\"invoiceItem?.glass?.name\"\r\n                    >\r\n                      <i-feather\r\n                        [name]=\"\r\n                          invoiceItem?.glass?.name ? 'check' : 'alert-triangle'\r\n                        \"\r\n                        [class.success]=\"invoiceItem?.glass?.name\"\r\n                        [class.danger]=\"!invoiceItem?.glass?.name\"\r\n                      ></i-feather>\r\n                      {{\r\n                        invoiceItem?.glass?.name || \"glassNotSelected\"\r\n                          | translate\r\n                      }}\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"grid-item\">\r\n                    <app-button\r\n                      *ngIf=\"invoiceItem?.glass\"\r\n                      [iconName]=\"'trash-2'\"\r\n                      [buttonSize]=\"'small'\"\r\n                      [isSquare]=\"true\"\r\n                      [isTransparentMode]=\"true\"\r\n                      (clickEvent)=\"removeFromInvoiceItem('glass')\"\r\n                      class=\"button\"\r\n                    ></app-button>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!invoiceItem.mirror\">\r\n                  <app-button\r\n                    class=\"grid-item\"\r\n                    [text]=\"'passpartu' | translate\"\r\n                    buttonSize=\"middle\"\r\n                    fullWidth=\"true\"\r\n                    (clickEvent)=\"selectPasspartu()\"\r\n                  ></app-button>\r\n                  <div\r\n                    class=\"grid-item\"\r\n                    [class.red]=\"\r\n                      this.invoiceItem?.dimensions?.outter &&\r\n                      !invoiceItem?.passpartu?.value?.name\r\n                    \"\r\n                  >\r\n                    <div class=\"object-name\">\r\n                      <i-feather\r\n                        [name]=\"\r\n                          invoiceItem?.passpartu?.value?.name\r\n                            ? 'check'\r\n                            : 'alert-triangle'\r\n                        \"\r\n                        [class.success]=\"invoiceItem?.passpartu?.value?.name\"\r\n                        [class.danger]=\"!invoiceItem?.passpartu?.value?.name\"\r\n                      ></i-feather>\r\n                      {{\r\n                        invoiceItem?.passpartu?.value?.name\r\n                          ? invoiceItem?.passpartu?.value?.name\r\n                          : this.invoiceItem?.dimensions?.outter\r\n                          ? (\"passpartuSelectionObligated\" | translate)\r\n                          : (\"passpartuNotSelected\" | translate)\r\n                      }}\r\n                      <span *ngIf=\"invoiceItem?.passpartu?.width\">\r\n                        ,\r\n                        {{\r\n                          \" \" +\r\n                            (\"width\" | translate) +\r\n                            \": \" +\r\n                            invoiceItem?.passpartu?.width +\r\n                            invoiceItem?.passpartu?.widthUom\r\n                        }}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"grid-item\">\r\n                    <app-button\r\n                      *ngIf=\"invoiceItem?.passpartu\"\r\n                      [iconName]=\"'trash-2'\"\r\n                      [buttonSize]=\"'small'\"\r\n                      [isSquare]=\"true\"\r\n                      [isTransparentMode]=\"true\"\r\n                      (clickEvent)=\"removeFromInvoiceItem('passpartu')\"\r\n                      class=\"button\"\r\n                    ></app-button>\r\n                  </div>\r\n                </ng-container>\r\n\r\n                <ng-container\r\n                  *ngIf=\"!invoiceItem.glass && !invoiceItem.passpartu\"\r\n                >\r\n                  <app-button\r\n                    class=\"grid-item\"\r\n                    [text]=\"'mirror' | translate\"\r\n                    buttonSize=\"middle\"\r\n                    fullWidth=\"true\"\r\n                    (clickEvent)=\"selectMirror()\"\r\n                  ></app-button>\r\n                  <div class=\"grid-item\">\r\n                    <div class=\"object-name\">\r\n                      <i-feather\r\n                        [name]=\"\r\n                          invoiceItem?.mirror?.name ? 'check' : 'alert-triangle'\r\n                        \"\r\n                        [class.success]=\"invoiceItem?.mirror?.name\"\r\n                        [class.danger]=\"!invoiceItem?.mirror?.name\"\r\n                      ></i-feather>\r\n                      {{\r\n                        invoiceItem?.mirror?.name || \"mirrorNotSelected\"\r\n                          | translate\r\n                      }}\r\n                      <span *ngIf=\"invoiceItem?.faceting?.name\"\r\n                        >, {{ \"faceting\" | translate }}:{{\r\n                          invoiceItem?.faceting?.name\r\n                        }}</span\r\n                      >\r\n                      <span *ngIf=\"invoiceItem?.sanding?.name\"\r\n                        >, {{ \"sanding\" | translate }}:{{\r\n                          invoiceItem?.sanding?.name\r\n                        }}</span\r\n                      >\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"grid-item\">\r\n                    <app-button\r\n                      *ngIf=\"invoiceItem?.mirror\"\r\n                      [iconName]=\"'trash-2'\"\r\n                      [buttonSize]=\"'small'\"\r\n                      [isSquare]=\"true\"\r\n                      [isTransparentMode]=\"true\"\r\n                      (clickEvent)=\"removeFromInvoiceItem('mirror')\"\r\n                      class=\"button\"\r\n                    ></app-button>\r\n                  </div>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"footer box-sizing-border-box\">\r\n            <app-button\r\n              [text]=\"'cancel' | translate\"\r\n              color=\"secondary\"\r\n              buttonSize=\"middle\"\r\n              (clickEvent)=\"cancel()\"\r\n            ></app-button>\r\n            <app-button\r\n              [text]=\"'next' | translate\"\r\n              buttonSize=\"middle\"\r\n              [color]=\"'success'\"\r\n              (clickEvent)=\"stepper.next()\"\r\n            ></app-button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </mat-step>\r\n\r\n    <mat-step #stepTwo [stepControl]=\"\">\r\n      <ng-template matStepLabel>\r\n        <span\r\n          class=\"step-label-heading bold\"\r\n          [class.step-label-heading-active]=\"stepper.selected === stepTwo\"\r\n          [class.step-label-heading-completed]=\"\r\n            stepTwo.completed && stepper.selected !== stepTwo\r\n          \"\r\n          >{{ \"frames\" | translate }}</span\r\n        >\r\n      </ng-template>\r\n\r\n      <div class=\"step-content\">\r\n        <div class=\"group-container\">\r\n          <div\r\n            class=\"row-container\"\r\n            *ngFor=\"let frame of invoiceItem.selectedFrames; let i = index\"\r\n          >\r\n            <div class=\"frame-name\">\r\n              <span *ngIf=\"frame.frame.name\">{{ frame.frame.name }}</span>\r\n              <span *ngIf=\"frame.frame.code\">/{{ frame.frame.code }}</span>\r\n              <span *ngIf=\"frame.colorCode\">{{ frame.colorCode }}</span>\r\n              <span *ngIf=\"frame.frame.uom\"\r\n                >{{ \", \" + (\"uom\" | translate)\r\n                }}{{ \": \" + frame.frame.uom }}</span\r\n              >\r\n              <span *ngIf=\"frame.frame.pricePerUom\"\r\n                >{{ \", \" + (\"ppUom\" | translate)\r\n                }}{{ \": \" + frame.frame.pricePerUom }}</span\r\n              >\r\n            </div>\r\n            <app-button\r\n              [iconName]=\"'trash-2'\"\r\n              [buttonSize]=\"'small'\"\r\n              [isSquare]=\"true\"\r\n              [isTransparentMode]=\"true\"\r\n              (clickEvent)=\"removeAddedFrame(i)\"\r\n              class=\"button\"\r\n            ></app-button>\r\n          </div>\r\n          <div\r\n            class=\"row-container empty-list\"\r\n            *ngIf=\"!(invoiceItem.selectedFrames.length > 0)\"\r\n          >\r\n            {{ \"youDidntAddAnyFrame\" | translate }}\r\n          </div>\r\n          <div class=\"row-container\">\r\n            <div class=\"add-frame-button\">\r\n              <app-button\r\n                [buttonSize]=\"'middle'\"\r\n                [text]=\"'addFrame' | translate\"\r\n                [fullWidth]=\"true\"\r\n                (clickEvent)=\"addNewFrameToInvoiceItem()\"\r\n              ></app-button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"footer box-sizing-border-box\">\r\n          <app-button\r\n            [text]=\"'previous' | translate\"\r\n            color=\"secondary\"\r\n            buttonSize=\"middle\"\r\n            (clickEvent)=\"stepper.previous()\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'finish' | translate\"\r\n            buttonSize=\"middle\"\r\n            [color]=\"'success'\"\r\n            [disabled]=\"!(invoiceItem.selectedFrames.length > 0)\"\r\n            (clickEvent)=\"finish()\"\r\n          ></app-button>\r\n        </div>\r\n      </div>\r\n    </mat-step>\r\n  </mat-horizontal-stepper>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FramingRoutingModule } from './framing-routing.module';\r\nimport { FramingComponent } from './framing.component';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { IconsModule } from 'src/app/shared/modules/icons.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SelectionPopupModule } from '@features/selection-popup/selection-popup.module';\r\nimport { FacetingSandingPopupModule } from './faceting-sanding-selection-popup/faceting-sanding-popup.module';\r\nimport { KeyboardNumericModule } from 'src/app/shared/components/keyboard/numeric/keyboard-numeric.module';\r\nimport { KeyboardAlphabetModule } from 'src/app/shared/components/keyboard/alphabet/keyboard-alphabet.module';\r\n\r\n@NgModule({\r\n  declarations: [FramingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FramingRoutingModule,\r\n    MatStepperModule,\r\n    ReactiveFormsModule,\r\n    IconsModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatFormFieldModule,\r\n    SelectionPopupModule,\r\n    FacetingSandingPopupModule,\r\n    KeyboardNumericModule,\r\n    KeyboardAlphabetModule,\r\n  ],\r\n  exports: [FramingComponent],\r\n})\r\nexport class FramingModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { UOM } from 'src/app/shared/enums/uom-enum';\r\nimport { InvoiceItemModel } from 'src/app/shared/models/invoice-item.model';\r\n\r\nInjectable();\r\nexport class InvoiceItemAmountCalculatorService {\r\n  public getInvoiceItemAmount(invoiceItem: InvoiceItemModel): number {\r\n    console.log('IZRACUNAJ ZA:');\r\n    console.log(invoiceItem);\r\n    let glassPrice = 0;\r\n    let passpartuPrice = 0;\r\n    let mirrorPrice = 0;\r\n    let framesPrice = 0;\r\n    let facetingPrice = 0;\r\n    let sandingPrice = 0;\r\n    if (invoiceItem.glass) {\r\n      const surface =\r\n        this.getConstructionMeasure(invoiceItem.dimensions.height) *\r\n        this.getConstructionMeasure(invoiceItem.dimensions.width);\r\n      glassPrice = this.getPricePerUom(\r\n        { ppUom: invoiceItem.glass.pricePerUom, uom: invoiceItem.glass.uom },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.passpartu) {\r\n      const surface =\r\n        this.getConstructionMeasure(invoiceItem.dimensions.height) *\r\n        this.getConstructionMeasure(invoiceItem.dimensions.width);\r\n      passpartuPrice = this.getPricePerUom(\r\n        {\r\n          ppUom: invoiceItem.passpartu.value.passpartu.pricePerUom,\r\n          uom: invoiceItem.passpartu.value.passpartu.uom,\r\n        },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.mirror) {\r\n      const surface =\r\n        this.getConstructionMeasure(invoiceItem.dimensions.height) *\r\n        this.getConstructionMeasure(invoiceItem.dimensions.width);\r\n      mirrorPrice = this.getPricePerUom(\r\n        { ppUom: invoiceItem.mirror.pricePerUom, uom: invoiceItem.mirror.uom },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.faceting) {\r\n      const surface =\r\n        invoiceItem.dimensions.height * 2 + invoiceItem.dimensions.width * 2;\r\n      facetingPrice = this.getPricePerUom(\r\n        {\r\n          ppUom: invoiceItem.faceting.pricePerUom,\r\n          uom: invoiceItem.faceting.uom,\r\n        },\r\n        { count: surface, uom: UOM.CENTIMETER }\r\n      );\r\n    }\r\n    if (invoiceItem.sanding) {\r\n      const surface =\r\n        invoiceItem.dimensions.height * invoiceItem.dimensions.width;\r\n      sandingPrice = this.getPricePerUom(\r\n        {\r\n          ppUom: invoiceItem.sanding.pricePerUom,\r\n          uom: invoiceItem.sanding.uom,\r\n        },\r\n        { count: surface, uom: UOM.CENTIMETER2 }\r\n      );\r\n    }\r\n    if (invoiceItem.selectedFrames.length > 0) {\r\n      invoiceItem.selectedFrames.forEach((frame) => {\r\n        framesPrice += this.getFramePrice(\r\n          invoiceItem.dimensions.height,\r\n          invoiceItem.dimensions.width,\r\n          invoiceItem.dimensions.uom,\r\n          frame.frame.frameWidthMM,\r\n          frame.frame.pricePerUom,\r\n          frame.frame.uom\r\n        );\r\n      });\r\n    }\r\n    console.log('glassPrice');\r\n    console.log(glassPrice);\r\n    console.log('passpartuPrice');\r\n    console.log(passpartuPrice);\r\n    console.log('mirrorPrice');\r\n    console.log(mirrorPrice);\r\n    console.log('framesPrice');\r\n    console.log(framesPrice);\r\n    console.log('facetingPrice');\r\n    console.log(facetingPrice);\r\n    console.log('sandingPrice');\r\n    console.log(sandingPrice);\r\n    let grossAmount =\r\n      glassPrice +\r\n      passpartuPrice +\r\n      mirrorPrice +\r\n      framesPrice +\r\n      facetingPrice +\r\n      sandingPrice;\r\n    return this.roundOnDigits(grossAmount);\r\n  }\r\n\r\n  private getFramePrice(\r\n    imageHeight: number,\r\n    imageWidth: number,\r\n    imageUom: UOM,\r\n    frameWidthMM: number,\r\n    framePpUom: number,\r\n    frameUom: UOM\r\n  ): number {\r\n    let amount = 0;\r\n    let length = imageHeight * 2 + imageWidth * 2;\r\n    if (imageUom === UOM.CENTIMETER) {\r\n      if (frameUom === UOM.CENTIMETER) {\r\n        length += length + (frameWidthMM * 8) / 10;\r\n        amount = length * framePpUom;\r\n      } else if (frameUom === UOM.METER) {\r\n        length += length + (frameWidthMM * 8) / 10;\r\n        amount = (length * framePpUom) / 100;\r\n      }\r\n    }\r\n    return amount;\r\n  }\r\n\r\n  private getConstructionMeasure(num: number): number {\r\n    num++;\r\n    if (num % 3 === 0) {\r\n      return num;\r\n    } else if (num++) {\r\n      return num;\r\n    } else if (num++) {\r\n      return num;\r\n    }\r\n  }\r\n\r\n  private getPricePerUom(\r\n    price: { ppUom: number; uom: UOM },\r\n    unit: { count: number; uom: UOM }\r\n  ): number {\r\n    if (unit.uom === UOM.CENTIMETER2) {\r\n      if (price.uom === UOM.CENTIMETER2) {\r\n        return unit.count * price.ppUom;\r\n      } else if (price.uom === UOM.METER2) {\r\n        return (unit.count * price.ppUom) / 10000;\r\n      }\r\n    } else if (unit.uom === UOM.CENTIMETER) {\r\n      if (price.uom === UOM.CENTIMETER) {\r\n        return unit.count * price.ppUom;\r\n      } else if (price.uom === UOM.METER) {\r\n        return (unit.count * price.ppUom) / 100;\r\n      }\r\n    } else if (unit.uom === UOM.METER) {\r\n      if (price.uom === UOM.CENTIMETER) {\r\n        return unit.count * price.ppUom;\r\n      } else if (price.uom === UOM.METER) {\r\n        return (unit.count * price.ppUom) / 100;\r\n      }\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  roundOnDigits(value: number, digits: number = 3): number {\r\n    return Math.round(value * Math.pow(10, digits)) / Math.pow(10, digits);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { SelectionItem } from './selection-item/selection-item.interface';\r\nimport { SelectionPopupComponent } from './selection-popup.component';\r\n\r\n@Injectable()\r\nexport class SelectionComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(items: SelectionItem[]): Observable<string> {\r\n    return new Observable((observer: Subscriber<string>) => {\r\n      const config: MatDialogConfig = new MatDialogConfig();\r\n      config.width = '80%';\r\n      config.height = '80%';\r\n      config.data = {\r\n        items,\r\n      };\r\n\r\n      this.subs.sink.$openSelectPopup = this._matDialog\r\n        .open(SelectionPopupComponent, config)\r\n        .afterClosed()\r\n        .subscribe(\r\n          (oid: string) => {\r\n            observer.next(oid);\r\n            observer.complete();\r\n          },\r\n          () => observer.error()\r\n        );\r\n    });\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { SelectionItem } from './selection-item.interface';\r\n\r\n@Component({\r\n  selector: 'app-selection-item',\r\n  templateUrl: './selection-item.component.html',\r\n  styleUrls: ['./selection-item.component.scss'],\r\n  providers: [],\r\n})\r\nexport class SelectionItemComponent implements OnInit {\r\n  @Input() dataModel: SelectionItem;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div class=\"item-card\" [ngClass]=\"{ selected: dataModel.selected }\">\r\n  <div\r\n    *ngIf=\"dataModel.thumbnailUrl\"\r\n    class=\"thumbnail\"\r\n    [style.background-image]=\"'url(' + dataModel.thumbnailUrl + ')'\"\r\n    [style.width]=\"'100%'\"\r\n    [style.height]=\"'100%'\"\r\n    [style.background-position]=\"'center'\"\r\n    [style.background-size]=\"'cover'\"\r\n    [style.background-repeat]=\"'no-repeat'\"\r\n    [style.opacity]=\"'0.5'\"\r\n  ></div>\r\n  <div class=\"container\">\r\n    <div class=\"name\">\r\n      <span> {{ dataModel.name }}</span>\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.uom\">\r\n      <span> {{ \"uom\" | translate }} : {{ dataModel.uom }}</span>\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.pricePerUom\">\r\n      <span> {{ \"ppUom\" | translate }} : {{ dataModel.pricePerUom }}</span>\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.frameWidthMM\">\r\n      <span>\r\n        {{ \"frameWidthMM\" | translate }} : {{ dataModel.frameWidthMM }}</span\r\n      >\r\n    </div>\r\n    <div class=\"attribute\" *ngIf=\"dataModel.cashRegisterNumber\">\r\n      <span>\r\n        {{ \"crNum\" | translate }} : {{ dataModel.cashRegisterNumber }}\r\n      </span>\r\n    </div>\r\n  </div>\r\n  <div class=\"checkbox\">\r\n    <mat-checkbox\r\n      [checked]=\"dataModel.selected\"\r\n      name=\"Primary\"\r\n      color=\"primary\"\r\n    ></mat-checkbox>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SelectionItemComponent } from './selection-item.component';\r\nimport { IconsModule } from 'src/app/shared/modules/icons.module';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [SelectionItemComponent],\r\n  imports: [CommonModule, IconsModule, MatCheckboxModule, TranslateModule],\r\n  exports: [SelectionItemComponent],\r\n})\r\nexport class SelectionItemModule {}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { SelectionItem } from './selection-item/selection-item.interface';\r\n\r\nexport interface DialogData {\r\n  selectedOids: string[];\r\n  isSingleSelection: boolean;\r\n  items: SelectionItem[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-selection-popup',\r\n  templateUrl: './selection-popup.component.html',\r\n  styleUrls: ['./selection-popup.component.scss'],\r\n})\r\nexport class SelectionPopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  public selectedOids: string[] = [];\r\n  public isSingleSelection: boolean = true;\r\n  public items: SelectionItem[] = [];\r\n  searchValue: string = '';\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<SelectionPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.selectedOids = data?.selectedOids || [];\r\n    this.isSingleSelection = !(data.isSingleSelection === false);\r\n    this.items = data.items;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  searchInputEvent(searchValue: string): void {\r\n    this.searchValue = searchValue;\r\n  }\r\n\r\n  isSearchSatisfied(name: string): boolean {\r\n    return (\r\n      !this.searchValue ||\r\n      name.toLowerCase().includes(this.searchValue.toLowerCase())\r\n    );\r\n  }\r\n\r\n  handleItemClick(card: SelectionItem): void {\r\n    this.dialogRef.close(card.oid);\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close(this.selectedOids);\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<app-search-input (changeEvent)=\"searchInputEvent($event)\"></app-search-input>\r\n\r\n<mat-dialog-content>\r\n  <!-- <div\r\n    class=\"item\"\r\n    *ngFor=\"let item of items\"\r\n    (click)=\"!$event.defaultPrevented && handleItemClick(item)\"\r\n  >\r\n    {{ item.displayValue }}\r\n  </div> -->\r\n  <ng-container *ngFor=\"let item of items\">\r\n    <app-selection-item\r\n      class=\"item\"\r\n      [dataModel]=\"item\"\r\n      (click)=\"handleItemClick(item)\"\r\n      *ngIf=\"isSearchSatisfied(item.name)\"\r\n    ></app-selection-item>\r\n  </ng-container>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <app-button\r\n    [text]=\"'cancel' | translate\"\r\n    color=\"secondary\"\r\n    (clickEvent)=\"cancelSaveSelection()\"\r\n  ></app-button>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SelectionPopupComponent } from '@features/selection-popup/selection-popup.component';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { SelectionItemModule } from './selection-item/selection-item.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { SearchInputModule } from 'src/app/shared/components/search-input/search-input.module';\r\n\r\n@NgModule({\r\n  declarations: [SelectionPopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    ButtonModule,\r\n    SelectionItemModule,\r\n    TranslateModule,\r\n    SearchInputModule,\r\n  ],\r\n  exports: [SelectionPopupComponent],\r\n  entryComponents: [SelectionPopupComponent],\r\n})\r\nexport class SelectionPopupModule {}\r\n","export class Button {\r\n  key: string;\r\n  rs: { displayValue: string; displayValueCL: string };\r\n  en: { displayValue: string; displayValueCL: string };\r\n}\r\n\r\nexport class KeyboardButtons {\r\n  public ALL_BUTTONS: Button[] = [\r\n    {\r\n      key: '1',\r\n      rs: { displayValue: 'q', displayValueCL: 'Q' },\r\n      en: { displayValue: 'q', displayValueCL: 'Q' },\r\n    },\r\n    {\r\n      key: '2',\r\n      rs: { displayValue: 'w', displayValueCL: 'W' },\r\n      en: { displayValue: 'w', displayValueCL: 'W' },\r\n    },\r\n    {\r\n      key: '3',\r\n      rs: { displayValue: 'e', displayValueCL: 'E' },\r\n      en: { displayValue: 'e', displayValueCL: 'E' },\r\n    },\r\n    {\r\n      key: '4',\r\n      rs: { displayValue: 'r', displayValueCL: 'R' },\r\n      en: { displayValue: 'r', displayValueCL: 'R' },\r\n    },\r\n    {\r\n      key: '5',\r\n      rs: { displayValue: 't', displayValueCL: 'T' },\r\n      en: { displayValue: 't', displayValueCL: 'T' },\r\n    },\r\n    {\r\n      key: '6',\r\n      rs: { displayValue: 'z', displayValueCL: 'Z' },\r\n      en: { displayValue: 'y', displayValueCL: 'Y' },\r\n    },\r\n    {\r\n      key: '7',\r\n      rs: { displayValue: 'u', displayValueCL: 'U' },\r\n      en: { displayValue: 'u', displayValueCL: 'U' },\r\n    },\r\n    {\r\n      key: '8',\r\n      rs: { displayValue: 'i', displayValueCL: 'I' },\r\n      en: { displayValue: 'i', displayValueCL: 'I' },\r\n    },\r\n    {\r\n      key: '9',\r\n      rs: { displayValue: 'o', displayValueCL: 'O' },\r\n      en: { displayValue: 'o', displayValueCL: 'O' },\r\n    },\r\n    {\r\n      key: '10',\r\n      rs: { displayValue: 'p', displayValueCL: 'P' },\r\n      en: { displayValue: 'p', displayValueCL: 'P' },\r\n    },\r\n    {\r\n      key: '11',\r\n      rs: { displayValue: 'š', displayValueCL: 'Š' },\r\n      en: { displayValue: '[', displayValueCL: '{' },\r\n    },\r\n    {\r\n      key: '12',\r\n      rs: { displayValue: 'đ', displayValueCL: 'Đ' },\r\n      en: { displayValue: ']', displayValueCL: '}' },\r\n    },\r\n    {\r\n      key: '13',\r\n      rs: { displayValue: 'a', displayValueCL: 'A' },\r\n      en: { displayValue: 'a', displayValueCL: 'A' },\r\n    },\r\n    {\r\n      key: '14',\r\n      rs: { displayValue: 's', displayValueCL: 'S' },\r\n      en: { displayValue: 's', displayValueCL: 'S' },\r\n    },\r\n    {\r\n      key: '15',\r\n      rs: { displayValue: 'd', displayValueCL: 'D' },\r\n      en: { displayValue: 'd', displayValueCL: 'D' },\r\n    },\r\n    {\r\n      key: '16',\r\n      rs: { displayValue: 'f', displayValueCL: 'F' },\r\n      en: { displayValue: 'f', displayValueCL: 'F' },\r\n    },\r\n    {\r\n      key: '17',\r\n      rs: { displayValue: 'g', displayValueCL: 'G' },\r\n      en: { displayValue: 'g', displayValueCL: 'G' },\r\n    },\r\n    {\r\n      key: '18',\r\n      rs: { displayValue: 'h', displayValueCL: 'H' },\r\n      en: { displayValue: 'h', displayValueCL: 'H' },\r\n    },\r\n    {\r\n      key: '19',\r\n      rs: { displayValue: 'j', displayValueCL: 'J' },\r\n      en: { displayValue: 'j', displayValueCL: 'J' },\r\n    },\r\n    {\r\n      key: '20',\r\n      rs: { displayValue: 'k', displayValueCL: 'K' },\r\n      en: { displayValue: 'k', displayValueCL: 'K' },\r\n    },\r\n    {\r\n      key: '21',\r\n      rs: { displayValue: 'l', displayValueCL: 'L' },\r\n      en: { displayValue: 'l', displayValueCL: 'L' },\r\n    },\r\n    {\r\n      key: '22',\r\n      rs: { displayValue: 'č', displayValueCL: 'Č' },\r\n      en: { displayValue: ';', displayValueCL: ':' },\r\n    },\r\n    {\r\n      key: '23',\r\n      rs: { displayValue: 'ć', displayValueCL: 'Ć' },\r\n      en: { displayValue: '\"', displayValueCL: '\"' },\r\n    },\r\n    {\r\n      key: '24',\r\n      rs: { displayValue: 'ž', displayValueCL: 'Ž' },\r\n      en: { displayValue: '|', displayValueCL: '|' },\r\n    },\r\n    {\r\n      key: '25',\r\n      rs: { displayValue: 'y', displayValueCL: 'Y' },\r\n      en: { displayValue: 'z', displayValueCL: 'Z' },\r\n    },\r\n    {\r\n      key: '26',\r\n      rs: { displayValue: 'x', displayValueCL: 'X' },\r\n      en: { displayValue: 'x', displayValueCL: 'X' },\r\n    },\r\n    {\r\n      key: '27',\r\n      rs: { displayValue: 'c', displayValueCL: 'C' },\r\n      en: { displayValue: 'c', displayValueCL: 'C' },\r\n    },\r\n    {\r\n      key: '28',\r\n      rs: { displayValue: 'v', displayValueCL: 'V' },\r\n      en: { displayValue: 'v', displayValueCL: 'V' },\r\n    },\r\n    {\r\n      key: '29',\r\n      rs: { displayValue: 'b', displayValueCL: 'B' },\r\n      en: { displayValue: 'b', displayValueCL: 'B' },\r\n    },\r\n    {\r\n      key: '30',\r\n      rs: { displayValue: 'n', displayValueCL: 'N' },\r\n      en: { displayValue: 'n', displayValueCL: 'N' },\r\n    },\r\n    {\r\n      key: '31',\r\n      rs: { displayValue: 'm', displayValueCL: 'M' },\r\n      en: { displayValue: 'm', displayValueCL: 'M' },\r\n    },\r\n    {\r\n      key: '32',\r\n      rs: { displayValue: ',', displayValueCL: ';' },\r\n      en: { displayValue: ',', displayValueCL: '<' },\r\n    },\r\n    {\r\n      key: '33',\r\n      rs: { displayValue: '.', displayValueCL: ':' },\r\n      en: { displayValue: '.', displayValueCL: '>' },\r\n    },\r\n    {\r\n      key: '34',\r\n      rs: { displayValue: '-', displayValueCL: '_' },\r\n      en: { displayValue: '/', displayValueCL: '?' },\r\n    },\r\n    {\r\n      key: '35',\r\n      rs: { displayValue: '`', displayValueCL: '~' },\r\n      en: { displayValue: '`', displayValueCL: '~' },\r\n    },\r\n    {\r\n      key: '36',\r\n      rs: { displayValue: '1', displayValueCL: '!' },\r\n      en: { displayValue: '1', displayValueCL: '!' },\r\n    },\r\n    {\r\n      key: '37',\r\n      rs: { displayValue: '2', displayValueCL: '\"' },\r\n      en: { displayValue: '2', displayValueCL: '@' },\r\n    },\r\n    {\r\n      key: '38',\r\n      rs: { displayValue: '3', displayValueCL: '#' },\r\n      en: { displayValue: '3', displayValueCL: '#' },\r\n    },\r\n    {\r\n      key: '39',\r\n      rs: { displayValue: '4', displayValueCL: '$' },\r\n      en: { displayValue: '4', displayValueCL: '$' },\r\n    },\r\n    {\r\n      key: '40',\r\n      rs: { displayValue: '5', displayValueCL: '%' },\r\n      en: { displayValue: '5', displayValueCL: '%' },\r\n    },\r\n    {\r\n      key: '41',\r\n      rs: { displayValue: '6', displayValueCL: '&' },\r\n      en: { displayValue: '6', displayValueCL: '^' },\r\n    },\r\n    {\r\n      key: '42',\r\n      rs: { displayValue: '7', displayValueCL: '/' },\r\n      en: { displayValue: '7', displayValueCL: '&' },\r\n    },\r\n    {\r\n      key: '43',\r\n      rs: { displayValue: '8', displayValueCL: '(' },\r\n      en: { displayValue: '8', displayValueCL: '*' },\r\n    },\r\n    {\r\n      key: '44',\r\n      rs: { displayValue: '9', displayValueCL: ')' },\r\n      en: { displayValue: '9', displayValueCL: '(' },\r\n    },\r\n    {\r\n      key: '45',\r\n      rs: { displayValue: '0', displayValueCL: '=' },\r\n      en: { displayValue: '0', displayValueCL: ')' },\r\n    },\r\n    {\r\n      key: '46',\r\n      rs: { displayValue: '?', displayValueCL: '?' },\r\n      en: { displayValue: '-', displayValueCL: '_' },\r\n    },\r\n    {\r\n      key: '47',\r\n      rs: { displayValue: '+', displayValueCL: '*' },\r\n      en: { displayValue: '=', displayValueCL: '+' },\r\n    },\r\n  ];\r\n\r\n  getButtonById(key: string): Button {\r\n    return this.ALL_BUTTONS.find((b) => b.key === key);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { KeyboardAlphabetComponent } from './keyboard-alphabet.component';\r\n\r\n@Injectable()\r\nexport class KeyboardAlphabetComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  /*\r\n  EXAMPLE\r\n  this.subs.sink.$inputText =\r\n  this.keyboardAlphabetComponentService.openDialog().subscribe((text) => {\r\n    if (text!==undefined) {\r\n      // TODO set text to value\r\n    }\r\n  });\r\n*/\r\n\r\n  openDialog(value: string = '', title: string = ''): Observable<string> {\r\n    return new Observable((observer: Subscriber<string>) => {\r\n      const config: MatDialogConfig = new MatDialogConfig();\r\n      // config.width = '80%';\r\n      // config.height = '80%';\r\n      config.data = {\r\n        value,\r\n        title,\r\n      };\r\n\r\n      this.subs.sink.$openSelectPopup = this._matDialog\r\n        .open(KeyboardAlphabetComponent, config)\r\n        .afterClosed()\r\n        .subscribe(\r\n          (text: string) => {\r\n            observer.next(text);\r\n            observer.complete();\r\n          },\r\n          () => observer.error()\r\n        );\r\n    });\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { Button, KeyboardButtons } from './all-buttons';\r\n\r\nexport interface DialogData {\r\n  title: string;\r\n  value: number;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-keyboard-alphabet',\r\n  templateUrl: './keyboard-alphabet.component.html',\r\n  styleUrls: ['./keyboard-alphabet.component.scss'],\r\n})\r\nexport class KeyboardAlphabetComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n  language: 'SR' | 'EN' = 'SR';\r\n\r\n  buttonZeroRow: string[] = [\r\n    '35',\r\n    '36',\r\n    '37',\r\n    '38',\r\n    '39',\r\n    '40',\r\n    '41',\r\n    '42',\r\n    '43',\r\n    '44',\r\n    '45',\r\n    '46',\r\n  ];\r\n  buttonFirstRow: string[] = [\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9',\r\n    '10',\r\n    '11',\r\n    '12',\r\n  ];\r\n  buttonSecondRow: string[] = [\r\n    '13',\r\n    '14',\r\n    '15',\r\n    '16',\r\n    '17',\r\n    '18',\r\n    '19',\r\n    '20',\r\n    '21',\r\n    '22',\r\n    '23',\r\n    '24',\r\n  ];\r\n  buttonThirdRow: string[] = [\r\n    '25',\r\n    '26',\r\n    '27',\r\n    '28',\r\n    '29',\r\n    '30',\r\n    '31',\r\n    '32',\r\n    '33',\r\n    '34',\r\n  ];\r\n\r\n  title: string = '';\r\n  inputFieldTitle: string = '';\r\n  @ViewChild('inputValue') inputValue: ElementRef;\r\n  valueForm: FormGroup;\r\n\r\n  capsLockActive: boolean = false;\r\n  shiftActive: boolean = false;\r\n  private keyboardButtons: KeyboardButtons = new KeyboardButtons();\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<KeyboardAlphabetComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.title = data?.title || '';\r\n    this.valueForm = new FormGroup({\r\n      value: new FormControl(data?.value ? data.value : '', []),\r\n    });\r\n  }\r\n\r\n  get valueControl(): AbstractControl | null {\r\n    return this.valueForm.get('value');\r\n  }\r\n\r\n  getButton(key: string): Button {\r\n    return this.keyboardButtons.getButtonById(key);\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.inputValue.nativeElement.focus();\r\n      this.inputValue.nativeElement.select();\r\n    });\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close(this.valueForm.value.value);\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  keyClicked(key: string): void {\r\n    const button = this.keyboardButtons.getButtonById(key);\r\n    this.valueControl.setValue(\r\n      this.valueControl.value +\r\n        (this.language === 'SR'\r\n          ? this.capsLockActive || this.shiftActive\r\n            ? button.rs.displayValueCL\r\n            : button.rs.displayValue\r\n          : this.capsLockActive || this.shiftActive\r\n          ? button.en.displayValueCL\r\n          : button.en.displayValue)\r\n    );\r\n    this.shiftActive = false;\r\n  }\r\n\r\n  specialButtonClicked(type: string): void {\r\n    switch (type) {\r\n      case 'SR':\r\n        this.language = 'SR';\r\n        break;\r\n      case 'EN':\r\n        this.language = 'EN';\r\n        break;\r\n      case 'capsLock':\r\n        this.capsLockActive = !this.capsLockActive;\r\n        break;\r\n      case 'shift':\r\n        this.shiftActive = true;\r\n        break;\r\n      case 'space':\r\n        this.valueControl.setValue(this.valueControl.value + ' ');\r\n        break;\r\n    }\r\n  }\r\n\r\n  backspaceClicked(): void {\r\n    if (this.valueControl.value.length > 0) {\r\n      this.valueControl.setValue(this.valueControl.value.slice(0, -1));\r\n    }\r\n  }\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"input\">\r\n    <form [formGroup]=\"valueForm\">\r\n      <mat-form-field class=\"field\">\r\n        <mat-label>{{ inputFieldTitle }}</mat-label>\r\n        <input\r\n          matInput\r\n          #inputValue\r\n          formControlName=\"value\"\r\n          [width]=\"100\"\r\n          class=\"center\"\r\n        />\r\n      </mat-form-field>\r\n    </form>\r\n  </div>\r\n  <div class=\"content\">\r\n    <div class=\"row-zero\">\r\n      <div class=\"empty-div\"></div>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonZeroRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n      <app-button\r\n        class=\"button-key backspace\"\r\n        [iconName]=\"'arrow-left'\"\r\n        [color]=\"'secondary'\"\r\n        [buttonSize]=\"'middle'\"\r\n        [fullWidth]=\"true\"\r\n        (clickEvent)=\"backspaceClicked()\"\r\n      ></app-button>\r\n    </div>\r\n    <div class=\"row-first\">\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('SR')\"\r\n        [text]=\"'SR'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"!(language === 'SR')\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('EN')\"\r\n        [text]=\"'EN'\"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"!(language === 'EN')\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key language\"\r\n      ></app-button>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonFirstRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n    </div>\r\n    <div class=\"row-second\">\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('capsLock')\"\r\n        [text]=\"'Caps Lock'\"\r\n        [isTransparentMode]=\"!capsLockActive\"\r\n        [buttonSize]=\"'middle'\"\r\n        [fullWidth]=\"true\"\r\n        class=\"button-key caps-lock\"\r\n      ></app-button>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonSecondRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n    </div>\r\n    <div class=\"row-third\">\r\n      <app-button\r\n        (clickEvent)=\"specialButtonClicked('shift')\"\r\n        [text]=\"'Shift'\"\r\n        [isTransparentMode]=\"!shiftActive\"\r\n        [buttonSize]=\"'middle'\"\r\n        [fullWidth]=\"true\"\r\n        class=\"button-key shift\"\r\n      ></app-button>\r\n      <app-button\r\n        *ngFor=\"let buttonKey of buttonThirdRow\"\r\n        (clickEvent)=\"keyClicked(getButton(buttonKey).key)\"\r\n        [text]=\"\r\n          this.language === 'SR'\r\n            ? capsLockActive || shiftActive\r\n              ? getButton(buttonKey).rs.displayValueCL\r\n              : getButton(buttonKey).rs.displayValue\r\n            : capsLockActive || shiftActive\r\n            ? getButton(buttonKey).en.displayValueCL\r\n            : getButton(buttonKey).en.displayValue\r\n        \"\r\n        [isSquare]=\"true\"\r\n        [isTransparentMode]=\"true\"\r\n        [buttonSize]=\"'middle'\"\r\n        class=\"button-key\"\r\n      ></app-button>\r\n    </div>\r\n  </div>\r\n  <div class=\"row-fourth\">\r\n    <app-button\r\n      (clickEvent)=\"specialButtonClicked('space')\"\r\n      [text]=\"'space' | translate\"\r\n      [isTransparentMode]=\"true\"\r\n      [buttonSize]=\"'middle'\"\r\n      class=\"button-key\"\r\n      [fullWidth]=\"true\"\r\n    ></app-button>\r\n  </div>\r\n  <div class=\"footer\">\r\n    <app-button\r\n      [iconName]=\"'arrow-left'\"\r\n      (clickEvent)=\"cancelSaveSelection()\"\r\n      [isSquare]=\"true\"\r\n      [color]=\"'danger'\"\r\n    ></app-button>\r\n    <app-button\r\n      [iconName]=\"'check'\"\r\n      [isSquare]=\"true\"\r\n      (clickEvent)=\"saveSelection()\"\r\n      [color]=\"'success'\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { KeyboardAlphabetComponent } from './keyboard-alphabet.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [KeyboardAlphabetComponent],\r\n  declarations: [KeyboardAlphabetComponent],\r\n})\r\nexport class KeyboardAlphabetModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { UOM } from 'src/app/shared/enums/uom-enum';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { KeyboardNumericComponent } from './keyboard-numeric.component';\r\n\r\n@Injectable()\r\nexport class KeyboardNumericComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(\r\n    title: string,\r\n    uom: UOM,\r\n    showNextOperationButton: boolean,\r\n    inputFieldTitle: string,\r\n    value: number = 0,\r\n    codeInput: boolean = false\r\n  ): Observable<{ value: string; nextOperation: boolean }> {\r\n    return new Observable(\r\n      (observer: Subscriber<{ value: string; nextOperation: boolean }>) => {\r\n        const config: MatDialogConfig = new MatDialogConfig();\r\n\r\n        config.data = {\r\n          title,\r\n          uom,\r\n          value,\r\n          showNextOperationButton,\r\n          inputFieldTitle,\r\n          codeInput,\r\n        };\r\n\r\n        this.subs.sink.$openSelectPopup = this._matDialog\r\n          .open(KeyboardNumericComponent, config)\r\n          .afterClosed()\r\n          .subscribe(\r\n            (data: { value: string; nextOperation: boolean }) => {\r\n              observer.next(data);\r\n              observer.complete();\r\n            },\r\n            () => observer.error()\r\n          );\r\n      }\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ElementRef,\r\n  Inject,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { MODE } from '../../me-basic-alert/me-basic-alert.interface';\r\n\r\nexport interface DialogData {\r\n  title: string;\r\n  uom: string;\r\n  value: number;\r\n  showNextOperationButton: boolean;\r\n  inputFieldTitle: string;\r\n  codeInput: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-keyboard-numeric',\r\n  templateUrl: './keyboard-numeric.component.html',\r\n  styleUrls: ['./keyboard-numeric.component.scss'],\r\n})\r\nexport class KeyboardNumericComponent implements OnInit, AfterViewInit {\r\n  title: string = '';\r\n  uom: string = '';\r\n  showNextOperationButton: boolean = false;\r\n  inputFieldTitle: string = '';\r\n  @ViewChild('inputValue') inputValue: ElementRef;\r\n  valueForm: FormGroup;\r\n  initialLoad: boolean = false;\r\n  codeInput: boolean = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<KeyboardNumericComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef,\r\n    private globalService: GlobalService,\r\n    private translateService: TranslateService\r\n  ) {\r\n    this.title = data.title;\r\n    this.uom = data.uom;\r\n    this.showNextOperationButton = data.showNextOperationButton;\r\n    this.inputFieldTitle = data.inputFieldTitle;\r\n    this.valueForm = new FormGroup({\r\n      value: new FormControl(data.value ? data.value : '0', [\r\n        Validators.min(0),\r\n      ]),\r\n    });\r\n    this.codeInput = data.codeInput;\r\n  }\r\n\r\n  get valueControl(): AbstractControl | null {\r\n    return this.valueForm.get('value');\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initialLoad = true;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n    setTimeout(() => {\r\n      this.inputValue.nativeElement.focus();\r\n      this.inputValue.nativeElement.select();\r\n    });\r\n  }\r\n\r\n  public saveSelection(nextOperation: boolean = false): void {\r\n    this.dialogRef.close({\r\n      value: this.valueForm.value.value,\r\n      nextOperation,\r\n    });\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  numberClicked(event: string): void {\r\n    if (this.initialLoad) {\r\n      this.valueControl.setValue('0');\r\n      if (this.codeInput) {\r\n        this.valueControl.setValue('');\r\n      }\r\n      this.initialLoad = false;\r\n    }\r\n    switch (event) {\r\n      case '1':\r\n      case '2':\r\n      case '3':\r\n      case '4':\r\n      case '5':\r\n      case '6':\r\n      case '7':\r\n      case '8':\r\n      case '9':\r\n      case '0':\r\n        if (this.valueControl.value === '0' && !this.codeInput) {\r\n          this.valueControl.setValue('');\r\n        }\r\n        this.valueControl.setValue(this.valueControl.value + event);\r\n        break;\r\n      case '.':\r\n        if (!this.valueControl.value.includes('.')) {\r\n          this.valueControl.setValue(this.valueControl.value + event);\r\n        }\r\n        break;\r\n    }\r\n    this.inputValue.nativeElement.focus();\r\n  }\r\n\r\n  backspaceClicked(): void {\r\n    if (this.valueControl.value.slice(-1) === '.') {\r\n      this.valueControl.setValue(this.valueControl.value.slice(0, -1));\r\n    }\r\n    if (this.valueControl.value.length > 0) {\r\n      this.valueControl.setValue(this.valueControl.value.slice(0, -1));\r\n    }\r\n    if (this.valueControl.value.length === 0) {\r\n      this.valueControl.setValue('0');\r\n    }\r\n  }\r\n\r\n  checkIsNumber(event): void {\r\n    if (event.key === 'Enter') {\r\n      this.saveSelection(this.showNextOperationButton);\r\n    }\r\n    if (isNaN(+this.valueForm.get('value').value)) {\r\n      this.globalService.showBasicAlert(\r\n        MODE.error,\r\n        this.translateService.instant('inputError'),\r\n        this.translateService.instant('onlyNumbersAreAllowed')\r\n      );\r\n    } else {\r\n      this.initialLoad = false;\r\n    }\r\n  }\r\n}\r\n","<div class=\"main-container\">\r\n  <div class=\"content\">\r\n    <div class=\"header\">\r\n      <div class=\"title\">{{ title }}</div>\r\n    </div>\r\n    <div class=\"input-container\">\r\n      <div class=\"input\">\r\n        <form [formGroup]=\"valueForm\">\r\n          <mat-form-field class=\"field\">\r\n            <mat-label>{{ inputFieldTitle }}</mat-label>\r\n            <input\r\n              matInput\r\n              #inputValue\r\n              (keyup)=\"checkIsNumber($event)\"\r\n              formControlName=\"value\"\r\n            />\r\n          </mat-form-field>\r\n        </form>\r\n        <div class=\"uom\">\r\n          {{ uom | translate }}\r\n        </div>\r\n      </div>\r\n      <div class=\"buttons\">\r\n        <app-button\r\n          class=\"button\"\r\n          [iconName]=\"'arrow-left'\"\r\n          [isSquare]=\"true\"\r\n          [color]=\"'secondary'\"\r\n          (clickEvent)=\"backspaceClicked()\"\r\n        ></app-button>\r\n        <app-button\r\n          class=\"button\"\r\n          *ngIf=\"showNextOperationButton\"\r\n          [disabled]=\"valueForm.invalid\"\r\n          [iconName]=\"'x'\"\r\n          [isSquare]=\"true\"\r\n          (clickEvent)=\"saveSelection(true)\"\r\n        ></app-button>\r\n      </div>\r\n    </div>\r\n    <div class=\"grid-container\">\r\n      <app-button\r\n        [text]=\"'7'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('7')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'8'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('8')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'9'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('9')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'4'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('4')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [isSquare]=\"true\"\r\n        [text]=\"'5'\"\r\n        (clickEvent)=\"numberClicked('5')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'6'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('6')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'1'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('1')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'2'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('2')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'3'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('3')\"\r\n        class=\"grid-item\"\r\n        [color]=\"'secondary'\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'0'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('0')\"\r\n        [color]=\"'secondary'\"\r\n        class=\"grid-item\"\r\n      ></app-button>\r\n      <app-button\r\n        [text]=\"'.'\"\r\n        [isSquare]=\"true\"\r\n        (clickEvent)=\"numberClicked('.')\"\r\n        [color]=\"'secondary'\"\r\n        class=\"grid-item\"\r\n      ></app-button>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"footer\">\r\n    <app-button\r\n      [iconName]=\"'arrow-left'\"\r\n      (clickEvent)=\"cancelSaveSelection()\"\r\n      [isSquare]=\"true\"\r\n      [color]=\"'danger'\"\r\n    ></app-button>\r\n    <app-button\r\n      [disabled]=\"valueForm.invalid\"\r\n      [iconName]=\"'check'\"\r\n      [isSquare]=\"true\"\r\n      (clickEvent)=\"saveSelection()\"\r\n      [color]=\"'success'\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { KeyboardNumericComponent } from './keyboard-numeric.component';\r\n\r\n@NgModule({\r\n  declarations: [KeyboardNumericComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    MatDialogModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [KeyboardNumericComponent],\r\n  entryComponents: [KeyboardNumericComponent],\r\n})\r\nexport class KeyboardNumericModule {}\r\n","import {\r\n  ChangeDetectionStrategy,\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n  ViewEncapsulation,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-search-input',\r\n  templateUrl: './search-input.component.html',\r\n  styleUrls: ['./search-input.component.scss'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SearchInputComponent implements OnInit, OnDestroy, OnChanges {\r\n  @Input() keyword: string = '';\r\n  @Input() debounceTime: number = 100;\r\n  @Input() minCharacters: number = 1;\r\n  @Output() changeEvent: EventEmitter<string> = new EventEmitter();\r\n\r\n  searchInput: FormControl = new FormControl();\r\n\r\n  private inputChangeSubscription!: Subscription;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.inputChangeSubscription = this.searchInput.valueChanges\r\n      .pipe(debounceTime(this.debounceTime))\r\n      .subscribe(() => {\r\n        if (this.searchInput.value.length === 0) {\r\n          this.changeEvent.emit(this.searchInput.value);\r\n        } else if (this.searchInput.value.length >= this.minCharacters) {\r\n          this.changeEvent.emit(this.searchInput.value);\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.keyword && changes.keyword.previousValue) {\r\n      if (changes.keyword.currentValue !== changes.keyword.previousValue) {\r\n        // if the change is comming from outside we are not emiting, just setting the value\r\n        this.searchInput.setValue(this.keyword, { emitEvent: false });\r\n      }\r\n    }\r\n  }\r\n\r\n  resetSearchInputValue(): void {\r\n    this.searchInput.setValue('');\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.inputChangeSubscription.unsubscribe();\r\n  }\r\n}\r\n","<mat-form-field class=\"me-search-input-form-field\">\r\n  <mat-label>{{ \"searchFor\" | translate }}</mat-label>\r\n  <input\r\n    type=\"text\"\r\n    matInput\r\n    [formControl]=\"searchInput\"\r\n    [autocomplete]=\"'off'\"\r\n  />\r\n  <i-feather\r\n    *ngIf=\"!searchInput.value\"\r\n    matSuffix\r\n    name=\"search\"\r\n    class=\"search-icon\"\r\n  ></i-feather>\r\n  <i-feather\r\n    *ngIf=\"searchInput.value\"\r\n    (click)=\"resetSearchInputValue()\"\r\n    name=\"x\"\r\n    class=\"close\"\r\n    matSuffix\r\n  ></i-feather>\r\n</mat-form-field>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { SearchInputComponent } from './search-input.component';\r\nimport { IconsModule } from '../../modules/icons.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [SearchInputComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatInputModule,\r\n    ReactiveFormsModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatFormFieldModule,\r\n    IconsModule,\r\n    TranslateModule,\r\n    MatFormFieldModule,\r\n  ],\r\n  exports: [SearchInputComponent],\r\n})\r\nexport class SearchInputModule {}\r\n","export class Constants {\r\n  public static THUMBNAIL_GLASS = 'assets/glass_thumbnail.jpg';\r\n  public static THUMBNAIL_FRAME = 'assets/frames_thumbnail.jpg';\r\n  public static THUMBNAIL_PASSPARTU = 'assets/passpartu_thumbnail.jpg';\r\n  public static THUMBNAIL_MIRROR = 'assets/mirror_thumbnail.jpg';\r\n  public static THUMBNAIL_FACETING = 'assets/faceting_thumbnail.jpg';\r\n  public static THUMBNAIL_SANDING = 'assets/sanding_thumbnail.jpeg';\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}