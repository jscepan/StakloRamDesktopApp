{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_1__","TableShow","TableShowComponent","dataModel","header","forEach","gridTemplateColumnsCssStyle","i","console","log","editData","emit","data","length","selectors","inputs","outputs","decls","vars","consts","template","TableShowModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_0__","_angular_material_input__WEBPACK_IMPORTED_MODULE_4__","_angular_material_select__WEBPACK_IMPORTED_MODULE_5__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__","declarations","_table_show_component__WEBPACK_IMPORTED_MODULE_1__","imports","exports","BaseModel","InvoiceModel","Date","_base_model__WEBPACK_IMPORTED_MODULE_0__","AdditionalInformation","DraftInvoicesService","rxjs__WEBPACK_IMPORTED_MODULE_1__","$draftInvoices","asObservable","invoiceCounter","invoiceItemsCounter","next","invoiceItem","invoiceOid","items","getValue","oid","x","map","invoiceItems","push","invoice","_models_invoice_model__WEBPACK_IMPORTED_MODULE_0__","ii","invoiceItemOid","filter","factory","providedIn"],"sources":["webpack:///src/app/shared/components/table-show/table-show.component.html","webpack:///src/app/shared/components/table-show/table-show.component.ts","webpack:///src/app/shared/components/table-show/table-show.module.ts","webpack:///src/app/shared/models/base-model.ts","webpack:///src/app/shared/models/invoice-model.ts","webpack:///src/app/shared/services/data-store-services/draft-invoice-items-store.service.ts"],"sourcesContent":["<div class=\"main-container\">\r\n  <div\r\n    class=\"grid-container\"\r\n    style=\"grid-template-columns: {{ gridTemplateColumnsCssStyle }}\"\r\n  >\r\n    <div class=\"grid-item header\" *ngFor=\"let item of dataModel.header\">\r\n      {{ item }}\r\n    </div>\r\n    <div class=\"grid-item header\">{{ \"action\" | translate }}</div>\r\n    <ng-container *ngFor=\"let field of dataModel.data; let i = index\">\r\n      <div class=\"grid-item\">\r\n        {{ field }}\r\n      </div>\r\n      <div class=\"grid-item\" *ngIf=\"(i + 1) % dataModel.header.length === 0\">\r\n        <app-button\r\n          [buttonSize]=\"'extrasmall'\"\r\n          [iconName]=\"'edit'\"\r\n          [color]=\"'secondary'\"\r\n          (clickEvent)=\"clickEditData(i)\"\r\n        ></app-button>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n</div>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\n\r\nexport class TableShow {\r\n  header: string[] = [];\r\n  data: string[] = [];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-table-show',\r\n  templateUrl: './table-show.component.html',\r\n  styleUrls: ['./table-show.component.scss'],\r\n})\r\nexport class TableShowComponent implements OnInit {\r\n  @Input() dataModel: TableShow;\r\n  @Output() editData: EventEmitter<string> = new EventEmitter<string>();\r\n  gridTemplateColumnsCssStyle: string = 'auto ';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    this.dataModel.header.forEach(() => {\r\n      this.gridTemplateColumnsCssStyle += 'auto ';\r\n    });\r\n  }\r\n\r\n  clickEditData(i: number): void {\r\n    console.log('xxxxxxxxxx' + i);\r\n    this.editData.emit(\r\n      this.dataModel.data[i + 1 - this.dataModel.header.length]\r\n    );\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TableShowComponent } from './table-show.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [TableShowComponent],\r\n  declarations: [TableShowComponent],\r\n})\r\nexport class TableShowModule {}\r\n","export class BaseModel {\r\n  oid: string = '';\r\n}\r\n","import { BaseModel } from './base-model';\r\nimport { InvoiceItemModel } from './invoice-item.model';\r\n\r\nexport class InvoiceModel extends BaseModel {\r\n  createDate: Date = new Date();\r\n  invoiceItems: InvoiceItemModel[] = [];\r\n  amount: number = 0;\r\n  advancePayment: number = 0;\r\n  buyerName?: string;\r\n}\r\n\r\nexport class AdditionalInformation {\r\n  amount: number = 0;\r\n  advancePayment: number = 0;\r\n  buyerName?: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { InvoiceItemModel } from '../../models/invoice-item.model';\r\nimport { InvoiceModel } from '../../models/invoice-model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DraftInvoicesService {\r\n  private $draftInvoices: BehaviorSubject<InvoiceModel[]> = new BehaviorSubject<\r\n    InvoiceModel[]\r\n  >([]);\r\n  public readonly draftInvoices: Observable<InvoiceModel[]> =\r\n    this.$draftInvoices.asObservable();\r\n  private invoiceCounter: number = 0;\r\n  private invoiceItemsCounter: number = 0;\r\n\r\n  constructor() {}\r\n\r\n  clearDraftInvoices(): void {\r\n    this.invoiceCounter = 0;\r\n    this.invoiceItemsCounter = 0;\r\n    this.$draftInvoices.next([]);\r\n  }\r\n\r\n  addNewInvoiceItem(\r\n    invoiceItem: InvoiceItemModel,\r\n    invoiceOid?: string\r\n  ): string {\r\n    const items: InvoiceModel[] = this.$draftInvoices.getValue();\r\n    this.invoiceItemsCounter++;\r\n    invoiceItem.oid = 'draft' + this.invoiceItemsCounter;\r\n    if (invoiceOid) {\r\n      let x = items.map((i) => {\r\n        if (i.oid === invoiceOid) {\r\n          i.invoiceItems.push(invoiceItem);\r\n          return i;\r\n        } else {\r\n          return i;\r\n        }\r\n      });\r\n\r\n      this.$draftInvoices.next(x);\r\n      return invoiceOid;\r\n    } else {\r\n      this.invoiceCounter++;\r\n      let invoice = new InvoiceModel();\r\n      invoice.oid = 'draft' + this.invoiceCounter;\r\n      invoice.invoiceItems.push(invoiceItem);\r\n      items.push(invoice);\r\n      this.$draftInvoices.next(items);\r\n      return invoice.oid;\r\n    }\r\n  }\r\n\r\n  editDraftInvoiceItem(\r\n    invoiceOid: string,\r\n    invoiceItem: InvoiceItemModel\r\n  ): void {\r\n    if (invoiceOid) {\r\n      const items: InvoiceModel[] = this.$draftInvoices.getValue();\r\n      let x = items.map((i) => {\r\n        if (i.oid === invoiceOid) {\r\n          i.invoiceItems.map((ii) => {\r\n            if (ii.oid === invoiceItem.oid) {\r\n              return invoiceItem;\r\n            } else {\r\n              return ii;\r\n            }\r\n          });\r\n          return i;\r\n        } else {\r\n          return i;\r\n        }\r\n      });\r\n\r\n      this.$draftInvoices.next(x);\r\n    }\r\n  }\r\n\r\n  removeDraftInvoiceItem(invoiceOid: string, invoiceItemOid: string): void {\r\n    const items: InvoiceModel[] = this.$draftInvoices.getValue();\r\n    const x = items.map((i) => {\r\n      if (i.oid === invoiceOid) {\r\n        i.invoiceItems = i.invoiceItems.filter(\r\n          (ii) => ii.oid !== invoiceItemOid\r\n        );\r\n        return i;\r\n      } else {\r\n        return i;\r\n      }\r\n    });\r\n    this.$draftInvoices.next(x);\r\n  }\r\n}\r\n"]}