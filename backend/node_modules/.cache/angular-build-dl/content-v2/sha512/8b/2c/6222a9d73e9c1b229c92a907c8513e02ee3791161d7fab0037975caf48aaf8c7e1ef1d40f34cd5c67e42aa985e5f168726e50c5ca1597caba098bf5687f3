{"version":3,"mappings":"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","names":["routes","path","component","_invoice_create_edit_component__WEBPACK_IMPORTED_MODULE_0__","loadChildren","Promise","then","m","FramingModule","__webpack_require__","GlassingModule","InvoiceCreateEditRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","imports","exports","_angular_core__WEBPACK_IMPORTED_MODULE_8__","InvoiceCreateEditComponent","route","_activeRoute","draftInvoicesStoreService","globalService","translateService","printInvoicePopupComponentService","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_2__","src_app_shared_models_invoice_model__WEBPACK_IMPORTED_MODULE_1__","oid","snapshot","paramMap","get","subs","sink","draftInvoices","subscribe","invoices","invoice","filter","i","initializeForm","setInvoiceAmount","invoiceForm","_angular_forms__WEBPACK_IMPORTED_MODULE_9__","buyerName","advancePayment","action","navigate","invoiceItem","removeDraftInvoiceItem","amount","invoiceItems","forEach","item","printInvoice","openDialog","addInf","showBasicAlert","src_app_shared_components_me_basic_alert_me_basic_alert_interface__WEBPACK_IMPORTED_MODULE_0__","instant","ii","push","title","itemTitle","description","tempShowForDelete","invoiceNumber","date","createDate","unsubscribe","selectors","features","_print_invoice_popup_print_invoice_popup_component_service__WEBPACK_IMPORTED_MODULE_3__","decls","vars","consts","template","ctx","InvoiceCreateEditModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_invoice_create_edit_routing_module__WEBPACK_IMPORTED_MODULE_1__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_2__","_angular_material_input__WEBPACK_IMPORTED_MODULE_7__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_8__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_9__","_angular_forms__WEBPACK_IMPORTED_MODULE_10__","_print_invoice_popup_print_invoice_popup_module__WEBPACK_IMPORTED_MODULE_3__","_invoice_printed_invoice_printed_module__WEBPACK_IMPORTED_MODULE_4__","declarations","_angular_core__WEBPACK_IMPORTED_MODULE_2__","InvoicePrintedComponent","settingsService","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_0__","settings","header","printSettings","footer","currencyDisplay","formatSettings","currencyDisplayValue","generateQRCode","inputs","dataModel","InvoicePrintedModule","_angular_common__WEBPACK_IMPORTED_MODULE_2__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_3__","_invoice_printed_component__WEBPACK_IMPORTED_MODULE_0__","PrintInvoicePopupService","_matDialog","additionalInformation","rxjs__WEBPACK_IMPORTED_MODULE_2__","observer","config","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__","width","height","data","$openSelectPopup","open","_print_invoice_popup_component__WEBPACK_IMPORTED_MODULE_1__","afterClosed","next","complete","error","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","PrintInvoicePopupComponent","dialogRef","cdRef","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","detectChanges","value","v","setValue","close","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__","PrintInvoicePopupModule","_angular_common__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_1__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_5__","_angular_forms__WEBPACK_IMPORTED_MODULE_6__","_angular_material_form_field__WEBPACK_IMPORTED_MODULE_7__","_angular_material_input__WEBPACK_IMPORTED_MODULE_8__","_features_invoice_create_edit_print_invoice_popup_print_invoice_popup_component__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///src/app/features/invoice-create-edit/invoice-create-edit-routing.module.ts","webpack:///src/app/features/invoice-create-edit/invoice-create-edit.component.html","webpack:///src/app/features/invoice-create-edit/invoice-create-edit.component.ts","webpack:///src/app/features/invoice-create-edit/invoice-create-edit.module.ts","webpack:///src/app/features/invoice-create-edit/invoice-printed/invoice-printed.component.html","webpack:///src/app/features/invoice-create-edit/invoice-printed/invoice-printed.component.ts","webpack:///src/app/features/invoice-create-edit/invoice-printed/invoice-printed.module.ts","webpack:///src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup-component.service.ts","webpack:///src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup.component.html","webpack:///src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup.component.ts","webpack:///src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InvoiceCreateEditComponent } from './invoice-create-edit.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: InvoiceCreateEditComponent },\r\n  { path: 'edit/:invoiceOid', component: InvoiceCreateEditComponent },\r\n  {\r\n    path: 'edit/:invoiceOid/framing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/framing/framing.module').then(\r\n        (m) => m.FramingModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'framing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/framing/framing.module').then(\r\n        (m) => m.FramingModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'edit/:invoiceOid/glassing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/glassing/glassing.module').then(\r\n        (m) => m.GlassingModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'glassing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/glassing/glassing.module').then(\r\n        (m) => m.GlassingModule\r\n      ),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InvoiceCreateEditRoutingModule {}\r\n","<div class=\"container\">\r\n  <div class=\"invoice-header\">\r\n    <app-button\r\n      [iconName]=\"'plus'\"\r\n      [iconPosition]=\"'left'\"\r\n      [fullWidth]=\"true\"\r\n      [text]=\"'framing' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"create('framing')\"\r\n      class=\"button\"\r\n    ></app-button>\r\n    <app-button\r\n      [iconName]=\"'plus'\"\r\n      [iconPosition]=\"''\"\r\n      [fullWidth]=\"true\"\r\n      [text]=\"'glassing' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"create('glassing')\"\r\n      class=\"button\"\r\n    ></app-button>\r\n  </div>\r\n  <div class=\"invoice-items\">\r\n    <div class=\"grid-container\">\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"description\" | translate }}\r\n      </div>\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"price\" | translate }}\r\n      </div>\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"edit\" | translate }}\r\n      </div>\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"delete\" | translate }}\r\n      </div>\r\n      <ng-container *ngFor=\"let invoiceItem of invoice.invoiceItems\">\r\n        <div class=\"grid-item description\">\r\n          <div>\r\n            <span class=\"description\">{{ \"picture\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.dimensions.width }}</span>\r\n            <span> X </span>\r\n            <span>{{ invoiceItem.dimensions.height }}</span>\r\n            <span> </span>\r\n            <span>{{ invoiceItem.dimensions.uom }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.passpartu?.value\">\r\n            <span class=\"description\">{{ \"passpartu\" | translate }}</span>\r\n            <span>:</span>\r\n            <span>{{ invoiceItem.passpartu.value.name }}</span>\r\n            <span>/</span>\r\n            <span>{{ invoiceItem.passpartu.width }}</span>\r\n            <span></span>\r\n            <span>{{ invoiceItem.passpartu.uom }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.glass\">\r\n            <span class=\"description\">{{ \"glass\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.glass.name }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.mirror\">\r\n            <span class=\"description\">{{ \"mirror\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.mirror.name }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.faceting\">\r\n            <span class=\"description\">{{ \"faceting\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.faceting.name }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.sanding\">\r\n            <span class=\"description\">{{ \"sanding\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.sanding.name }}</span>\r\n          </div>\r\n          <div\r\n            *ngIf=\"\r\n              invoiceItem.selectedFrames &&\r\n              invoiceItem.selectedFrames.length > 0\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"invoiceItem.selectedFrames.length === 1\"\r\n              class=\"description\"\r\n            >\r\n              {{ \"frame\" | translate }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"invoiceItem.selectedFrames.length > 1\"\r\n              class=\"description\"\r\n            >\r\n              {{ \"frames\" | translate }}\r\n            </span>\r\n            <span>: </span>\r\n            <span\r\n              *ngFor=\"let frame of invoiceItem.selectedFrames; let ind = index\"\r\n            >\r\n              <span *ngIf=\"ind > 0\">, </span>\r\n              {{ frame.frame.name }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"grid-item\">\r\n          <div class=\"price\">\r\n            {{ invoiceItem.amount | number: \"1.3-3\" }}{{ currency }}\r\n          </div>\r\n        </div>\r\n        <div class=\"grid-item\">\r\n          <app-button\r\n            [iconName]=\"'edit'\"\r\n            buttonSize=\"small\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"editInvoiceItem(invoiceItem)\"\r\n            class=\"button\"\r\n          ></app-button>\r\n        </div>\r\n        <div class=\"grid-item\">\r\n          <app-button\r\n            [iconName]=\"'trash-2'\"\r\n            buttonSize=\"small\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"deleteInvoiceItem(invoiceItem)\"\r\n            class=\"button\"\r\n          ></app-button>\r\n        </div>\r\n      </ng-container>\r\n      <div class=\"grid-item sum\">{{ \"sum\" | translate }}:</div>\r\n      <div class=\"grid-item\">\r\n        {{ invoice.amount | number: \"1.3-3\" }}{{ currency }}\r\n      </div>\r\n      <div class=\"grid-item\"></div>\r\n      <div class=\"grid-item sum\"></div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <app-invoice-printed\r\n      *ngIf=\"tempShowForDelete\"\r\n      [dataModel]=\"tempShowForDelete\"\r\n    ></app-invoice-printed>\r\n  </div>\r\n  <div class=\"buttons\">\r\n    <app-button\r\n      [text]=\"'cancel' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"cancel()\"\r\n    ></app-button>\r\n    <app-button\r\n      [text]=\"'print' | translate\"\r\n      color=\"success\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"print()\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MODE } from 'src/app/shared/components/me-basic-alert/me-basic-alert.interface';\r\nimport { InvoiceItemModel } from 'src/app/shared/models/invoice-item.model';\r\nimport {\r\n  AdditionalInformation,\r\n  InvoiceModel,\r\n} from 'src/app/shared/models/invoice-model';\r\nimport { DraftInvoicesService } from 'src/app/shared/services/data-store-services/draft-invoice-items-store.service';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { InvoicePrinted } from './invoice-printed/invoice-printed.interface';\r\nimport { PrintInvoicePopupService } from './print-invoice-popup/print-invoice-popup-component.service';\r\n\r\n@Component({\r\n  selector: 'app-invoice-create-edit',\r\n  templateUrl: './invoice-create-edit.component.html',\r\n  styleUrls: ['./invoice-create-edit.component.scss'],\r\n  providers: [PrintInvoicePopupService],\r\n})\r\nexport class InvoiceCreateEditComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  isEdit: boolean = true;\r\n  invoice: InvoiceModel = new InvoiceModel();\r\n  currency: string = 'din';\r\n\r\n  invoiceForm: FormGroup;\r\n\r\n  // For delete - just temporary\r\n  tempShowForDelete: InvoicePrinted;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private _activeRoute: ActivatedRoute,\r\n    private draftInvoicesStoreService: DraftInvoicesService,\r\n    private globalService: GlobalService,\r\n    private translateService: TranslateService,\r\n    private printInvoicePopupComponentService: PrintInvoicePopupService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const oid = this._activeRoute.snapshot.paramMap.get('invoiceOid');\r\n    this.subs.sink = this.draftInvoicesStoreService.draftInvoices.subscribe(\r\n      (invoices) => {\r\n        const invoice = invoices.filter((i) => i.oid === oid)[0];\r\n        if (invoice) {\r\n          this.invoice = invoice;\r\n          this.initializeForm();\r\n          this.setInvoiceAmount();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.invoiceForm = new FormGroup({\r\n      buyerName: new FormControl(this.invoice.buyerName, []),\r\n      advancePayment: new FormControl(this.invoice.advancePayment, []),\r\n    });\r\n  }\r\n\r\n  create(action: 'framing' | 'glassing'): void {\r\n    this.route.navigate([\r\n      'invoice-create-edit',\r\n      'edit',\r\n      this.invoice.oid,\r\n      action,\r\n    ]);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  editInvoiceItem(invoiceItem: InvoiceItemModel): void {\r\n    this.route.navigate([\r\n      'invoice-create-edit',\r\n      'edit',\r\n      this.invoice.oid,\r\n      'framing',\r\n      'edit',\r\n      invoiceItem.oid,\r\n    ]);\r\n  }\r\n\r\n  deleteInvoiceItem(invoiceItem: InvoiceItemModel): void {\r\n    this.draftInvoicesStoreService.removeDraftInvoiceItem(\r\n      this.invoice.oid,\r\n      invoiceItem.oid\r\n    );\r\n  }\r\n\r\n  setInvoiceAmount(): void {\r\n    let amount = 0;\r\n    this.invoice.invoiceItems.forEach((item) => {\r\n      amount += item.amount;\r\n    });\r\n    this.invoice.amount = amount;\r\n  }\r\n\r\n  print(): void {\r\n    this.subs.sink.printInvoice = this.printInvoicePopupComponentService\r\n      .openDialog({\r\n        amount: this.invoice.amount,\r\n        advancePayment: this.invoice.advancePayment,\r\n        buyerName: this.invoice.buyerName,\r\n      })\r\n      .subscribe((addInf: AdditionalInformation) => {\r\n        if (addInf) {\r\n          this.globalService.showBasicAlert(\r\n            MODE.success,\r\n            this.translateService.instant('invoiceCreated'),\r\n            this.translateService.instant('invoiceSuccessfullyCreated')\r\n          );\r\n          this.invoice.advancePayment = addInf.advancePayment;\r\n          this.invoice.buyerName = addInf.buyerName;\r\n\r\n          // TODO\r\n          // save to database\r\n          let ii: {\r\n            title: string;\r\n            description: string;\r\n            amount: number;\r\n          }[] = [];\r\n          this.invoice.invoiceItems.forEach((item) => {\r\n            ii.push({\r\n              title: item.itemTitle,\r\n              description:\r\n                'Opis stavke asdkljfla skdfjlsdkjf sldkajf lksdj flsdkj afskdj fsdk fjkjlckv',\r\n              amount: item.amount,\r\n            });\r\n          });\r\n          this.tempShowForDelete = {\r\n            invoiceNumber: this.invoice.oid,\r\n            buyerName: this.invoice.buyerName,\r\n            date: this.invoice.createDate,\r\n            invoiceItems: ii,\r\n            amount: this.invoice.amount,\r\n            advancePayment: this.invoice.advancePayment,\r\n          };\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InvoiceCreateEditComponent } from './invoice-create-edit.component';\r\nimport { InvoiceCreateEditRoutingModule } from './invoice-create-edit-routing.module';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { PrintInvoicePopupModule } from './print-invoice-popup/print-invoice-popup.module';\r\nimport { InvoicePrintedModule } from './invoice-printed/invoice-printed.module';\r\n\r\n@NgModule({\r\n  declarations: [InvoiceCreateEditComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InvoiceCreateEditRoutingModule,\r\n    ButtonModule,\r\n    MatInputModule,\r\n    TranslateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    PrintInvoicePopupModule,\r\n    InvoicePrintedModule,\r\n  ],\r\n  exports: [InvoiceCreateEditComponent],\r\n  providers: [],\r\n})\r\nexport class InvoiceCreateEditModule {}\r\n","<div class=\"container\">\r\n  <div class=\"header\">\r\n    {{ header }}\r\n  </div>\r\n  <div class=\"invoice-number\">\r\n    {{ \"invoiceNumber\" | translate }}: {{ dataModel.invoiceNumber }}\r\n  </div>\r\n  <div class=\"buyer\" *ngIf=\"dataModel.buyerName\">\r\n    {{ \"buyer\" | translate }}: {{ dataModel.buyerName }}\r\n  </div>\r\n  <div class=\"date\">\r\n    {{ \"date\" | translate }}: {{ dataModel.date | date: \"dd/MM/yyyy\" }}\r\n  </div>\r\n  <div class=\"invoice-items\">\r\n    <div\r\n      class=\"item\"\r\n      *ngFor=\"let item of dataModel.invoiceItems; let i = index\"\r\n    >\r\n      <div class=\"title\">{{ i + 1 }}. {{ item.title }}</div>\r\n      <div class=\"description\">{{ item.description }}</div>\r\n      <div class=\"amount\">\r\n        {{ item.amount | number: \"1.2-2\" }} {{ currencyDisplay }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"amounts\">\r\n    <div class=\"gross-amount\">\r\n      {{ \"total\" | translate }}: {{ dataModel.amount | number: \"1.2-2\" }}\r\n      {{ currencyDisplay }}\r\n    </div>\r\n    <div class=\"advance-payment\">\r\n      {{ \"advancePayment\" | translate }}:\r\n      {{ dataModel.advancePayment | number: \"1.2-2\" }}\r\n      {{ currencyDisplay }}\r\n    </div>\r\n    <div class=\"rest-payment\">\r\n      {{ \"restPayment\" | translate }}:\r\n      {{ dataModel.amount - dataModel.advancePayment | number: \"1.2-2\" }}\r\n      {{ currencyDisplay }}\r\n    </div>\r\n  </div>\r\n  <div class=\"footer\">\r\n    {{ footer }}\r\n  </div>\r\n</div>\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { AppSettingsService } from 'src/app/shared/services/app-settings.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { InvoicePrinted } from './invoice-printed.interface';\r\n\r\n@Component({\r\n  selector: 'app-invoice-printed',\r\n  templateUrl: './invoice-printed.component.html',\r\n  styleUrls: ['./invoice-printed.component.scss'],\r\n  providers: [],\r\n})\r\nexport class InvoicePrintedComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  @Input() dataModel: InvoicePrinted;\r\n  header: string = '';\r\n  footer: string = '';\r\n  currencyDisplay: string = '';\r\n\r\n  constructor(private settingsService: AppSettingsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.settings.subscribe((settings) => {\r\n      this.header = settings.printSettings.header;\r\n      this.footer = settings.printSettings.footer;\r\n      this.currencyDisplay = settings.formatSettings.currencyDisplayValue;\r\n    });\r\n    this.generateQRCode();\r\n  }\r\n\r\n  generateQRCode(): void {\r\n    // TODO\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InvoicePrintedComponent } from './invoice-printed.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [InvoicePrintedComponent],\r\n  imports: [CommonModule, TranslateModule],\r\n  exports: [InvoicePrintedComponent],\r\n})\r\nexport class InvoicePrintedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { AdditionalInformation } from 'src/app/shared/models/invoice-model';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { PrintInvoicePopupComponent } from './print-invoice-popup.component';\r\n\r\n@Injectable()\r\nexport class PrintInvoicePopupService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(\r\n    additionalInformation: AdditionalInformation\r\n  ): Observable<AdditionalInformation> {\r\n    return new Observable((observer: Subscriber<AdditionalInformation>) => {\r\n      const config: MatDialogConfig = new MatDialogConfig();\r\n      config.width = '80%';\r\n      config.height = '80%';\r\n      config.data = {\r\n        additionalInformation,\r\n      };\r\n\r\n      this.subs.sink.$openSelectPopup = this._matDialog\r\n        .open(PrintInvoicePopupComponent, config)\r\n        .afterClosed()\r\n        .subscribe(\r\n          (additionalInformation: AdditionalInformation) => {\r\n            observer.next(additionalInformation);\r\n            observer.complete();\r\n          },\r\n          () => observer.error()\r\n        );\r\n    });\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <form [formGroup]=\"invoiceForm\" *ngIf=\"invoiceForm\">\r\n    <div class=\"form-group\">\r\n      <div class=\"element buyer-name\">\r\n        <mat-form-field class=\"element\">\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            formControlName=\"buyerName\"\r\n            placeholder=\"{{ 'buyerName' | translate }}\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"element advance-payment\">\r\n        <mat-form-field>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            formControlName=\"advancePayment\"\r\n            placeholder=\"{{ 'advancePayment' | translate }}\"\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"additional-buttons\">\r\n          <app-button\r\n            [text]=\"'all' | translate\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(additionalInformation.amount)\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'+1000'\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(1000)\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'+500'\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(500)\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'+100'\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(100)\"\r\n          ></app-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <app-button\r\n    [text]=\"'cancel' | translate\"\r\n    color=\"secondary\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"cancelSaveSelection()\"\r\n  ></app-button>\r\n  <app-button\r\n    [text]=\"'print' | translate\"\r\n    color=\"success\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"saveSelection()\"\r\n  ></app-button>\r\n</mat-dialog-actions>\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { AdditionalInformation } from 'src/app/shared/models/invoice-model';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\n\r\nexport interface DialogData {\r\n  additionalInformation: AdditionalInformation;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-print-invoice-popup',\r\n  templateUrl: './print-invoice-popup.component.html',\r\n  styleUrls: ['./print-invoice-popup.component.scss'],\r\n})\r\nexport class PrintInvoicePopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  invoiceForm: FormGroup;\r\n\r\n  public additionalInformation: AdditionalInformation;\r\n\r\n  get buyerNameControl(): AbstractControl | null {\r\n    return this.invoiceForm.get('buyerName');\r\n  }\r\n\r\n  get advancePaymentControl(): AbstractControl | null {\r\n    return this.invoiceForm.get('advancePayment');\r\n  }\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PrintInvoicePopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.additionalInformation = data.additionalInformation;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.invoiceForm = new FormGroup({\r\n      buyerName: new FormControl(this.additionalInformation.buyerName, []),\r\n      advancePayment: new FormControl(\r\n        this.additionalInformation.advancePayment,\r\n        []\r\n      ),\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  increasePaymentFor(value: number): void {\r\n    const v = this.invoiceForm.get('advancePayment');\r\n    v.value + value > this.additionalInformation.amount\r\n      ? v.setValue(this.additionalInformation.amount)\r\n      : v.setValue(v.value + value);\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close(this.invoiceForm.value);\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { PrintInvoicePopupComponent } from '@features/invoice-create-edit/print-invoice-popup/print-invoice-popup.component';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@NgModule({\r\n  declarations: [PrintInvoicePopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n  ],\r\n  exports: [PrintInvoicePopupComponent],\r\n  entryComponents: [PrintInvoicePopupComponent],\r\n})\r\nexport class PrintInvoicePopupModule {}\r\n"]}