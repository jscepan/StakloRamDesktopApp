{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","routes","path","loadChildren","__webpack_require__","then","m","MainLayoutModule","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_1__","imports","exports","AppComponent","languageService","_angular_core__WEBPACK_IMPORTED_MODULE_1__","selectors","features","decls","vars","template","HttpLoaderFactory","http","_ngx_translate_http_loader__WEBPACK_IMPORTED_MODULE_3__","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","_language_service__WEBPACK_IMPORTED_MODULE_2__","_angular_common_http__WEBPACK_IMPORTED_MODULE_5__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_6__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__","loader","provide","useFactory","deps","declarations","LanguageService","translateService","selectedLanguage","localStorage","getItem","defaultLanguage","changeLanguage","languageCode","use","setItem","_angular_core__WEBPACK_IMPORTED_MODULE_0__","factory","providedIn","environment","production","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","error","err"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/language.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 98255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    loadChildren: () =>\r\n      import('@features/main-layout/main-layout.module').then(\r\n        (m) => m.MainLayoutModule\r\n      ),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AppRoutingModule {}\r\n","import { Component } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LanguageService } from './language.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss'],\r\n  providers: [],\r\n})\r\nexport class AppComponent {\r\n  title = 'radnja';\r\n\r\n  constructor(public languageService: LanguageService) {}\r\n}\r\n","<router-outlet></router-outlet>\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\r\nimport { LanguageService } from './language.service';\r\n\r\nexport function HttpLoaderFactory(http: HttpClient): TranslateHttpLoader {\r\n  return new TranslateHttpLoader(http, 'assets/i18n/');\r\n}\r\n\r\n@NgModule({\r\n  declarations: [AppComponent],\r\n  imports: [\r\n    HttpClientModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    TranslateModule.forRoot({\r\n      loader: {\r\n        provide: TranslateLoader,\r\n        useFactory: HttpLoaderFactory,\r\n        deps: [HttpClient],\r\n      },\r\n    }),\r\n  ],\r\n  exports: [TranslateModule],\r\n  providers: [LanguageService],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LanguageService {\r\n  static defaultLanguage = 'rs';\r\n  public supportedLanguages = ['en', 'rs'];\r\n\r\n  public selectedLanguage!: string;\r\n\r\n  constructor(private translateService: TranslateService) {\r\n    let selectedLanguage = localStorage.getItem('currentLanguageStakloRam');\r\n    if (!selectedLanguage) {\r\n      selectedLanguage = LanguageService.defaultLanguage;\r\n    }\r\n    this.changeLanguage(selectedLanguage);\r\n  }\r\n\r\n  changeLanguage(languageCode: string): void {\r\n    this.selectedLanguage = languageCode;\r\n    this.translateService.use(languageCode);\r\n    localStorage.setItem('currentLanguageStakloRam', languageCode);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}