{"version":3,"mappings":"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tB;AAOA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;UACAO;;;AAEA;;;AACA,6BAAyB,uEAAaA,UAAb,CAAzB;AACA;AACA;AACA;AACA;AACA;;;AACA,+BAA0BxC,yDAA1B,CAAwC,eAAxC;;UACAyC;;;;;AACA;AACA;AACA;AACA;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,qCAAiCC,yCAAjC;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AA7BA;AA8BA;AACA;AACA;AACA;AACA;;;;;eACA;AAA0B;AAAA;AAC1B;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,sCAAkCL,+DAAlC,CAAgD,8CAAhD,EAAgD,sBAAhD;AACA;;;;QAjFAM;;AAmFAF;AAA2C,kCAAyBzC,gEAAyBA,2DAAzB,CAAzB,EAA4EA,gEAAwB4C,cAAxB,EAAwB,CAAxB,CAA5E;AAAoG,OAA/I;;AACAH,kCAA4BzC,gEAAwB;AAAGyB,qBAAH;AAAGC,gCAAH;AAAGmB;AAA4G;AAC3J7C,yEAAqB8C,QAArB,EAAqBV,YAArB,EAAqB,CAArB;;AACApC,yEAAqB8C,QAArB,EAAqBX,cAArB,EAAqB,CAArB,EAAkDnC,sDAAlD;AACR;;AAAM;AACN;;AACQA,yEAAqB+C,KAAM/C,2DAA3B,MAA6C8B,4BAA7C;AACA9B,yEAAqB+C,KAAM/C,2DAA3B,MAA6C8B,+BAA7C;AACR;AAAO,SAP6C;AAO7CkB;AAA8C;AAC7ChD,sEAAmBA,sDAAnB,EAA8B,CAA9B;AACR;;AAAM;AACN;;AACQA,yEAAqB+C,KAAM/C,2DAA3B,MAA6C8B,+BAA7C;AACR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AkBV;AACD;AACA;AACA;AACA;AACA;AACA;;;UACAC;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA,wCAAsCJ,oDAAtC;AACA;AACA;AACA;;AACA,2CAAyC7B,yCAAzC;AACA;AACA;AACA;;AACA,kCAAgC1C,uDAAhC;AACA;AACA;AACA;;AACA,sCAAoCA,uDAApC;AACA;AACA;AACA;;AACA,yCAAuCA,uDAAvC;AACA;AACA;AACA;;AACA,iCAA+BA,uDAA/B,CAA2C,IAA3C,EA1BA,CA2BA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AACA4E;AACa,aAPb;AAQA,WA1CA,CA2CA;AACA;;;AACA,0CAAwC;AAAoB;AAC5D;AACA;AACA;AACA;AACA;AACA;AACS,WAP+B,CAAxC,EAOSH,SAPT;AAOS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACS,WAnBT;AAoBA;AACA;AACA;AACA;AACA;AACA;;;;;eACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,2CACAI,gCADA,IAEAA,iCAFA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA,aAFA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;;;;;AAEAF;AAA6D,2CAAkC3E,gEAAyBA,qDAAzB,CAAlC,EAA+EA,gEAAyB8E,8DAAzB,EAA8C,CAA9C,CAA/E,EAAmI9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;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,2CAAuCvE,uDAAvC;AACA;AACA;AACA;;AACA,mCAA+BA,uDAA/B;AACA;AACA;AACA;;AACA,qCAAiCA,uDAAjC;AACA;AACA;AACA;;AACA,yCAAqCA,uDAArC,CAAiD,IAAjD;AACA;AACA,wFACAsG,+BADA,GACA,OADA;AAEA,gGACAA,+BADA,GACA,KADA;AAjDA;AAmDA;AACA;AACA;AACA;AACA;;;;;eACA;AAA0B;AAAA;AAC1B;AACA;AACA;AACA;;eACA;AAA+B,kCAAsB,+EAAqBpG,KAArB,CAAtB;AAA2C;AAC1E;AACA;AACA;AACA;;;;eACA;AAA0B;AAAA;AAC1B;AACA;AACA;AACA;;eACA;AACA,kCAA8B,8EAAoBA,KAApB,EAAoB,IAApB,CAA9B;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAA8B;AAAA;AAC9B;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAA4B;AAAA;AAC5B;AACA;AACA;AACA;;eACA;AACA;AACA;AACAqG,oEAAyD,oBAAzD;;AACA;AACAA,mEAA0DrG,KAA1D;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;;AACA;AACA,+FAJA,CAKA;AACA;;;AACA;AACA;AACA;;AACA;AACA;AACA,eALA,CAMA;AACA;;;AACAsG;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA,iBALA;;AAMA;AACA;AACA;AACa,eAbb;AAcA,aA7BA,CA8BA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACAC,mDADA,CAEA;AACA;;AACA;AACAA;AACA;AACS,aAZT;;AAaA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;;AACA,yCAFA,CAGA;AACA;;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA,+EAFA,CAGA;AACA;;;AACA;AACA;AACA;;AACA,gCAAgCC,eAAhC,EAAiDA,GAAjD,EAAiD;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACS,aAtBT;AAuBA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;AACA,kCACAlC,IADA,CACkB,2DAAS,aAAT,CADlB,EAEAC,SAFA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACa,eARb;;AASA;AACS,aAjBT;AAkBA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACAkC;;AACA;AACAA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA;AACA;;AACA,yCAAqC,+EAAK;AAAA;AAC1C;AACA;AACA;AACA;AAAA;AAAA,aAJ0C,CAAL,GAKrClC,SALqC;AAKrC;AACA;AACA;AACA;AAAA;AAAA,aARqC,CAArC;AASA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,2CAAgC,aAAhC,cAAiDiC,CAAjD;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA,6CAAkC,aAAlC,cAAmDA,CAAnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;AACA;AACAE,qEANA,CAOA;AACA;;AACA;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBAC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AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;UACAC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,gCAA8BnG,yCAA9B;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA,oCAAkCA,yCAAlC;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA,wCAAsC1C,uDAAtC;AACA;AACA;AACA;;AACA,kCAAgCA,uDAAhC,GAjDA,CAkDA;;AACA8I;AAAA;AACA;AACA;AACA;AACY,8DAASC,yBAAT,EAAS,YAAT,EACZvE,IADY,CACU,4DAAS,kBAAT,CADV,EAEZC,SAFY;AAEZ;AACA;AACA;AACA;AACA;AACa,aAPD;AAQH,WAZT;AAaA;AACA;AACA;AACA;AACA;;;;;eACA;AAA0B;AAAA;AAC1B;AACA;AACA;AACA;;eACA;AACAvE,oBAAgB,8EAAoBA,KAApB,CAAhB;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACQ,8DAAS,qCAAT,EAAS,YAAT,EAAS8I,2BAAT,EACRxE,IADQ,CACU,4DAAS,eAAT,CADV,EAERC,SAFQ;AAER;AACA;AACA;AACA;AACA;AACS,aAPD;AAQA,8DAAS,iCAAT,EAAS,YAAT,EAASuE,2BAAT,EACRxE,IADQ,CACU,4DAAS,eAAT,CADV,EAERC,SAFQ;AAER;AACA;AACA;AACA;AACA;AACS,aAPD;AAQR;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA,2DAAyD,2CAAE,IAAF,CAAzD;AACA;;AACA;AACA;;;AACA;AAAA;AACA;AACA;AACA,qBAHAwE,OAGA;AACA;;AACA;AACS,aANT;;AAOA,mCAA+Bb,+DAA/B,CAA8C,WAA9C,EACAc,yBADA,CACA,0BADA,EAEAC,QAFA;;AAGA,iDAhBA,CAiBA;AACA;;;AACA,sGAnBA,CAoBA;AACA;;AACQ,0DAAKC,SAAL,EAAKC,MAAL,EAAK,mBAAL,EAAK7E,IAAL,CAAmD,4DAAS,eAAT,CAAnD,EAA4DC,SAA5D;AAA4D;AACpE;AACA;AACA;AACA;AACA+B;;AACA;AACS,aAPD,EAtBR,CA8BA;AACA;AACA;;AACA,yCAAqC,4DAAS,eAAT,CAArC,EAA8C/B,SAA9C;AAA8C;AAC9C;AACA;AACA;AACA;AACA;;AACA;AACS,aAPT;AAQA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;AACA;AACA,aANA,CAOA;AACA;;;AACA;AACA;;AACA;;AACA;;AACA;;AACA;AACA,aAfA,CAgBA;AACA;;;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,gBAAY,wEAAckC,KAAd,CAAZ,EAA0B;AAC1B;AACA;;AACA;AACA,mBAAiB2C,wDAAjB;AACA;;AACA3C;AACA;;AACA,mBAAiB2C,uDAAjB;AACA;;AACA3C;AACA;;AACA,mBAAiB2C,yDAAjB;AACA,mBAAiBA,yDAAjB;AACA;AACA;;AACA;AACA;;AACA;;AACA;AACA;;AAjBA;AAmBA;AACA;AACA;AACA;AACA;;;;iBACA;AAAA;;AACA;AACA,yEAFA,CAGA;AACA;AACA;;AACA;AACA,2DADA,CAEA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;;AACA;;AACA;AACa,eAPb;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AACA;AAAA;AAAiD,4CAAjD,GAAiD,CAAjD;AACA;AACA;AACA;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;;AACA;AACA,sDADA,CAEA;AACA;AACA;;AACA;;;AACA;AACA;;AACA;;AACA;AACAC;AACA,eAFA,MAGA;AACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;AACA;AACA;;AACA;AACA;;AACA,qGATA,CAUA;AACA;AACA;AACA;AACA;AACA;;AACA,+EAAoEC,sBAApE,SAhBA,CAiBA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;eACA;AAA2B;AAAA;AAC3B;AACA;AACA;AACA;;eACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA,8EAFA,CAGA;;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA;AACA;;;AACA;;AACA;AACA;AACA,aARA,CASA;;AACA;;;AACA;AACA,wCAA0CC,sCAA1C;AAAA,gBAAgBC,UAAhB,yBAAgBA,UAAhB;AAAA,gBAAgBC,WAAhB,yBAAgBA,WAAhB;AACA;;AACA;AACA;;AACA;;AACA;AACAC;AACAC;AACA,aAHA,MAIA;AACAA;AACAD;AACA;AACA;;;AACA;AACA;;AACA;;AACA;AACA;AACA;AACA,aAHA,MAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,aAFA,MAGA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;iBACA;AACA;AACA;AACA,aAFA,M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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_0__","animationDuration","value","params","MatTabGroup_div_2_ng_template_2_ng_template_0_Template","$implicit","tab_r4","_r12","MatTabGroup_div_2_ng_template_2_Template","MatTabGroup_div_2_ng_template_3_Template","ctx_r1","i_r5","_r16","ctx_r3","tab_r13","providedIn","factory","method","left","width","MatInkBar","requestAnimationFrame","inkBar","_MAT_INK_BAR_POSITIONER","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_1__","type","selectors","hostAttrs","hostVars","hostBindings","ctx","decorators","args","selector","host","MatTabContent","MatTabLabel","_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_2__","t","features","MatTabBase","MatTab","rxjs__WEBPACK_IMPORTED_MODULE_4__","_MatTabMixinBase","MAT_TAB_GROUP","contentQueries","dirIndex","_t","viewQuery","inputs","disabled","textLabel","ariaLabel","ariaLabelledby","exportAs","ngContentSelectors","decls","vars","template","MatTab_ng_template_0_Template","encapsulation","templateLabel","_explicitContent","read","_implicitContent","changeDetection","translateTab","transform","minHeight","MatTabBodyPortal","_document","rxjs__WEBPACK_IMPORTED_MODULE_6__","pipe","subscribe","_angular_common__WEBPACK_IMPORTED_MODULE_8__","_MatTabBodyBase","changeDetectorRef","position","_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_10__","_content","origin","outputs","_onCentering","_beforeCentering","_afterLeavingCenter","_onCentered","MatTabBody","elementRef","dir","consts","MatTabBody_ng_template_2_Template","_c2","_c1","directives","styles","data","animation","_portalHost","animations","MatTabChangeEvent","MatTabGroupMixinBase","_MatTabGroupBase","defaultConfig","nativeElement","Promise","tab","i","event","wrapper","_MatTabGroupMixinBase","MAT_TABS_CONFIG","headerPosition","disablePagination","dynamicHeight","selectedIndex","backgroundColor","selectedIndexChange","focusChange","animationDone","selectedTabChange","MatTabGroup","animationMode","_c3","_c4","color","disableRipple","provide","useExisting","MatTabGroup_div_2_Template","MatTabGroup_mat_tab_body_5_Template","MatTabLabelWrapper","_angular_material_core__WEBPACK_IMPORTED_MODULE_3__","_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__","_allTabs","descendants","_tabBodyWrapper","_tabHeader","providers","MatTabLabelWrapperBase","_MatTabLabelWrapperMixinBase","passive","MatPaginatedTabHeader","_ngZone","_elementRef","passiveEventListenerOptions","realign","withHorizontalOrientation","withWrap","dirChange","resize","_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__","containerEl","Math","selectedLabel","offsetLeft","offsetWidth","labelBeforePos","labelAfterPos","HEADER_SCROLL_DELAY","HEADER_SCROLL_INTERVAL","maxScrollDistance","distance","_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__","_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_14__","_MatTabHeaderBase","MatTabHeader","viewportRuler","ngZone","platform","_c5","_c6","_c7","_c8","selectFocusedIndex","indexFocused","_angular_cdk_observers__WEBPACK_IMPORTED_MODULE_21__","_items","_inkBar","_tabListContainer","_tabList","_nextPaginator","_previousPaginator","_MatTabNavBase","classList","MatTabNav","MatTabLink","attrs","MatTabLinkMixinBase","_MatTabLinkBase","enterDuration","exitDuration","_focusMonitor","_MatTabLinkMixinBase","active","tabIndex","MatTabsModule","imports","exports","declarations","routes","path","component","_settings_layout_component__WEBPACK_IMPORTED_MODULE_0__","loadChildren","then","m","AppSettingsModule","ProductSettingsModule","SettingsLayoutRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","item_r1","SettingsLayoutComponent","router","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_0__","url","navigate","subs","unsubscribe","SettingsLayoutModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_0__","_settings_layout_routing_module__WEBPACK_IMPORTED_MODULE_1__","_angular_material_tabs__WEBPACK_IMPORTED_MODULE_5__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__","_settings_layout_component__WEBPACK_IMPORTED_MODULE_2__"],"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js","webpack:///src/app/features/settings/settings-layout-routing.module.ts","webpack:///src/app/features/settings/settings-layout.component.html","webpack:///src/app/features/settings/settings-layout.component.ts","webpack:///src/app/features/settings/settings-layout.module.ts"],"sourcesContent":["import { FocusKeyManager, FocusMonitor, A11yModule } from '@angular/cdk/a11y';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { CdkPortal, TemplatePortal, CdkPortalOutlet, PortalHostDirective, PortalModule } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { InjectionToken, Directive, ElementRef, NgZone, Inject, Optional, TemplateRef, Component, ChangeDetectionStrategy, ViewEncapsulation, ViewContainerRef, ContentChild, ViewChild, Input, ComponentFactoryResolver, forwardRef, EventEmitter, ChangeDetectorRef, Output, QueryList, ContentChildren, Attribute, NgModule } from '@angular/core';\nimport { mixinDisabled, mixinColor, mixinDisableRipple, mixinTabIndex, MAT_RIPPLE_GLOBAL_OPTIONS, RippleRenderer, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject, Subscription, merge, fromEvent, of, timer } from 'rxjs';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { startWith, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ViewportRuler } from '@angular/cdk/scrolling';\nimport { normalizePassiveListenerOptions, Platform } from '@angular/cdk/platform';\nimport { hasModifierKey, SPACE, ENTER, END, HOME } from '@angular/cdk/keycodes';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/ink-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n * @record\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/bidi';\nimport * as ɵngcc2 from '@angular/common';\nimport * as ɵngcc3 from '@angular/material/core';\nimport * as ɵngcc4 from '@angular/cdk/a11y';\nimport * as ɵngcc5 from '@angular/cdk/portal';\nimport * as ɵngcc6 from '@angular/cdk/scrolling';\nimport * as ɵngcc7 from '@angular/cdk/platform';\nimport * as ɵngcc8 from '@angular/cdk/observers';\n\nfunction MatTab_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵprojection(0);\n} }\nconst _c0 = [\"*\"];\nfunction MatTabBody_ng_template_2_Template(rf, ctx) { }\nconst _c1 = function (a0) { return { animationDuration: a0 }; };\nconst _c2 = function (a0, a1) { return { value: a0, params: a1 }; };\nconst _c3 = [\"tabBodyWrapper\"];\nconst _c4 = [\"tabHeader\"];\nfunction MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) { }\nfunction MatTabGroup_div_2_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, \"ng-template\", 9);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵproperty(\"cdkPortalOutlet\", tab_r4.templateLabel);\n} }\nfunction MatTabGroup_div_2_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const tab_r4 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(tab_r4.textLabel);\n} }\nfunction MatTabGroup_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵlistener(\"click\", function MatTabGroup_div_2_Template_div_click_0_listener() { const restoredCtx = ɵngcc0.ɵɵrestoreView(_r12); const tab_r4 = restoredCtx.$implicit; const i_r5 = restoredCtx.index; const ctx_r11 = ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return ctx_r11._handleClick(tab_r4, _r0, i_r5); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵtemplate(3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-label-active\", ctx_r1.selectedIndex == i_r5);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r1._getTabLabelId(i_r5))(\"disabled\", tab_r4.disabled)(\"matRippleDisabled\", tab_r4.disabled || ctx_r1.disableRipple);\n    ɵngcc0.ɵɵattribute(\"tabIndex\", ctx_r1._getTabIndex(tab_r4, i_r5))(\"aria-posinset\", i_r5 + 1)(\"aria-setsize\", ctx_r1._tabs.length)(\"aria-controls\", ctx_r1._getTabContentId(i_r5))(\"aria-selected\", ctx_r1.selectedIndex == i_r5)(\"aria-label\", tab_r4.ariaLabel || null)(\"aria-labelledby\", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", tab_r4.templateLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !tab_r4.templateLabel);\n} }\nfunction MatTabGroup_mat_tab_body_5_Template(rf, ctx) { if (rf & 1) {\n    const _r16 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"mat-tab-body\", 10);\n    ɵngcc0.ɵɵlistener(\"_onCentered\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r15 = ɵngcc0.ɵɵnextContext(); return ctx_r15._removeTabBodyWrapperHeight(); })(\"_onCentering\", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r16); const ctx_r17 = ɵngcc0.ɵɵnextContext(); return ctx_r17._setTabBodyWrapperHeight($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"mat-tab-body-active\", ctx_r3.selectedIndex == i_r14);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r3._getTabContentId(i_r14))(\"content\", tab_r13.content)(\"position\", tab_r13.position)(\"origin\", tab_r13.origin)(\"animationDuration\", ctx_r3.animationDuration);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", ctx_r3._getTabLabelId(i_r14));\n} }\nconst _c5 = [\"tabListContainer\"];\nconst _c6 = [\"tabList\"];\nconst _c7 = [\"nextPaginator\"];\nconst _c8 = [\"previousPaginator\"];\nconst _c9 = [\"mat-tab-nav-bar\", \"\"];\nfunction _MatInkBarPositioner() { }\n/**\n * Injection token for the MatInkBar's Positioner.\n * @type {?}\n */\nconst _MAT_INK_BAR_POSITIONER = new InjectionToken('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n});\n/**\n * The default positioner function for the MatInkBar.\n * \\@docs-private\n * @return {?}\n */\nfunction _MAT_INK_BAR_POSITIONER_FACTORY() {\n    /** @type {?} */\n    const method = (/**\n     * @param {?} element\n     * @return {?}\n     */\n    (element) => ({\n        left: element ? (element.offsetLeft || 0) + 'px' : '0',\n        width: element ? (element.offsetWidth || 0) + 'px' : '0',\n    }));\n    return method;\n}\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * \\@docs-private\n */\nclass MatInkBar {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _inkBarPositioner\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._inkBarPositioner = _inkBarPositioner;\n        this._animationMode = _animationMode;\n    }\n    /**\n     * Calculates the styles from the provided element in order to align the ink-bar to that element.\n     * Shows the ink bar if previously set as hidden.\n     * @param {?} element\n     * @return {?}\n     */\n    alignToElement(element) {\n        this.show();\n        if (typeof requestAnimationFrame !== 'undefined') {\n            this._ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => {\n                requestAnimationFrame((/**\n                 * @return {?}\n                 */\n                () => this._setStyles(element)));\n            }));\n        }\n        else {\n            this._setStyles(element);\n        }\n    }\n    /**\n     * Shows the ink bar.\n     * @return {?}\n     */\n    show() {\n        this._elementRef.nativeElement.style.visibility = 'visible';\n    }\n    /**\n     * Hides the ink bar.\n     * @return {?}\n     */\n    hide() {\n        this._elementRef.nativeElement.style.visibility = 'hidden';\n    }\n    /**\n     * Sets the proper styles to the ink bar element.\n     * @private\n     * @param {?} element\n     * @return {?}\n     */\n    _setStyles(element) {\n        /** @type {?} */\n        const positions = this._inkBarPositioner(element);\n        /** @type {?} */\n        const inkBar = this._elementRef.nativeElement;\n        inkBar.style.left = positions.left;\n        inkBar.style.width = positions.width;\n    }\n}\nMatInkBar.ɵfac = function MatInkBar_Factory(t) { return new (t || MatInkBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(_MAT_INK_BAR_POSITIONER), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatInkBar.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatInkBar, selectors: [[\"mat-ink-bar\"]], hostAttrs: [1, \"mat-ink-bar\"], hostVars: 2, hostBindings: function MatInkBar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n    } } });\n/** @nocollapse */\nMatInkBar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [_MAT_INK_BAR_POSITIONER,] }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatInkBar, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-ink-bar',\n                host: {\n                    'class': 'mat-ink-bar',\n                    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [_MAT_INK_BAR_POSITIONER]\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatInkBar.prototype._inkBarPositioner;\n    /** @type {?} */\n    MatInkBar.prototype._animationMode;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Decorates the `ng-template` tags and reads out the template from it.\n */\nclass MatTabContent {\n    /**\n     * @param {?} template\n     */\n    constructor(template) {\n        this.template = template;\n    }\n}\nMatTabContent.ɵfac = function MatTabContent_Factory(t) { return new (t || MatTabContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef)); };\nMatTabContent.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabContent, selectors: [[\"\", \"matTabContent\", \"\"]] });\n/** @nocollapse */\nMatTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabContent, [{\n        type: Directive,\n        args: [{ selector: '[matTabContent]' }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabContent.prototype.template;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to flag tab labels for use with the portal directive\n */\nclass MatTabLabel extends CdkPortal {\n}\nMatTabLabel.ɵfac = /*@__PURE__*/ function () { let ɵMatTabLabel_BaseFactory; return function MatTabLabel_Factory(t) { return (ɵMatTabLabel_BaseFactory || (ɵMatTabLabel_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatTabLabel)))(t || MatTabLabel); }; }();\nMatTabLabel.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabel, selectors: [[\"\", \"mat-tab-label\", \"\"], [\"\", \"matTabLabel\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-label], [matTabLabel]'\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTab.\n/**\n * \\@docs-private\n */\nclass MatTabBase {\n}\n/** @type {?} */\nconst _MatTabMixinBase = mixinDisabled(MatTabBase);\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_TAB_GROUP = new InjectionToken('MAT_TAB_GROUP');\nclass MatTab extends _MatTabMixinBase {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?=} _closestTabGroup\n     */\n    constructor(_viewContainerRef, _closestTabGroup) {\n        super();\n        this._viewContainerRef = _viewContainerRef;\n        this._closestTabGroup = _closestTabGroup;\n        /**\n         * Plain text label for the tab, used when there is no template label.\n         */\n        this.textLabel = '';\n        /**\n         * Portal that will be the hosted content of the tab\n         */\n        this._contentPortal = null;\n        /**\n         * Emits whenever the internal state of the tab changes.\n         */\n        this._stateChanges = new Subject();\n        /**\n         * The relatively indexed position where 0 represents the center, negative is left, and positive\n         * represents the right.\n         */\n        this.position = null;\n        /**\n         * The initial relatively index origin of the tab if it was created and selected after there\n         * was already a selected tab. Provides context of what position the tab should originate from.\n         */\n        this.origin = null;\n        /**\n         * Whether the tab is currently active.\n         */\n        this.isActive = false;\n    }\n    /**\n     * Content for the tab label given by `<ng-template mat-tab-label>`.\n     * @return {?}\n     */\n    get templateLabel() { return this._templateLabel; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set templateLabel(value) {\n        // Only update the templateLabel via query if there is actually\n        // a MatTabLabel found. This works around an issue where a user may have\n        // manually set `templateLabel` during creation mode, which would then get clobbered\n        // by `undefined` when this query resolves.\n        if (value) {\n            this._templateLabel = value;\n        }\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get content() {\n        return this._contentPortal;\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n            this._stateChanges.next();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._contentPortal = new TemplatePortal(this._explicitContent || this._implicitContent, this._viewContainerRef);\n    }\n}\nMatTab.ɵfac = function MatTab_Factory(t) { return new (t || MatTab)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_TAB_GROUP, 8)); };\nMatTab.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTab, selectors: [[\"mat-tab\"]], contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabel, 5);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabContent, 7, TemplateRef);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateLabel = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._explicitContent = _t.first);\n    } }, viewQuery: function MatTab_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, 7);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._implicitContent = _t.first);\n    } }, inputs: { disabled: \"disabled\", textLabel: [\"label\", \"textLabel\"], ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"] }, exportAs: [\"matTab\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature, ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function MatTab_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, MatTab_ng_template_0_Template, 1, 0, \"ng-template\");\n    } }, encapsulation: 2 });\n/** @nocollapse */\nMatTab.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_TAB_GROUP,] }] }\n];\nMatTab.propDecorators = {\n    templateLabel: [{ type: ContentChild, args: [MatTabLabel,] }],\n    _explicitContent: [{ type: ContentChild, args: [MatTabContent, { read: TemplateRef, static: true },] }],\n    _implicitContent: [{ type: ViewChild, args: [TemplateRef, { static: true },] }],\n    textLabel: [{ type: Input, args: ['label',] }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTab, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab',\n                template: \"<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\\n    tab-group. -->\\n<ng-template><ng-content></ng-content></ng-template>\\n\",\n                inputs: ['disabled'],\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matTab'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_TAB_GROUP]\n            }] }]; }, { textLabel: [{\n            type: Input,\n            args: ['label']\n        }], templateLabel: [{\n            type: ContentChild,\n            args: [MatTabLabel]\n        }], _explicitContent: [{\n            type: ContentChild,\n            args: [MatTabContent, { read: TemplateRef, static: true }]\n        }], _implicitContent: [{\n            type: ViewChild,\n            args: [TemplateRef, { static: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTab.ngAcceptInputType_disabled;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._templateLabel;\n    /**\n     * Template provided in the tab content that will be used if present, used to enable lazy-loading\n     * @type {?}\n     */\n    MatTab.prototype._explicitContent;\n    /**\n     * Template inside the MatTab view that contains an `<ng-content>`.\n     * @type {?}\n     */\n    MatTab.prototype._implicitContent;\n    /**\n     * Plain text label for the tab, used when there is no template label.\n     * @type {?}\n     */\n    MatTab.prototype.textLabel;\n    /**\n     * Aria label for the tab.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabel;\n    /**\n     * Reference to the element that the tab is labelled by.\n     * Will be cleared if `aria-label` is set at the same time.\n     * @type {?}\n     */\n    MatTab.prototype.ariaLabelledby;\n    /**\n     * Portal that will be the hosted content of the tab\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._contentPortal;\n    /**\n     * Emits whenever the internal state of the tab changes.\n     * @type {?}\n     */\n    MatTab.prototype._stateChanges;\n    /**\n     * The relatively indexed position where 0 represents the center, negative is left, and positive\n     * represents the right.\n     * @type {?}\n     */\n    MatTab.prototype.position;\n    /**\n     * The initial relatively index origin of the tab if it was created and selected after there\n     * was already a selected tab. Provides context of what position the tab should originate from.\n     * @type {?}\n     */\n    MatTab.prototype.origin;\n    /**\n     * Whether the tab is currently active.\n     * @type {?}\n     */\n    MatTab.prototype.isActive;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTab.prototype._viewContainerRef;\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * \\@breaking-change 10.0.0\n     * @type {?}\n     */\n    MatTab.prototype._closestTabGroup;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the Material tabs.\n * \\@docs-private\n * @type {?}\n */\nconst matTabsAnimations = {\n    /**\n     * Animation translates a tab along the X axis.\n     */\n    translateTab: trigger('translateTab', [\n        // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n        state('center, void, left-origin-center, right-origin-center', style({ transform: 'none' })),\n        // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n        // in order to ensure that the element has a height before its state changes. This is\n        // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n        // not have a static height and is not rendered. See related issue: #9465\n        state('left', style({ transform: 'translate3d(-100%, 0, 0)', minHeight: '1px' })),\n        state('right', style({ transform: 'translate3d(100%, 0, 0)', minHeight: '1px' })),\n        transition('* => left, * => right, left => center, right => center', animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n        transition('void => left-origin-center', [\n            style({ transform: 'translate3d(-100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ]),\n        transition('void => right-origin-center', [\n            style({ transform: 'translate3d(100%, 0, 0)' }),\n            animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n        ])\n    ])\n};\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-body.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The portal host directive for the contents of the tab.\n * \\@docs-private\n */\nclass MatTabBodyPortal extends CdkPortalOutlet {\n    /**\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} _host\n     * @param {?=} _document\n     */\n    constructor(componentFactoryResolver, viewContainerRef, _host, \n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    _document) {\n        super(componentFactoryResolver, viewContainerRef, _document);\n        this._host = _host;\n        /**\n         * Subscription to events for when the tab body begins centering.\n         */\n        this._centeringSub = Subscription.EMPTY;\n        /**\n         * Subscription to events for when the tab body finishes leaving from center position.\n         */\n        this._leavingSub = Subscription.EMPTY;\n    }\n    /**\n     * Set initial visibility or set up subscription for changing visibility.\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        this._centeringSub = this._host._beforeCentering\n            .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n            .subscribe((/**\n         * @param {?} isCentering\n         * @return {?}\n         */\n        (isCentering) => {\n            if (isCentering && !this.hasAttached()) {\n                this.attach(this._host._content);\n            }\n        }));\n        this._leavingSub = this._host._afterLeavingCenter.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.detach();\n        }));\n    }\n    /**\n     * Clean up centering subscription.\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._centeringSub.unsubscribe();\n        this._leavingSub.unsubscribe();\n    }\n}\nMatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) { return new (t || MatTabBodyPortal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(forwardRef(( /**\n                 * @return {?}\n                 */() => MatTabBody))), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatTabBodyPortal.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabBodyPortal, selectors: [[\"\", \"matTabBodyHost\", \"\"]], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabBodyPortal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: MatTabBody, decorators: [{ type: Inject, args: [forwardRef((/**\n                     * @return {?}\n                     */\n                    () => MatTabBody)),] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBodyPortal, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabBodyHost]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ViewContainerRef }, { type: MatTabBody, decorators: [{\n                type: Inject,\n                args: [forwardRef(( /**\n                                     * @return {?}\n                                     */() => MatTabBody))]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Subscription to events for when the tab body begins centering.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._centeringSub;\n    /**\n     * Subscription to events for when the tab body finishes leaving from center position.\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._leavingSub;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatTabBodyPortal.prototype._host;\n}\n/**\n * Base class with all of the `MatTabBody` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabBodyBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(_elementRef, _dir, changeDetectorRef) {\n        this._elementRef = _elementRef;\n        this._dir = _dir;\n        /**\n         * Subscription to the directionality change observable.\n         */\n        this._dirChangeSubscription = Subscription.EMPTY;\n        /**\n         * Emits when an animation on the tab is complete.\n         */\n        this._translateTabComplete = new Subject();\n        /**\n         * Event emitted when the tab begins to animate towards the center as the active tab.\n         */\n        this._onCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._beforeCentering = new EventEmitter();\n        /**\n         * Event emitted before the centering of the tab begins.\n         */\n        this._afterLeavingCenter = new EventEmitter();\n        /**\n         * Event emitted when the tab completes its animation towards the center.\n         */\n        this._onCentered = new EventEmitter(true);\n        // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n        // anyway to prevent the animations module from throwing an error if the body is used on its own.\n        /**\n         * Duration for the tab's animation.\n         */\n        this.animationDuration = '500ms';\n        if (_dir) {\n            this._dirChangeSubscription = _dir.change.subscribe((/**\n             * @param {?} dir\n             * @return {?}\n             */\n            (dir) => {\n                this._computePositionAnimationState(dir);\n                changeDetectorRef.markForCheck();\n            }));\n        }\n        // Ensure that we get unique animation events, because the `.done` callback can get\n        // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n        this._translateTabComplete.pipe(distinctUntilChanged((/**\n         * @param {?} x\n         * @param {?} y\n         * @return {?}\n         */\n        (x, y) => {\n            return x.fromState === y.fromState && x.toState === y.toState;\n        }))).subscribe((/**\n         * @param {?} event\n         * @return {?}\n         */\n        event => {\n            // If the transition to the center is complete, emit an event.\n            if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n                this._onCentered.emit();\n            }\n            if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n                this._afterLeavingCenter.emit();\n            }\n        }));\n    }\n    /**\n     * The shifted index position of the tab body, where zero represents the active center tab.\n     * @param {?} position\n     * @return {?}\n     */\n    set position(position) {\n        this._positionIndex = position;\n        this._computePositionAnimationState();\n    }\n    /**\n     * After initialized, check if the content is centered and has an origin. If so, set the\n     * special position states that transition the tab from the left or right before centering.\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this._position == 'center' && this.origin != null) {\n            this._position = this._computePositionFromOrigin(this.origin);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._dirChangeSubscription.unsubscribe();\n        this._translateTabComplete.complete();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onTranslateTabStarted(event) {\n        /** @type {?} */\n        const isCentering = this._isCenterPosition(event.toState);\n        this._beforeCentering.emit(isCentering);\n        if (isCentering) {\n            this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n        }\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the provided position state is considered center, regardless of origin.\n     * @param {?} position\n     * @return {?}\n     */\n    _isCenterPosition(position) {\n        return position == 'center' ||\n            position == 'left-origin-center' ||\n            position == 'right-origin-center';\n    }\n    /**\n     * Computes the position state that will be used for the tab-body animation trigger.\n     * @private\n     * @param {?=} dir\n     * @return {?}\n     */\n    _computePositionAnimationState(dir = this._getLayoutDirection()) {\n        if (this._positionIndex < 0) {\n            this._position = dir == 'ltr' ? 'left' : 'right';\n        }\n        else if (this._positionIndex > 0) {\n            this._position = dir == 'ltr' ? 'right' : 'left';\n        }\n        else {\n            this._position = 'center';\n        }\n    }\n    /**\n     * Computes the position state based on the specified origin position. This is used if the\n     * tab is becoming visible immediately after creation.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _computePositionFromOrigin(origin) {\n        /** @type {?} */\n        const dir = this._getLayoutDirection();\n        if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n            return 'left-origin-center';\n        }\n        return 'right-origin-center';\n    }\n}\n_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) { return new (t || _MatTabBodyBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\n_MatTabBodyBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabBodyBase, inputs: { animationDuration: \"animationDuration\", position: \"position\", _content: [\"content\", \"_content\"], origin: \"origin\" }, outputs: { _onCentering: \"_onCentering\", _beforeCentering: \"_beforeCentering\", _afterLeavingCenter: \"_afterLeavingCenter\", _onCentered: \"_onCentered\" } });\n/** @nocollapse */\n_MatTabBodyBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\n_MatTabBodyBase.propDecorators = {\n    _onCentering: [{ type: Output }],\n    _beforeCentering: [{ type: Output }],\n    _afterLeavingCenter: [{ type: Output }],\n    _onCentered: [{ type: Output }],\n    _content: [{ type: Input, args: ['content',] }],\n    origin: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    position: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabBodyBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _onCentering: [{\n            type: Output\n        }], _beforeCentering: [{\n            type: Output\n        }], _afterLeavingCenter: [{\n            type: Output\n        }], _onCentered: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], position: [{\n            type: Input\n        }], _content: [{\n            type: Input,\n            args: ['content']\n        }], origin: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Current position of the tab-body in the tab-group. Zero means that the tab is visible.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._positionIndex;\n    /**\n     * Subscription to the directionality change observable.\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dirChangeSubscription;\n    /**\n     * Tab body position state. Used by the animation trigger for the current state.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._position;\n    /**\n     * Emits when an animation on the tab is complete.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._translateTabComplete;\n    /**\n     * Event emitted when the tab begins to animate towards the center as the active tab.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._beforeCentering;\n    /**\n     * Event emitted before the centering of the tab begins.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._afterLeavingCenter;\n    /**\n     * Event emitted when the tab completes its animation towards the center.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._onCentered;\n    /**\n     * The portal host inside of this container into which the tab body content will be loaded.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._portalHost;\n    /**\n     * The tab body content to display.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype._content;\n    /**\n     * Position that will be used when the tab is immediately becoming visible after creation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.origin;\n    /**\n     * Duration for the tab's animation.\n     * @type {?}\n     */\n    _MatTabBodyBase.prototype.animationDuration;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabBodyBase.prototype._dir;\n}\n/**\n * Wrapper for the contents of a tab.\n * \\@docs-private\n */\nclass MatTabBody extends _MatTabBodyBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} changeDetectorRef\n     */\n    constructor(elementRef, dir, changeDetectorRef) {\n        super(elementRef, dir, changeDetectorRef);\n    }\n}\nMatTabBody.ɵfac = function MatTabBody_Factory(t) { return new (t || MatTabBody)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatTabBody.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabBody, selectors: [[\"mat-tab-body\"]], viewQuery: function MatTabBody_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(PortalHostDirective, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._portalHost = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-body\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], decls: 3, vars: 6, consts: [[1, \"mat-tab-body-content\"], [\"content\", \"\"], [\"matTabBodyHost\", \"\"]], template: function MatTabBody_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"@translateTab.start\", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) { return ctx._onTranslateTabStarted($event); })(\"@translateTab.done\", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) { return ctx._translateTabComplete.next($event); });\n        ɵngcc0.ɵɵtemplate(2, MatTabBody_ng_template_2_Template, 0, 0, \"ng-template\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"@translateTab\", ɵngcc0.ɵɵpureFunction2(3, _c2, ctx._position, ɵngcc0.ɵɵpureFunction1(1, _c1, ctx.animationDuration)));\n    } }, directives: [MatTabBodyPortal], styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"], encapsulation: 2, data: { animation: [matTabsAnimations.translateTab] } });\n/** @nocollapse */\nMatTabBody.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ChangeDetectorRef }\n];\nMatTabBody.propDecorators = {\n    _portalHost: [{ type: ViewChild, args: [PortalHostDirective,] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabBody, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-body',\n                template: \"<div class=\\\"mat-tab-body-content\\\" #content\\n     [@translateTab]=\\\"{\\n        value: _position,\\n        params: {animationDuration: animationDuration}\\n     }\\\"\\n     (@translateTab.start)=\\\"_onTranslateTabStarted($event)\\\"\\n     (@translateTab.done)=\\\"_translateTabComplete.next($event)\\\">\\n  <ng-template matTabBodyHost></ng-template>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                animations: [matTabsAnimations.translateTab],\n                host: {\n                    'class': 'mat-tab-body'\n                },\n                styles: [\".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, { _portalHost: [{\n            type: ViewChild,\n            args: [PortalHostDirective]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabBody.prototype._portalHost;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-config.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Object that can be used to configure the default options for the tabs module.\n * @record\n */\nfunction MatTabsConfig() { }\nif (false) {\n    /**\n     * Duration for the tab animation. Must be a valid CSS value (e.g. 600ms).\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.disablePagination;\n    /**\n     * Whether the ink bar should fit its width to the size of the tab label content.\n     * This only applies to the MDC-based tabs.\n     * @type {?|undefined}\n     */\n    MatTabsConfig.prototype.fitInkBarToContent;\n}\n/**\n * Injection token that can be used to provide the default options the tabs module.\n * @type {?}\n */\nconst MAT_TABS_CONFIG = new InjectionToken('MAT_TABS_CONFIG');\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-group.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used to generate unique ID's for each tab component\n * @type {?}\n */\nlet nextId = 0;\n/**\n * A simple change event emitted on focus or selection changes.\n */\nclass MatTabChangeEvent {\n}\nif (false) {\n    /**\n     * Index of the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.index;\n    /**\n     * Reference to the currently-selected tab.\n     * @type {?}\n     */\n    MatTabChangeEvent.prototype.tab;\n}\n// Boilerplate for applying mixins to MatTabGroup.\n/**\n * \\@docs-private\n */\nclass MatTabGroupMixinBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatTabGroupMixinBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatTabGroupMixinBase = mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n/**\n * @record\n */\nfunction MatTabGroupBaseHeader() { }\nif (false) {\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype._alignInkBarToSelectedTab;\n    /** @type {?} */\n    MatTabGroupBaseHeader.prototype.focusIndex;\n}\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabGroupBase extends _MatTabGroupMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} _animationMode\n     */\n    constructor(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._animationMode = _animationMode;\n        /**\n         * All of the tabs that belong to the group.\n         */\n        this._tabs = new QueryList();\n        /**\n         * The tab index that should be selected after the content has been checked.\n         */\n        this._indexToSelect = 0;\n        /**\n         * Snapshot of the height of the tab body wrapper before another tab is activated.\n         */\n        this._tabBodyWrapperHeight = 0;\n        /**\n         * Subscription to tabs being added/removed.\n         */\n        this._tabsSubscription = Subscription.EMPTY;\n        /**\n         * Subscription to changes in the tab labels.\n         */\n        this._tabLabelSubscription = Subscription.EMPTY;\n        this._dynamicHeight = false;\n        this._selectedIndex = null;\n        /**\n         * Position of the tab header.\n         */\n        this.headerPosition = 'above';\n        /**\n         * Output to enable support for two-way binding on `[(selectedIndex)]`\n         */\n        this.selectedIndexChange = new EventEmitter();\n        /**\n         * Event emitted when focus has changed within a tab group.\n         */\n        this.focusChange = new EventEmitter();\n        /**\n         * Event emitted when the body animation has completed\n         */\n        this.animationDone = new EventEmitter();\n        /**\n         * Event emitted when the tab selection has changed.\n         */\n        this.selectedTabChange = new EventEmitter(true);\n        this._groupId = nextId++;\n        this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n            defaultConfig.animationDuration : '500ms';\n        this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n            defaultConfig.disablePagination : false;\n    }\n    /**\n     * Whether the tab group should grow to the size of the active tab.\n     * @return {?}\n     */\n    get dynamicHeight() { return this._dynamicHeight; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dynamicHeight(value) { this._dynamicHeight = coerceBooleanProperty(value); }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        this._indexToSelect = coerceNumberProperty(value, null);\n    }\n    /**\n     * Duration for the tab animation. Will be normalized to milliseconds if no units are set.\n     * @return {?}\n     */\n    get animationDuration() { return this._animationDuration; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set animationDuration(value) {\n        this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n    }\n    /**\n     * Background color of the tab group.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const nativeElement = this._elementRef.nativeElement;\n        nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            nativeElement.classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * After the content is checked, this component knows what tabs have been defined\n     * and what the selected index should be. This is where we can know exactly what position\n     * each tab should be in according to the new selected index, and additionally we know how\n     * a new selected tab should transition in (from the left or right).\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n        // the amount of tabs changes before the actual change detection runs.\n        /** @type {?} */\n        const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n        // If there is a change in selected index, emit a change event. Should not trigger if\n        // the selected index has not yet been initialized.\n        if (this._selectedIndex != indexToSelect) {\n            /** @type {?} */\n            const isFirstRun = this._selectedIndex == null;\n            if (!isFirstRun) {\n                this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n            }\n            // Changing these values after change detection has run\n            // since the checked content may contain references to them.\n            Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._tabs.forEach((/**\n                 * @param {?} tab\n                 * @param {?} index\n                 * @return {?}\n                 */\n                (tab, index) => tab.isActive = index === indexToSelect));\n                if (!isFirstRun) {\n                    this.selectedIndexChange.emit(indexToSelect);\n                }\n            }));\n        }\n        // Setup the position for each tab and optionally setup an origin on the next selected tab.\n        this._tabs.forEach((/**\n         * @param {?} tab\n         * @param {?} index\n         * @return {?}\n         */\n        (tab, index) => {\n            tab.position = index - indexToSelect;\n            // If there is already a selected tab, then set up an origin for the next selected tab\n            // if it doesn't have one already.\n            if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n                tab.origin = indexToSelect - this._selectedIndex;\n            }\n        }));\n        if (this._selectedIndex !== indexToSelect) {\n            this._selectedIndex = indexToSelect;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._subscribeToAllTabChanges();\n        this._subscribeToTabLabels();\n        // Subscribe to changes in the amount of tabs, in order to be\n        // able to re-render the content as new tabs are added or removed.\n        this._tabsSubscription = this._tabs.changes.subscribe((/**\n         * @return {?}\n         */\n        () => {\n            /** @type {?} */\n            const indexToSelect = this._clampTabIndex(this._indexToSelect);\n            // Maintain the previously-selected tab if a new tab is added or removed and there is no\n            // explicit change that selects a different tab.\n            if (indexToSelect === this._selectedIndex) {\n                /** @type {?} */\n                const tabs = this._tabs.toArray();\n                for (let i = 0; i < tabs.length; i++) {\n                    if (tabs[i].isActive) {\n                        // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n                        // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n                        // adding a tab within the `selectedIndexChange` event.\n                        this._indexToSelect = this._selectedIndex = i;\n                        break;\n                    }\n                }\n            }\n            this._changeDetectorRef.markForCheck();\n        }));\n    }\n    /**\n     * Listens to changes in all of the tabs.\n     * @private\n     * @return {?}\n     */\n    _subscribeToAllTabChanges() {\n        // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n        // some that are inside of nested tab groups. We filter them out manually by checking that\n        // the closest group to the tab is the current one.\n        this._allTabs.changes\n            .pipe(startWith(this._allTabs))\n            .subscribe((/**\n         * @param {?} tabs\n         * @return {?}\n         */\n        (tabs) => {\n            this._tabs.reset(tabs.filter((/**\n             * @param {?} tab\n             * @return {?}\n             */\n            tab => {\n                // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n                // once it becomes a required parameter in MatTab.\n                return !tab._closestTabGroup || tab._closestTabGroup === this;\n            })));\n            this._tabs.notifyOnChanges();\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._tabs.destroy();\n        this._tabsSubscription.unsubscribe();\n        this._tabLabelSubscription.unsubscribe();\n    }\n    /**\n     * Re-aligns the ink bar to the selected tab element.\n     * @return {?}\n     */\n    realignInkBar() {\n        if (this._tabHeader) {\n            this._tabHeader._alignInkBarToSelectedTab();\n        }\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _focusChanged(index) {\n        this.focusChange.emit(this._createChangeEvent(index));\n    }\n    /**\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createChangeEvent(index) {\n        /** @type {?} */\n        const event = new MatTabChangeEvent;\n        event.index = index;\n        if (this._tabs && this._tabs.length) {\n            event.tab = this._tabs.toArray()[index];\n        }\n        return event;\n    }\n    /**\n     * Subscribes to changes in the tab labels. This is needed, because the \\@Input for the label is\n     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n     * binding to be updated, we need to subscribe to changes in it and trigger change detection\n     * manually.\n     * @private\n     * @return {?}\n     */\n    _subscribeToTabLabels() {\n        if (this._tabLabelSubscription) {\n            this._tabLabelSubscription.unsubscribe();\n        }\n        this._tabLabelSubscription = merge(...this._tabs.map((/**\n         * @param {?} tab\n         * @return {?}\n         */\n        tab => tab._stateChanges)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n    }\n    /**\n     * Clamps the given index to the bounds of 0 and the tabs length.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _clampTabIndex(index) {\n        // Note the `|| 0`, which ensures that values like NaN can't get through\n        // and which would otherwise throw the component into an infinite loop\n        // (since Math.max(NaN, 0) === NaN).\n        return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n    }\n    /**\n     * Returns a unique id for each tab label element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabLabelId(i) {\n        return `mat-tab-label-${this._groupId}-${i}`;\n    }\n    /**\n     * Returns a unique id for each tab content element\n     * @param {?} i\n     * @return {?}\n     */\n    _getTabContentId(i) {\n        return `mat-tab-content-${this._groupId}-${i}`;\n    }\n    /**\n     * Sets the height of the body wrapper to the height of the activating tab if dynamic\n     * height property is true.\n     * @param {?} tabHeight\n     * @return {?}\n     */\n    _setTabBodyWrapperHeight(tabHeight) {\n        if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {\n            return;\n        }\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n        // This conditional forces the browser to paint the height so that\n        // the animation to the new height can have an origin.\n        if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n            wrapper.style.height = tabHeight + 'px';\n        }\n    }\n    /**\n     * Removes the height of the tab body wrapper.\n     * @return {?}\n     */\n    _removeTabBodyWrapperHeight() {\n        /** @type {?} */\n        const wrapper = this._tabBodyWrapper.nativeElement;\n        this._tabBodyWrapperHeight = wrapper.clientHeight;\n        wrapper.style.height = '';\n        this.animationDone.emit();\n    }\n    /**\n     * Handle click events, setting new selected index if appropriate.\n     * @param {?} tab\n     * @param {?} tabHeader\n     * @param {?} index\n     * @return {?}\n     */\n    _handleClick(tab, tabHeader, index) {\n        if (!tab.disabled) {\n            this.selectedIndex = tabHeader.focusIndex = index;\n        }\n    }\n    /**\n     * Retrieves the tabindex for the tab.\n     * @param {?} tab\n     * @param {?} idx\n     * @return {?}\n     */\n    _getTabIndex(tab, idx) {\n        if (tab.disabled) {\n            return null;\n        }\n        return this.selectedIndex === idx ? 0 : -1;\n    }\n}\n_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) { return new (t || _MatTabGroupBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabGroupBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabGroupBase, inputs: { headerPosition: \"headerPosition\", animationDuration: \"animationDuration\", disablePagination: \"disablePagination\", dynamicHeight: \"dynamicHeight\", selectedIndex: \"selectedIndex\", backgroundColor: \"backgroundColor\" }, outputs: { selectedIndexChange: \"selectedIndexChange\", focusChange: \"focusChange\", animationDone: \"animationDone\", selectedTabChange: \"selectedTabChange\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabGroupBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabGroupBase.propDecorators = {\n    dynamicHeight: [{ type: Input }],\n    selectedIndex: [{ type: Input }],\n    headerPosition: [{ type: Input }],\n    animationDuration: [{ type: Input }],\n    disablePagination: [{ type: Input }],\n    backgroundColor: [{ type: Input }],\n    selectedIndexChange: [{ type: Output }],\n    focusChange: [{ type: Output }],\n    animationDone: [{ type: Output }],\n    selectedTabChange: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabGroupBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { headerPosition: [{\n            type: Input\n        }], selectedIndexChange: [{\n            type: Output\n        }], focusChange: [{\n            type: Output\n        }], animationDone: [{\n            type: Output\n        }], selectedTabChange: [{\n            type: Output\n        }], animationDuration: [{\n            type: Input\n        }], disablePagination: [{\n            type: Input\n        }], dynamicHeight: [{\n            type: Input\n        }], selectedIndex: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_dynamicHeight;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_animationDuration;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    _MatTabGroupBase.ngAcceptInputType_disableRipple;\n    /**\n     * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n     * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._allTabs;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabBodyWrapper;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._tabHeader;\n    /**\n     * All of the tabs that belong to the group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype._tabs;\n    /**\n     * The tab index that should be selected after the content has been checked.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._indexToSelect;\n    /**\n     * Snapshot of the height of the tab body wrapper before another tab is activated.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabBodyWrapperHeight;\n    /**\n     * Subscription to tabs being added/removed.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabsSubscription;\n    /**\n     * Subscription to changes in the tab labels.\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._tabLabelSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._dynamicHeight;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._selectedIndex;\n    /**\n     * Position of the tab header.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.headerPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._animationDuration;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._backgroundColor;\n    /**\n     * Output to enable support for two-way binding on `[(selectedIndex)]`\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedIndexChange;\n    /**\n     * Event emitted when focus has changed within a tab group.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.focusChange;\n    /**\n     * Event emitted when the body animation has completed\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.animationDone;\n    /**\n     * Event emitted when the tab selection has changed.\n     * @type {?}\n     */\n    _MatTabGroupBase.prototype.selectedTabChange;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabGroupBase.prototype._groupId;\n    /**\n     * @type {?}\n     * @protected\n     */\n    _MatTabGroupBase.prototype._changeDetectorRef;\n    /** @type {?} */\n    _MatTabGroupBase.prototype._animationMode;\n}\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\nclass MatTabGroup extends _MatTabGroupBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?=} defaultConfig\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, defaultConfig, animationMode) {\n        super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n    }\n}\nMatTabGroup.ɵfac = function MatTabGroup_Factory(t) { return new (t || MatTabGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(MAT_TABS_CONFIG, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabGroup, selectors: [[\"mat-tab-group\"]], contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTab, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allTabs = _t);\n    } }, viewQuery: function MatTabGroup_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c3, 5);\n        ɵngcc0.ɵɵviewQuery(_c4, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabBodyWrapper = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabHeader = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-group\"], hostVars: 4, hostBindings: function MatTabGroup_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-group-dynamic-height\", ctx.dynamicHeight)(\"mat-tab-group-inverted-header\", ctx.headerPosition === \"below\");\n    } }, inputs: { color: \"color\", disableRipple: \"disableRipple\" }, exportAs: [\"matTabGroup\"], features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: MAT_TAB_GROUP,\n                useExisting: MatTabGroup\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], decls: 6, vars: 7, consts: [[3, \"selectedIndex\", \"disableRipple\", \"disablePagination\", \"indexFocused\", \"selectFocusedIndex\"], [\"tabHeader\", \"\"], [\"class\", \"mat-tab-label mat-focus-indicator\", \"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 3, \"id\", \"mat-tab-label-active\", \"disabled\", \"matRippleDisabled\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"mat-tab-body-wrapper\"], [\"tabBodyWrapper\", \"\"], [\"role\", \"tabpanel\", 3, \"id\", \"mat-tab-body-active\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\", 4, \"ngFor\", \"ngForOf\"], [\"role\", \"tab\", \"matTabLabelWrapper\", \"\", \"mat-ripple\", \"\", \"cdkMonitorElementFocus\", \"\", 1, \"mat-tab-label\", \"mat-focus-indicator\", 3, \"id\", \"disabled\", \"matRippleDisabled\", \"click\"], [1, \"mat-tab-label-content\"], [3, \"ngIf\"], [3, \"cdkPortalOutlet\"], [\"role\", \"tabpanel\", 3, \"id\", \"content\", \"position\", \"origin\", \"animationDuration\", \"_onCentered\", \"_onCentering\"]], template: function MatTabGroup_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"mat-tab-header\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"indexFocused\", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) { return ctx._focusChanged($event); })(\"selectFocusedIndex\", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) { return ctx.selectedIndex = $event; });\n        ɵngcc0.ɵɵtemplate(2, MatTabGroup_div_2_Template, 4, 14, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵtemplate(5, MatTabGroup_mat_tab_body_5_Template, 1, 8, \"mat-tab-body\", 5);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"selectedIndex\", ctx.selectedIndex || 0)(\"disableRipple\", ctx.disableRipple)(\"disablePagination\", ctx.disablePagination);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx._tabs);\n    } }, directives: function () { return [MatTabHeader, ɵngcc2.NgForOf, MatTabLabelWrapper, ɵngcc3.MatRipple, ɵngcc4.CdkMonitorFocus, ɵngcc2.NgIf, ɵngcc5.CdkPortalOutlet, MatTabBody]; }, styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabGroup.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_TABS_CONFIG,] }, { type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabGroup.propDecorators = {\n    _allTabs: [{ type: ContentChildren, args: [MatTab, { descendants: true },] }],\n    _tabBodyWrapper: [{ type: ViewChild, args: ['tabBodyWrapper',] }],\n    _tabHeader: [{ type: ViewChild, args: ['tabHeader',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabGroup, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-group',\n                exportAs: 'matTabGroup',\n                template: \"<mat-tab-header #tabHeader\\n               [selectedIndex]=\\\"selectedIndex || 0\\\"\\n               [disableRipple]=\\\"disableRipple\\\"\\n               [disablePagination]=\\\"disablePagination\\\"\\n               (indexFocused)=\\\"_focusChanged($event)\\\"\\n               (selectFocusedIndex)=\\\"selectedIndex = $event\\\">\\n  <div class=\\\"mat-tab-label mat-focus-indicator\\\" role=\\\"tab\\\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\\n       *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n       [id]=\\\"_getTabLabelId(i)\\\"\\n       [attr.tabIndex]=\\\"_getTabIndex(tab, i)\\\"\\n       [attr.aria-posinset]=\\\"i + 1\\\"\\n       [attr.aria-setsize]=\\\"_tabs.length\\\"\\n       [attr.aria-controls]=\\\"_getTabContentId(i)\\\"\\n       [attr.aria-selected]=\\\"selectedIndex == i\\\"\\n       [attr.aria-label]=\\\"tab.ariaLabel || null\\\"\\n       [attr.aria-labelledby]=\\\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\\\"\\n       [class.mat-tab-label-active]=\\\"selectedIndex == i\\\"\\n       [disabled]=\\\"tab.disabled\\\"\\n       [matRippleDisabled]=\\\"tab.disabled || disableRipple\\\"\\n       (click)=\\\"_handleClick(tab, tabHeader, i)\\\">\\n\\n\\n    <div class=\\\"mat-tab-label-content\\\">\\n      <!-- If there is a label template, use it. -->\\n      <ng-template [ngIf]=\\\"tab.templateLabel\\\">\\n        <ng-template [cdkPortalOutlet]=\\\"tab.templateLabel\\\"></ng-template>\\n      </ng-template>\\n\\n      <!-- If there is not a label template, fall back to the text label. -->\\n      <ng-template [ngIf]=\\\"!tab.templateLabel\\\">{{tab.textLabel}}</ng-template>\\n    </div>\\n  </div>\\n</mat-tab-header>\\n\\n<div\\n  class=\\\"mat-tab-body-wrapper\\\"\\n  [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n  #tabBodyWrapper>\\n  <mat-tab-body role=\\\"tabpanel\\\"\\n               *ngFor=\\\"let tab of _tabs; let i = index\\\"\\n               [id]=\\\"_getTabContentId(i)\\\"\\n               [attr.aria-labelledby]=\\\"_getTabLabelId(i)\\\"\\n               [class.mat-tab-body-active]=\\\"selectedIndex == i\\\"\\n               [content]=\\\"tab.content!\\\"\\n               [position]=\\\"tab.position!\\\"\\n               [origin]=\\\"tab.origin\\\"\\n               [animationDuration]=\\\"animationDuration\\\"\\n               (_onCentered)=\\\"_removeTabBodyWrapperHeight()\\\"\\n               (_onCentering)=\\\"_setTabBodyWrapperHeight($event)\\\">\\n  </mat-tab-body>\\n</div>\\n\",\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                inputs: ['color', 'disableRipple'],\n                providers: [{\n                        provide: MAT_TAB_GROUP,\n                        useExisting: MatTabGroup\n                    }],\n                host: {\n                    'class': 'mat-tab-group',\n                    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n                    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"'\n                },\n                styles: [\".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_TABS_CONFIG]\n            }, {\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _allTabs: [{\n            type: ContentChildren,\n            args: [MatTab, { descendants: true }]\n        }], _tabBodyWrapper: [{\n            type: ViewChild,\n            args: ['tabBodyWrapper']\n        }], _tabHeader: [{\n            type: ViewChild,\n            args: ['tabHeader']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabGroup.prototype._allTabs;\n    /** @type {?} */\n    MatTabGroup.prototype._tabBodyWrapper;\n    /** @type {?} */\n    MatTabGroup.prototype._tabHeader;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-label-wrapper.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/**\n * \\@docs-private\n */\nclass MatTabLabelWrapperBase {\n}\n/** @type {?} */\nconst _MatTabLabelWrapperMixinBase = mixinDisabled(MatTabLabelWrapperBase);\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * \\@docs-private\n */\nclass MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        super();\n        this.elementRef = elementRef;\n    }\n    /**\n     * Sets focus on the wrapper element\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetLeft() {\n        return this.elementRef.nativeElement.offsetLeft;\n    }\n    /**\n     * @return {?}\n     */\n    getOffsetWidth() {\n        return this.elementRef.nativeElement.offsetWidth;\n    }\n}\nMatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) { return new (t || MatTabLabelWrapper)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nMatTabLabelWrapper.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLabelWrapper, selectors: [[\"\", \"matTabLabelWrapper\", \"\"]], hostVars: 3, hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-disabled\", !!ctx.disabled);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLabelWrapper.ctorParameters = () => [\n    { type: ElementRef }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLabelWrapper, [{\n        type: Directive,\n        args: [{\n                selector: '[matTabLabelWrapper]',\n                inputs: ['disabled'],\n                host: {\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[attr.aria-disabled]': '!!disabled'\n                }\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();\nif (false) {\n    /** @type {?} */\n    MatTabLabelWrapper.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatTabLabelWrapper.prototype.elementRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/paginated-tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Config used to bind passive event listeners\n * @type {?}\n */\nconst passiveEventListenerOptions = (/** @type {?} */ (normalizePassiveListenerOptions({ passive: true })));\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n * @type {?}\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n * @type {?}\n */\nconst HEADER_SCROLL_DELAY = 650;\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n * @type {?}\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n/**\n * Base class for a tab header that supported pagination.\n * \\@docs-private\n * @abstract\n */\nclass MatPaginatedTabHeader {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} _viewportRuler\n     * @param {?} _dir\n     * @param {?} _ngZone\n     * @param {?=} _platform\n     * @param {?=} _animationMode\n     */\n    constructor(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone, _platform, _animationMode) {\n        this._elementRef = _elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._viewportRuler = _viewportRuler;\n        this._dir = _dir;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._animationMode = _animationMode;\n        /**\n         * The distance in pixels that the tab labels should be translated to the left.\n         */\n        this._scrollDistance = 0;\n        /**\n         * Whether the header should scroll to the selected index after the view has been checked.\n         */\n        this._selectedIndexChanged = false;\n        /**\n         * Emits when the component is destroyed.\n         */\n        this._destroyed = new Subject();\n        /**\n         * Whether the controls for pagination should be displayed\n         */\n        this._showPaginationControls = false;\n        /**\n         * Whether the tab list can be scrolled more towards the end of the tab label list.\n         */\n        this._disableScrollAfter = true;\n        /**\n         * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n         */\n        this._disableScrollBefore = true;\n        /**\n         * Stream that will stop the automated scrolling.\n         */\n        this._stopScrolling = new Subject();\n        /**\n         * Whether pagination should be disabled. This can be used to avoid unnecessary\n         * layout recalculations if it's known that pagination won't be required.\n         */\n        this.disablePagination = false;\n        this._selectedIndex = 0;\n        /**\n         * Event emitted when the option is selected.\n         */\n        this.selectFocusedIndex = new EventEmitter();\n        /**\n         * Event emitted when a label is focused.\n         */\n        this.indexFocused = new EventEmitter();\n        // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n        _ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            fromEvent(_elementRef.nativeElement, 'mouseleave')\n                .pipe(takeUntil(this._destroyed))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this._stopInterval();\n            }));\n        }));\n    }\n    /**\n     * The index of the active tab.\n     * @return {?}\n     */\n    get selectedIndex() { return this._selectedIndex; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set selectedIndex(value) {\n        value = coerceNumberProperty(value);\n        if (this._selectedIndex != value) {\n            this._selectedIndexChanged = true;\n            this._selectedIndex = value;\n            if (this._keyManager) {\n                this._keyManager.updateActiveItem(value);\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        // We need to handle these events manually, because we want to bind passive event listeners.\n        fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('before');\n        }));\n        fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._handlePaginatorPress('after');\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        /** @type {?} */\n        const dirChange = this._dir ? this._dir.change : of(null);\n        /** @type {?} */\n        const resize = this._viewportRuler.change(150);\n        /** @type {?} */\n        const realign = (/**\n         * @return {?}\n         */\n        () => {\n            this.updatePagination();\n            this._alignInkBarToSelectedTab();\n        });\n        this._keyManager = new FocusKeyManager(this._items)\n            .withHorizontalOrientation(this._getLayoutDirection())\n            .withWrap();\n        this._keyManager.updateActiveItem(0);\n        // Defer the first call in order to allow for slower browsers to lay out the elements.\n        // This helps in cases where the user lands directly on a page with paginated tabs.\n        typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n        // On dir change or window resize, realign the ink bar and update the orientation of\n        // the key manager if the direction has changed.\n        merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            // We need to defer this to give the browser some time to recalculate the element dimensions.\n            Promise.resolve().then(realign);\n            this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n        }));\n        // If there is a change in the focus key manager we need to emit the `indexFocused`\n        // event in order to provide a public event that notifies about focus changes. Also we realign\n        // the tabs container by scrolling the new focused tab into the visible section.\n        this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} newFocusIndex\n         * @return {?}\n         */\n        newFocusIndex => {\n            this.indexFocused.emit(newFocusIndex);\n            this._setTabFocus(newFocusIndex);\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // If the number of tab labels have changed, check if scrolling should be enabled\n        if (this._tabLabelCount != this._items.length) {\n            this.updatePagination();\n            this._tabLabelCount = this._items.length;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the selected index has changed, scroll to the label and check if the scrolling controls\n        // should be disabled.\n        if (this._selectedIndexChanged) {\n            this._scrollToLabel(this._selectedIndex);\n            this._checkScrollingControls();\n            this._alignInkBarToSelectedTab();\n            this._selectedIndexChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n        // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n        // then translate the header to reflect this.\n        if (this._scrollDistanceChanged) {\n            this._updateTabScrollPosition();\n            this._scrollDistanceChanged = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._stopScrolling.complete();\n    }\n    /**\n     * Handles keyboard events on the header.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        // We don't handle any key bindings with a modifier key.\n        if (hasModifierKey(event)) {\n            return;\n        }\n        switch (event.keyCode) {\n            case HOME:\n                this._keyManager.setFirstItemActive();\n                event.preventDefault();\n                break;\n            case END:\n                this._keyManager.setLastItemActive();\n                event.preventDefault();\n                break;\n            case ENTER:\n            case SPACE:\n                if (this.focusIndex !== this.selectedIndex) {\n                    this.selectFocusedIndex.emit(this.focusIndex);\n                    this._itemSelected(event);\n                }\n                break;\n            default:\n                this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Callback for when the MutationObserver detects that the content has changed.\n     * @return {?}\n     */\n    _onContentChanges() {\n        /** @type {?} */\n        const textContent = this._elementRef.nativeElement.textContent;\n        // We need to diff the text content of the header, because the MutationObserver callback\n        // will fire even if the text content didn't change which is inefficient and is prone\n        // to infinite loops if a poorly constructed expression is passed in (see #14249).\n        if (textContent !== this._currentTextContent) {\n            this._currentTextContent = textContent || '';\n            // The content observer runs outside the `NgZone` by default, which\n            // means that we need to bring the callback back in ourselves.\n            this._ngZone.run((/**\n             * @return {?}\n             */\n            () => {\n                this.updatePagination();\n                this._alignInkBarToSelectedTab();\n                this._changeDetectorRef.markForCheck();\n            }));\n        }\n    }\n    /**\n     * Updates the view whether pagination should be enabled or not.\n     *\n     * WARNING: Calling this method can be very costly in terms of performance. It should be called\n     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n     * page.\n     * @return {?}\n     */\n    updatePagination() {\n        this._checkPaginationEnabled();\n        this._checkScrollingControls();\n        this._updateTabScrollPosition();\n    }\n    /**\n     * Tracks which element has focus; used for keyboard navigation\n     * @return {?}\n     */\n    get focusIndex() {\n        return this._keyManager ? (/** @type {?} */ (this._keyManager.activeItemIndex)) : 0;\n    }\n    /**\n     * When the focus index is set, we must manually send focus to the correct label\n     * @param {?} value\n     * @return {?}\n     */\n    set focusIndex(value) {\n        if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n            return;\n        }\n        this._keyManager.setActiveItem(value);\n    }\n    /**\n     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n     * providing a valid index and return true.\n     * @param {?} index\n     * @return {?}\n     */\n    _isValidIndex(index) {\n        if (!this._items) {\n            return true;\n        }\n        /** @type {?} */\n        const tab = this._items ? this._items.toArray()[index] : null;\n        return !!tab && !tab.disabled;\n    }\n    /**\n     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n     * scrolling is enabled.\n     * @param {?} tabIndex\n     * @return {?}\n     */\n    _setTabFocus(tabIndex) {\n        if (this._showPaginationControls) {\n            this._scrollToLabel(tabIndex);\n        }\n        if (this._items && this._items.length) {\n            this._items.toArray()[tabIndex].focus();\n            // Do not let the browser manage scrolling to focus the element, this will be handled\n            // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n            // should be the full width minus the offset width.\n            /** @type {?} */\n            const containerEl = this._tabListContainer.nativeElement;\n            /** @type {?} */\n            const dir = this._getLayoutDirection();\n            if (dir == 'ltr') {\n                containerEl.scrollLeft = 0;\n            }\n            else {\n                containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n            }\n        }\n    }\n    /**\n     * The layout direction of the containing app.\n     * @return {?}\n     */\n    _getLayoutDirection() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Performs the CSS transformation on the tab list that will cause the list to scroll.\n     * @return {?}\n     */\n    _updateTabScrollPosition() {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const scrollDistance = this.scrollDistance;\n        /** @type {?} */\n        const platform = this._platform;\n        /** @type {?} */\n        const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n        // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n        // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n        // and ripples will exceed the boundaries of the visible tab bar.\n        // See: https://github.com/angular/components/issues/10276\n        // We round the `transform` here, because transforms with sub-pixel precision cause some\n        // browsers to blur the content of the element.\n        this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n        // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n        // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n        // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n        // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n        // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n        if (platform && (platform.TRIDENT || platform.EDGE)) {\n            this._tabListContainer.nativeElement.scrollLeft = 0;\n        }\n    }\n    /**\n     * Sets the distance in pixels that the tab header should be transformed in the X-axis.\n     * @return {?}\n     */\n    get scrollDistance() { return this._scrollDistance; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set scrollDistance(value) {\n        this._scrollTo(value);\n    }\n    /**\n     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n     * the end of the list, respectively). The distance to scroll is computed to be a third of the\n     * length of the tab list view window.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} direction\n     * @return {?}\n     */\n    _scrollHeader(direction) {\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        // Move the scroll distance one-third the length of the tab list's viewport.\n        /** @type {?} */\n        const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n        return this._scrollTo(this._scrollDistance + scrollAmount);\n    }\n    /**\n     * Handles click events on the pagination arrows.\n     * @param {?} direction\n     * @return {?}\n     */\n    _handlePaginatorClick(direction) {\n        this._stopInterval();\n        this._scrollHeader(direction);\n    }\n    /**\n     * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @param {?} labelIndex\n     * @return {?}\n     */\n    _scrollToLabel(labelIndex) {\n        if (this.disablePagination) {\n            return;\n        }\n        /** @type {?} */\n        const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n        if (!selectedLabel) {\n            return;\n        }\n        // The view length is the visible width of the tab labels.\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        const { offsetLeft, offsetWidth } = selectedLabel.elementRef.nativeElement;\n        /** @type {?} */\n        let labelBeforePos;\n        /** @type {?} */\n        let labelAfterPos;\n        if (this._getLayoutDirection() == 'ltr') {\n            labelBeforePos = offsetLeft;\n            labelAfterPos = labelBeforePos + offsetWidth;\n        }\n        else {\n            labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n            labelBeforePos = labelAfterPos - offsetWidth;\n        }\n        /** @type {?} */\n        const beforeVisiblePos = this.scrollDistance;\n        /** @type {?} */\n        const afterVisiblePos = this.scrollDistance + viewLength;\n        if (labelBeforePos < beforeVisiblePos) {\n            // Scroll header to move label to the before direction\n            this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n        }\n        else if (labelAfterPos > afterVisiblePos) {\n            // Scroll header to move label to the after direction\n            this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n        }\n    }\n    /**\n     * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n     * tab list is wider than the size of the header container, then the pagination controls should\n     * be shown.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkPaginationEnabled() {\n        if (this.disablePagination) {\n            this._showPaginationControls = false;\n        }\n        else {\n            /** @type {?} */\n            const isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n            if (!isEnabled) {\n                this.scrollDistance = 0;\n            }\n            if (isEnabled !== this._showPaginationControls) {\n                this._changeDetectorRef.markForCheck();\n            }\n            this._showPaginationControls = isEnabled;\n        }\n    }\n    /**\n     * Evaluate whether the before and after controls should be enabled or disabled.\n     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n     * before button. If the header is at the end of the list (scroll distance is equal to the\n     * maximum distance we can scroll), then disable the after button.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _checkScrollingControls() {\n        if (this.disablePagination) {\n            this._disableScrollAfter = this._disableScrollBefore = true;\n        }\n        else {\n            // Check if the pagination arrows should be activated.\n            this._disableScrollBefore = this.scrollDistance == 0;\n            this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n     * is equal to the difference in width between the tab list container and tab header container.\n     *\n     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n     * should be called sparingly.\n     * @return {?}\n     */\n    _getMaxScrollDistance() {\n        /** @type {?} */\n        const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n        /** @type {?} */\n        const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n        return (lengthOfTabList - viewLength) || 0;\n    }\n    /**\n     * Tells the ink-bar to align itself to the current label wrapper\n     * @return {?}\n     */\n    _alignInkBarToSelectedTab() {\n        /** @type {?} */\n        const selectedItem = this._items && this._items.length ?\n            this._items.toArray()[this.selectedIndex] : null;\n        /** @type {?} */\n        const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n        if (selectedLabelWrapper) {\n            this._inkBar.alignToElement(selectedLabelWrapper);\n        }\n        else {\n            this._inkBar.hide();\n        }\n    }\n    /**\n     * Stops the currently-running paginator interval.\n     * @return {?}\n     */\n    _stopInterval() {\n        this._stopScrolling.next();\n    }\n    /**\n     * Handles the user pressing down on one of the paginators.\n     * Starts scrolling the header after a certain amount of time.\n     * @param {?} direction In which direction the paginator should be scrolled.\n     * @param {?=} mouseEvent\n     * @return {?}\n     */\n    _handlePaginatorPress(direction, mouseEvent) {\n        // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n        // null check the `button`, but we do it so we don't break tests that use fake events.\n        if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n            return;\n        }\n        // Avoid overlapping timers.\n        this._stopInterval();\n        // Start a timer after the delay and keep firing based on the interval.\n        timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n            // Keep the timer going until something tells it to stop or the component is destroyed.\n            .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            const { maxScrollDistance, distance } = this._scrollHeader(direction);\n            // Stop the timer if we've reached the start or the end.\n            if (distance === 0 || distance >= maxScrollDistance) {\n                this._stopInterval();\n            }\n        }));\n    }\n    /**\n     * Scrolls the header to a given position.\n     * @private\n     * @param {?} position Position to which to scroll.\n     * @return {?} Information on the current scroll distance and the maximum.\n     */\n    _scrollTo(position) {\n        if (this.disablePagination) {\n            return { maxScrollDistance: 0, distance: 0 };\n        }\n        /** @type {?} */\n        const maxScrollDistance = this._getMaxScrollDistance();\n        this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n        // Mark that the scroll distance has changed so that after the view is checked, the CSS\n        // transformation can move the header.\n        this._scrollDistanceChanged = true;\n        this._checkScrollingControls();\n        return { maxScrollDistance, distance: this._scrollDistance };\n    }\n}\nMatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) { return new (t || MatPaginatedTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatPaginatedTabHeader.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatPaginatedTabHeader, inputs: { disablePagination: \"disablePagination\" } });\n/** @nocollapse */\nMatPaginatedTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatPaginatedTabHeader.propDecorators = {\n    disablePagination: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatPaginatedTabHeader, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disablePagination: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatPaginatedTabHeader.ngAcceptInputType_selectedIndex;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._items;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._previousPaginator;\n    /**\n     * The distance in pixels that the tab labels should be translated to the left.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistance;\n    /**\n     * Whether the header should scroll to the selected index after the view has been checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndexChanged;\n    /**\n     * Emits when the component is destroyed.\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._destroyed;\n    /**\n     * Whether the controls for pagination should be displayed\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._showPaginationControls;\n    /**\n     * Whether the tab list can be scrolled more towards the end of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollAfter;\n    /**\n     * Whether the tab list can be scrolled more towards the beginning of the tab label list.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype._disableScrollBefore;\n    /**\n     * The number of tab labels that are displayed on the header. When this changes, the header\n     * should re-evaluate the scroll position.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._tabLabelCount;\n    /**\n     * Whether the scroll distance has changed and should be applied after the view is checked.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._scrollDistanceChanged;\n    /**\n     * Used to manage focus between the tabs.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._keyManager;\n    /**\n     * Cached text content of the header.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._currentTextContent;\n    /**\n     * Stream that will stop the automated scrolling.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._stopScrolling;\n    /**\n     * Whether pagination should be disabled. This can be used to avoid unnecessary\n     * layout recalculations if it's known that pagination won't be required.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.disablePagination;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._selectedIndex;\n    /**\n     * Event emitted when the option is selected.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.selectFocusedIndex;\n    /**\n     * Event emitted when a label is focused.\n     * @type {?}\n     */\n    MatPaginatedTabHeader.prototype.indexFocused;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    MatPaginatedTabHeader.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._viewportRuler;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._ngZone;\n    /**\n     * @deprecated \\@breaking-change 9.0.0 `_platform` and `_animationMode`\n     * parameters to become required.\n     * @type {?}\n     * @private\n     */\n    MatPaginatedTabHeader.prototype._platform;\n    /** @type {?} */\n    MatPaginatedTabHeader.prototype._animationMode;\n    /**\n     * Called when the user has selected an item via the keyboard.\n     * @abstract\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    MatPaginatedTabHeader.prototype._itemSelected = function (event) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-header.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabHeaderBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @param {?} event\n     * @return {?}\n     */\n    _itemSelected(event) {\n        event.preventDefault();\n    }\n}\n_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) { return new (t || _MatTabHeaderBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabHeaderBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabHeaderBase, inputs: { disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabHeaderBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabHeaderBase.propDecorators = {\n    disableRipple: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabHeaderBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabHeaderBase.prototype._disableRipple;\n}\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * \\@docs-private\n */\nclass MatTabHeader extends _MatTabHeaderBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, \n    // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n    animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n    }\n}\nMatTabHeader.ɵfac = function MatTabHeader_Factory(t) { return new (t || MatTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabHeader, selectors: [[\"mat-tab-header\"]], contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLabelWrapper, 4);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabHeader_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-header\"], hostVars: 4, hostBindings: function MatTabHeader_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\");\n    } }, inputs: { selectedIndex: \"selectedIndex\" }, outputs: { selectFocusedIndex: \"selectFocusedIndex\", indexFocused: \"indexFocused\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-label-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [\"role\", \"tablist\", 1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-labels\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabHeader_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabHeader_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabHeader_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabHeader_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabHeader_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabHeader_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabHeader_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabHeader_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabHeader_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabHeader.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: Platform },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabHeader.propDecorators = {\n    _items: [{ type: ContentChildren, args: [MatTabLabelWrapper, { descendants: false },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabHeader, [{\n        type: Component,\n        args: [{\n                selector: 'mat-tab-header',\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-label-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    #tabList\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    role=\\\"tablist\\\"\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-labels\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                inputs: ['selectedIndex'],\n                outputs: ['selectFocusedIndex', 'indexFocused'],\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                host: {\n                    'class': 'mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\"\n                },\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [MatTabLabelWrapper, { descendants: false }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabHeader.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabHeader.prototype._items;\n    /** @type {?} */\n    MatTabHeader.prototype._inkBar;\n    /** @type {?} */\n    MatTabHeader.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabHeader.prototype._tabList;\n    /** @type {?} */\n    MatTabHeader.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabHeader.prototype._previousPaginator;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/tab-nav-bar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Base class with all of the `MatTabNav` functionality.\n * \\@docs-private\n * @abstract\n */\n// tslint:disable-next-line:class-name\nclass _MatTabNavBase extends MatPaginatedTabHeader {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n        this._disableRipple = false;\n        /**\n         * Theme color of the nav bar.\n         */\n        this.color = 'primary';\n    }\n    /**\n     * Background color of the tab nav.\n     * @return {?}\n     */\n    get backgroundColor() { return this._backgroundColor; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set backgroundColor(value) {\n        /** @type {?} */\n        const classList = this._elementRef.nativeElement.classList;\n        classList.remove(`mat-background-${this.backgroundColor}`);\n        if (value) {\n            classList.add(`mat-background-${value}`);\n        }\n        this._backgroundColor = value;\n    }\n    /**\n     * Whether the ripple effect is disabled or not.\n     * @return {?}\n     */\n    get disableRipple() { return this._disableRipple; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disableRipple(value) { this._disableRipple = coerceBooleanProperty(value); }\n    /**\n     * @protected\n     * @return {?}\n     */\n    _itemSelected() {\n        // noop\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // We need this to run before the `changes` subscription in parent to ensure that the\n        // selectedIndex is up-to-date by the time the super class starts looking for it.\n        this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this.updateActiveLink();\n        }));\n        super.ngAfterContentInit();\n    }\n    /**\n     * Notifies the component that the active link has been changed.\n     * \\@breaking-change 8.0.0 `element` parameter to be removed.\n     * @param {?=} _element\n     * @return {?}\n     */\n    updateActiveLink(_element) {\n        if (!this._items) {\n            return;\n        }\n        /** @type {?} */\n        const items = this._items.toArray();\n        for (let i = 0; i < items.length; i++) {\n            if (items[i].active) {\n                this.selectedIndex = i;\n                this._changeDetectorRef.markForCheck();\n                return;\n            }\n        }\n        // The ink bar should hide itself if no items are active.\n        this.selectedIndex = -1;\n        this._inkBar.hide();\n    }\n}\n_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) { return new (t || _MatTabNavBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabNavBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabNavBase, inputs: { color: \"color\", backgroundColor: \"backgroundColor\", disableRipple: \"disableRipple\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabNavBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabNavBase.propDecorators = {\n    backgroundColor: [{ type: Input }],\n    disableRipple: [{ type: Input }],\n    color: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabNavBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { color: [{\n            type: Input\n        }], backgroundColor: [{\n            type: Input\n        }], disableRipple: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Query list of all tab links of the tab navigation.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype._items;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._backgroundColor;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabNavBase.prototype._disableRipple;\n    /**\n     * Theme color of the nav bar.\n     * @type {?}\n     */\n    _MatTabNavBase.prototype.color;\n}\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\nclass MatTabNav extends _MatTabNavBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} dir\n     * @param {?} ngZone\n     * @param {?} changeDetectorRef\n     * @param {?} viewportRuler\n     * @param {?=} platform\n     * @param {?=} animationMode\n     */\n    constructor(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, \n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform, animationMode) {\n        super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n    }\n}\nMatTabNav.ɵfac = function MatTabNav_Factory(t) { return new (t || MatTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc6.ViewportRuler), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform, 8), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MatTabNav, selectors: [[\"\", \"mat-tab-nav-bar\", \"\"]], contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatTabLink, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._items = _t);\n    } }, viewQuery: function MatTabNav_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(MatInkBar, 7);\n        ɵngcc0.ɵɵviewQuery(_c5, 7);\n        ɵngcc0.ɵɵviewQuery(_c6, 7);\n        ɵngcc0.ɵɵviewQuery(_c7, 5);\n        ɵngcc0.ɵɵviewQuery(_c8, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._inkBar = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabListContainer = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._tabList = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._nextPaginator = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._previousPaginator = _t.first);\n    } }, hostAttrs: [1, \"mat-tab-nav-bar\", \"mat-tab-header\"], hostVars: 10, hostBindings: function MatTabNav_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-controls-enabled\", ctx._showPaginationControls)(\"mat-tab-header-rtl\", ctx._getLayoutDirection() == \"rtl\")(\"mat-primary\", ctx.color !== \"warn\" && ctx.color !== \"accent\")(\"mat-accent\", ctx.color === \"accent\")(\"mat-warn\", ctx.color === \"warn\");\n    } }, inputs: { color: \"color\" }, exportAs: [\"matTabNavBar\", \"matTabNav\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c9, ngContentSelectors: _c0, decls: 13, vars: 8, consts: [[\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-before\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"click\", \"mousedown\", \"touchend\"], [\"previousPaginator\", \"\"], [1, \"mat-tab-header-pagination-chevron\"], [1, \"mat-tab-link-container\", 3, \"keydown\"], [\"tabListContainer\", \"\"], [1, \"mat-tab-list\", 3, \"cdkObserveContent\"], [\"tabList\", \"\"], [1, \"mat-tab-links\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-tab-header-pagination\", \"mat-tab-header-pagination-after\", \"mat-elevation-z4\", 3, \"matRippleDisabled\", \"mousedown\", \"click\", \"touchend\"], [\"nextPaginator\", \"\"]], template: function MatTabNav_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵlistener(\"click\", function MatTabNav_Template_div_click_0_listener() { return ctx._handlePaginatorClick(\"before\"); })(\"mousedown\", function MatTabNav_Template_div_mousedown_0_listener($event) { return ctx._handlePaginatorPress(\"before\", $event); })(\"touchend\", function MatTabNav_Template_div_touchend_0_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function MatTabNav_Template_div_keydown_3_listener($event) { return ctx._handleKeydown($event); });\n        ɵngcc0.ɵɵelementStart(5, \"div\", 5, 6);\n        ɵngcc0.ɵɵlistener(\"cdkObserveContent\", function MatTabNav_Template_div_cdkObserveContent_5_listener() { return ctx._onContentChanges(); });\n        ɵngcc0.ɵɵelementStart(7, \"div\", 7);\n        ɵngcc0.ɵɵprojection(8);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(9, \"mat-ink-bar\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(10, \"div\", 8, 9);\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatTabNav_Template_div_mousedown_10_listener($event) { return ctx._handlePaginatorPress(\"after\", $event); })(\"click\", function MatTabNav_Template_div_click_10_listener() { return ctx._handlePaginatorClick(\"after\"); })(\"touchend\", function MatTabNav_Template_div_touchend_10_listener() { return ctx._stopInterval(); });\n        ɵngcc0.ɵɵelement(12, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollBefore);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollBefore || ctx.disableRipple);\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n        ɵngcc0.ɵɵadvance(5);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-header-pagination-disabled\", ctx._disableScrollAfter);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx._disableScrollAfter || ctx.disableRipple);\n    } }, directives: [ɵngcc3.MatRipple, ɵngcc8.CdkObserveContent, MatInkBar], styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"], encapsulation: 2 });\n/** @nocollapse */\nMatTabNav.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ViewportRuler },\n    { type: Platform, decorators: [{ type: Optional }] },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\nMatTabNav.propDecorators = {\n    _items: [{ type: ContentChildren, args: [forwardRef((/**\n                 * @return {?}\n                 */\n                () => MatTabLink)), { descendants: true },] }],\n    _inkBar: [{ type: ViewChild, args: [MatInkBar, { static: true },] }],\n    _tabListContainer: [{ type: ViewChild, args: ['tabListContainer', { static: true },] }],\n    _tabList: [{ type: ViewChild, args: ['tabList', { static: true },] }],\n    _nextPaginator: [{ type: ViewChild, args: ['nextPaginator',] }],\n    _previousPaginator: [{ type: ViewChild, args: ['previousPaginator',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabNav, [{\n        type: Component,\n        args: [{\n                selector: '[mat-tab-nav-bar]',\n                exportAs: 'matTabNavBar, matTabNav',\n                inputs: ['color'],\n                template: \"<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\\\"\\n     #previousPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollBefore || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollBefore\\\"\\n     (click)=\\\"_handlePaginatorClick('before')\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('before', $event)\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\\n<div class=\\\"mat-tab-link-container\\\" #tabListContainer (keydown)=\\\"_handleKeydown($event)\\\">\\n  <div\\n    class=\\\"mat-tab-list\\\"\\n    [class._mat-animation-noopable]=\\\"_animationMode === 'NoopAnimations'\\\"\\n    #tabList\\n    (cdkObserveContent)=\\\"_onContentChanges()\\\">\\n    <div class=\\\"mat-tab-links\\\">\\n      <ng-content></ng-content>\\n    </div>\\n    <mat-ink-bar></mat-ink-bar>\\n  </div>\\n</div>\\n\\n<div class=\\\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\\\"\\n     #nextPaginator\\n     aria-hidden=\\\"true\\\"\\n     mat-ripple [matRippleDisabled]=\\\"_disableScrollAfter || disableRipple\\\"\\n     [class.mat-tab-header-pagination-disabled]=\\\"_disableScrollAfter\\\"\\n     (mousedown)=\\\"_handlePaginatorPress('after', $event)\\\"\\n     (click)=\\\"_handlePaginatorClick('after')\\\"\\n     (touchend)=\\\"_stopInterval()\\\">\\n  <div class=\\\"mat-tab-header-pagination-chevron\\\"></div>\\n</div>\\n\",\n                host: {\n                    'class': 'mat-tab-nav-bar mat-tab-header',\n                    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n                    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n                    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n                    '[class.mat-accent]': 'color === \"accent\"',\n                    '[class.mat-warn]': 'color === \"warn\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                // tslint:disable-next-line:validate-decorators\n                changeDetection: ChangeDetectionStrategy.Default,\n                styles: [\".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\\\"\\\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc0.NgZone }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc6.ViewportRuler }, { type: ɵngcc7.Platform, decorators: [{\n                type: Optional\n            }] }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { _items: [{\n            type: ContentChildren,\n            args: [forwardRef(( /**\n                             * @return {?}\n                             */() => MatTabLink)), { descendants: true }]\n        }], _inkBar: [{\n            type: ViewChild,\n            args: [MatInkBar, { static: true }]\n        }], _tabListContainer: [{\n            type: ViewChild,\n            args: ['tabListContainer', { static: true }]\n        }], _tabList: [{\n            type: ViewChild,\n            args: ['tabList', { static: true }]\n        }], _nextPaginator: [{\n            type: ViewChild,\n            args: ['nextPaginator']\n        }], _previousPaginator: [{\n            type: ViewChild,\n            args: ['previousPaginator']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatTabNav.ngAcceptInputType_disableRipple;\n    /** @type {?} */\n    MatTabNav.prototype._items;\n    /** @type {?} */\n    MatTabNav.prototype._inkBar;\n    /** @type {?} */\n    MatTabNav.prototype._tabListContainer;\n    /** @type {?} */\n    MatTabNav.prototype._tabList;\n    /** @type {?} */\n    MatTabNav.prototype._nextPaginator;\n    /** @type {?} */\n    MatTabNav.prototype._previousPaginator;\n}\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {\n}\n/** @type {?} */\nconst _MatTabLinkMixinBase = mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n/**\n * Base class with all of the `MatTabLink` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatTabLinkBase extends _MatTabLinkMixinBase {\n    /**\n     * @param {?} _tabNavBar\n     * @param {?} elementRef\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} _focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {\n        super();\n        this._tabNavBar = _tabNavBar;\n        this.elementRef = elementRef;\n        this._focusMonitor = _focusMonitor;\n        /**\n         * Whether the tab link is active or not.\n         */\n        this._isActive = false;\n        this.rippleConfig = globalRippleOptions || {};\n        this.tabIndex = parseInt(tabIndex) || 0;\n        if (animationMode === 'NoopAnimations') {\n            this.rippleConfig.animation = { enterDuration: 0, exitDuration: 0 };\n        }\n        _focusMonitor.monitor(elementRef);\n    }\n    /**\n     * Whether the link is active.\n     * @return {?}\n     */\n    get active() { return this._isActive; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set active(value) {\n        if (value !== this._isActive) {\n            this._isActive = value;\n            this._tabNavBar.updateActiveLink(this.elementRef);\n        }\n    }\n    /**\n     * Whether ripples are disabled on interaction.\n     * \\@docs-private\n     * @return {?}\n     */\n    get rippleDisabled() {\n        return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n            !!this.rippleConfig.disabled;\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this.elementRef.nativeElement.focus();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this.elementRef);\n    }\n}\n_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) { return new (t || _MatTabLinkBase)(ɵngcc0.ɵɵdirectiveInject(_MatTabNavBase), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\n_MatTabLinkBase.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: _MatTabLinkBase, inputs: { active: \"active\" }, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\n_MatTabLinkBase.ctorParameters = () => [\n    { type: _MatTabNavBase },\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n_MatTabLinkBase.propDecorators = {\n    active: [{ type: Input }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(_MatTabLinkBase, [{\n        type: Directive\n    }], function () { return [{ type: _MatTabNavBase }, { type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, { active: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disabled;\n    /** @type {?} */\n    _MatTabLinkBase.ngAcceptInputType_disableRipple;\n    /**\n     * Whether the tab link is active or not.\n     * @type {?}\n     * @protected\n     */\n    _MatTabLinkBase.prototype._isActive;\n    /**\n     * Ripple configuration for ripples that are launched on pointer down. The ripple config\n     * is set to the global ripple options since we don't have any configurable options for\n     * the tab link ripples.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatTabLinkBase.prototype.rippleConfig;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._tabNavBar;\n    /** @type {?} */\n    _MatTabLinkBase.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatTabLinkBase.prototype._focusMonitor;\n}\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\nclass MatTabLink extends _MatTabLinkBase {\n    /**\n     * @param {?} tabNavBar\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} platform\n     * @param {?} globalRippleOptions\n     * @param {?} tabIndex\n     * @param {?} focusMonitor\n     * @param {?=} animationMode\n     */\n    constructor(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {\n        super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n        this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n        this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._tabLinkRipple._removeTriggerEvents();\n    }\n}\nMatTabLink.ɵfac = function MatTabLink_Factory(t) { return new (t || MatTabLink)(ɵngcc0.ɵɵdirectiveInject(MatTabNav), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc7.Platform), ɵngcc0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), ɵngcc0.ɵɵinjectAttribute('tabindex'), ɵngcc0.ɵɵdirectiveInject(ɵngcc4.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8)); };\nMatTabLink.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: MatTabLink, selectors: [[\"\", \"mat-tab-link\", \"\"], [\"\", \"matTabLink\", \"\"]], hostAttrs: [1, \"mat-tab-link\", \"mat-focus-indicator\"], hostVars: 7, hostBindings: function MatTabLink_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-current\", ctx.active ? \"page\" : null)(\"aria-disabled\", ctx.disabled)(\"tabIndex\", ctx.tabIndex);\n        ɵngcc0.ɵɵclassProp(\"mat-tab-disabled\", ctx.disabled)(\"mat-tab-label-active\", ctx.active);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, exportAs: [\"matTabLink\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nMatTabLink.ctorParameters = () => [\n    { type: MatTabNav },\n    { type: ElementRef },\n    { type: NgZone },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [MAT_RIPPLE_GLOBAL_OPTIONS,] }] },\n    { type: String, decorators: [{ type: Attribute, args: ['tabindex',] }] },\n    { type: FocusMonitor },\n    { type: String, decorators: [{ type: Optional }, { type: Inject, args: [ANIMATION_MODULE_TYPE,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabLink, [{\n        type: Directive,\n        args: [{\n                selector: '[mat-tab-link], [matTabLink]',\n                exportAs: 'matTabLink',\n                inputs: ['disabled', 'disableRipple', 'tabIndex'],\n                host: {\n                    'class': 'mat-tab-link mat-focus-indicator',\n                    '[attr.aria-current]': 'active ? \"page\" : null',\n                    '[attr.aria-disabled]': 'disabled',\n                    '[attr.tabIndex]': 'tabIndex',\n                    '[class.mat-tab-disabled]': 'disabled',\n                    '[class.mat-tab-label-active]': 'active'\n                }\n            }]\n    }], function () { return [{ type: MatTabNav }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: ɵngcc7.Platform }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n            }] }, { type: String, decorators: [{\n                type: Attribute,\n                args: ['tabindex']\n            }] }, { type: ɵngcc4.FocusMonitor }, { type: String, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [ANIMATION_MODULE_TYPE]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Reference to the RippleRenderer for the tab-link.\n     * @type {?}\n     * @private\n     */\n    MatTabLink.prototype._tabLinkRipple;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tabs-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatTabsModule {\n}\nMatTabsModule.ɵfac = function MatTabsModule_Factory(t) { return new (t || MatTabsModule)(); };\nMatTabsModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: MatTabsModule });\nMatTabsModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[\n            CommonModule,\n            MatCommonModule,\n            PortalModule,\n            MatRippleModule,\n            ObserversModule,\n            A11yModule,\n        ], MatCommonModule] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MatTabsModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    PortalModule,\n                    MatRippleModule,\n                    ObserversModule,\n                    A11yModule,\n                ],\n                // Don't export all components because some are only to be used internally.\n                exports: [\n                    MatCommonModule,\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabContent,\n                ],\n                declarations: [\n                    MatTabGroup,\n                    MatTabLabel,\n                    MatTab,\n                    MatInkBar,\n                    MatTabLabelWrapper,\n                    MatTabNav,\n                    MatTabLink,\n                    MatTabBody,\n                    MatTabBodyPortal,\n                    MatTabHeader,\n                    MatTabContent,\n                ]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatTabsModule, { declarations: function () { return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        PortalModule,\n        MatRippleModule,\n        ObserversModule,\n        A11yModule]; }, exports: function () { return [MatCommonModule, MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent]; } }); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/tab-nav-bar/index.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/tabs/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, _MAT_INK_BAR_POSITIONER_FACTORY as ɵangular_material_src_material_tabs_tabs_a, MatPaginatedTabHeader as ɵangular_material_src_material_tabs_tabs_b };\n\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductSettingsComponent } from './product-settings/product-settings.component';\r\n\r\nimport { SettingsLayoutComponent } from './settings-layout.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: SettingsLayoutComponent },\r\n  {\r\n    path: 'appSettings',\r\n    loadChildren: () =>\r\n      import('@features/settings/app-settings/app-settings.module').then(\r\n        (m) => m.AppSettingsModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'products-settings',\r\n    loadChildren: () =>\r\n      import(\r\n        '@features/settings/product-settings/product-settings.module'\r\n      ).then((m) => m.ProductSettingsModule),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class SettingsLayoutRoutingModule {}\r\n","<div class=\"main-container\">\r\n  <div class=\"grid-container\">\r\n    <app-button\r\n      [text]=\"item | translate\"\r\n      (clickEvent)=\"navigateTo(item)\"\r\n      [isTransparentMode]=\"item !== 'appSettings'\"\r\n      *ngFor=\"let item of routes\"\r\n      [fullWidth]=\"true\"\r\n      class=\"grid-item\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\n\r\n@Component({\r\n  selector: 'app-settings-layout',\r\n  templateUrl: './settings-layout.component.html',\r\n  styleUrls: ['./settings-layout.component.scss'],\r\n})\r\nexport class SettingsLayoutComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  routes: string[] = [\r\n    'frames',\r\n    'glass',\r\n    'passpartu',\r\n    'passpartuColor',\r\n    'mirror',\r\n    'faceting',\r\n    'sanding',\r\n    'appSettings',\r\n  ];\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  navigateTo(url: string): void {\r\n    url === 'appSettings'\r\n      ? this.router.navigate(['settings', url])\r\n      : this.router.navigate(['settings', 'products-settings', url]);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { SettingsLayoutRoutingModule } from './settings-layout-routing.module';\r\nimport { SettingsLayoutComponent } from './settings-layout.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    SettingsLayoutRoutingModule,\r\n    MatTabsModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [SettingsLayoutComponent],\r\n  declarations: [SettingsLayoutComponent],\r\n})\r\nexport class SettingsLayoutModule {}\r\n"]}