{"version":3,"file":"src_app_features_invoices_invoices_module_ts-es2015.js","mappings":"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","sources":["./src/app/features/invoices/invoices-routing.module.ts","./src/app/features/invoices/invoices.component.ts","./src/app/features/invoices/invoices.component.html","./src/app/features/invoices/invoices.module.ts","./src/app/shared/services/web-services/base-web.service.ts","./src/app/shared/services/web-services/entity-base-web.service.ts","./src/app/shared/services/web-services/invoice.web.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InvoicesComponent } from './invoices.component';\r\n\r\nconst routes: Routes = [{ path: '', component: InvoicesComponent }];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InvoicesRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { InvoiceModel } from 'src/app/shared/models/invoice-model';\r\nimport { DraftInvoicesService } from 'src/app/shared/services/data-store-services/draft-invoice-items-store.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { InvoiceWebService } from 'src/app/shared/services/web-services/invoice.web.service';\r\n\r\n@Component({\r\n  selector: 'app-invoices',\r\n  templateUrl: './invoices.component.html',\r\n  styleUrls: ['./invoices.component.scss'],\r\n  providers: [],\r\n})\r\nexport class InvoicesComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  invoices: TableShow;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private draftInvoicesStoreService: DraftInvoicesService,\r\n    private invoiceWebService: InvoiceWebService,\r\n    private translateService: TranslateService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subs.sink = this.invoiceWebService\r\n      .getEntities()\r\n      .subscribe((invoices) => {\r\n        if (invoices) {\r\n          this.invoices = this.mapDataToTableShow(invoices);\r\n        }\r\n      });\r\n  }\r\n\r\n  mapDataToTableShow(invoices: InvoiceModel[]): TableShow {\r\n    let table = {\r\n      header: [\r\n        this.translateService.instant('code'),\r\n        this.translateService.instant('date'),\r\n        this.translateService.instant('advancePayment'),\r\n        this.translateService.instant('buyerName'),\r\n      ],\r\n      data: [],\r\n    };\r\n    invoices.forEach((entity) => {\r\n      table.data.push(entity.oid);\r\n      table.data.push(entity.createDate);\r\n      table.data.push(entity.advancePayment);\r\n      table.data.push(entity.buyerName);\r\n    });\r\n    return table;\r\n  }\r\n\r\n  editInvoice(oid: string): void {\r\n    this.route.navigate(['invoice-create-edit', 'edit', oid]);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  clear(): void {\r\n    this.draftInvoicesStoreService.clearDraftInvoices();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"invoices\" *ngIf=\"invoices\">\r\n    <app-table-show\r\n      [dataModel]=\"invoices\"\r\n      (editData)=\"editInvoice($event)\"\r\n    ></app-table-show>\r\n  </div>\r\n  <div class=\"footer\">\r\n    <app-button\r\n      [text]=\"'cancel' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"cancel()\"\r\n    ></app-button>\r\n    <app-button\r\n      [text]=\"'clearAllDraftData' | translate\"\r\n      color=\"primary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"clear()\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InvoicesComponent } from './invoices.component';\r\nimport { InvoicesRoutingModule } from './invoices-routing.module';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { TableShowModule } from 'src/app/shared/components/table-show/table-show.module';\r\n\r\n@NgModule({\r\n  declarations: [InvoicesComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InvoicesRoutingModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n    TableShowModule,\r\n  ],\r\n  exports: [InvoicesComponent],\r\n})\r\nexport class InvoicesModule {}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, Type } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class BaseWebService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getRequest<T>(url: string): Observable<T> {\r\n    return this.http.get<T>(url).pipe(\r\n      map((res) => {\r\n        return res as T;\r\n      })\r\n    );\r\n  }\r\n\r\n  getRequestForArray<T>(url: string): Observable<T[]> {\r\n    return this.http.get<T[]>(url).pipe(\r\n      map((res) => {\r\n        return res as T[];\r\n      })\r\n    );\r\n  }\r\n\r\n  postRequest<T>(url: string, data: T): Observable<T> {\r\n    return this.http.post<T>(url, data).pipe(\r\n      map((res) => {\r\n        return res as T;\r\n      })\r\n    );\r\n  }\r\n\r\n  putRequest<T>(url: string, data: T): Observable<T> {\r\n    return this.http.put<T>(url, data).pipe(\r\n      map((res) => {\r\n        return res as T;\r\n      })\r\n    );\r\n  }\r\n\r\n  deleteRequest<T>(url: string): Observable<T> {\r\n    // need to add body params to DELETE request because backend is not completely in RESTful standard\r\n    return this.http.delete<T>(url).pipe(\r\n      map((res) => {\r\n        return res as T;\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { BaseWebService } from './base-web.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport abstract class EntityBaseWebService<T> {\r\n  private URL_PREFIX: string = 'http://localhost:45328/';\r\n\r\n  constructor(\r\n    public baseWebService: BaseWebService,\r\n    @Inject('') public domainName: string\r\n  ) {}\r\n\r\n  getEntities(): Observable<T[]> {\r\n    return this.baseWebService.getRequestForArray<T>(\r\n      this.URL_PREFIX + this.domainName\r\n    );\r\n  }\r\n\r\n  getEntityByOid(oid: string): Observable<T> {\r\n    return this.baseWebService.getRequest<T>(\r\n      this.URL_PREFIX + this.domainName + '/' + oid\r\n    );\r\n  }\r\n\r\n  createEntity(data: T): Observable<T> {\r\n    return this.baseWebService.postRequest<T>(\r\n      this.URL_PREFIX + this.domainName,\r\n      data\r\n    );\r\n  }\r\n\r\n  updateEntity(data: T): Observable<T> {\r\n    return this.baseWebService.putRequest<T>(\r\n      this.URL_PREFIX + this.domainName,\r\n      data\r\n    );\r\n  }\r\n\r\n  deleteEntity(data: T): Observable<void> {\r\n    console.log(data);\r\n    return this.baseWebService.deleteRequest<void>(\r\n      this.URL_PREFIX + this.domainName\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { InvoiceModel } from '../../models/invoice-model';\r\nimport { BaseWebService } from './base-web.service';\r\nimport { EntityBaseWebService } from './entity-base-web.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class InvoiceWebService extends EntityBaseWebService<InvoiceModel> {\r\n  constructor(public baseWebService: BaseWebService) {\r\n    super(baseWebService, 'invoices');\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}