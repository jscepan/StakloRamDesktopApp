{"version":3,"file":"src_app_features_settings_product-settings_product-settings_module_ts-es2015.js","mappings":"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","sources":["./src/app/features/settings/product-settings/create-edit-popup/create-edit-component.service.ts","./src/app/features/settings/product-settings/create-edit-popup/create-edit-popup.component.ts","./src/app/features/settings/product-settings/create-edit-popup/create-edit-popup.component.html","./src/app/features/settings/product-settings/create-edit-popup/create-edit-popup.module.ts","./src/app/features/settings/product-settings/map-services/map-frame.service.ts","./src/app/features/settings/product-settings/map-services/map-passpartu-color.service.ts","./src/app/features/settings/product-settings/map-services/map-product.service.ts","./src/app/features/settings/product-settings/product-settings-routing.module.ts","./src/app/features/settings/product-settings/product-settings.component.ts","./src/app/features/settings/product-settings/product-settings.component.html","./src/app/features/settings/product-settings/product-settings.module.ts","./src/app/shared/services/data-store-services/passpartu-data-store.service.ts"],"sourcesContent":["import { KeyValue } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { CreateEditPopupComponent } from './create-edit-popup.component';\r\n\r\n@Injectable()\r\nexport class CreateEditComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(items: Entity[], isEdit: boolean = false): Observable<any> {\r\n    return new Observable(\r\n      (observer: Subscriber<KeyValue<string, string>[]>) => {\r\n        const config: MatDialogConfig = new MatDialogConfig();\r\n\r\n        config.data = {\r\n          items,\r\n          isEdit,\r\n        };\r\n\r\n        this.subs.sink.$openSelectPopup = this._matDialog\r\n          .open(CreateEditPopupComponent, config)\r\n          .afterClosed()\r\n          .subscribe(\r\n            (item: KeyValue<string, string>[]) => {\r\n              observer.next(item);\r\n              observer.complete();\r\n            },\r\n            () => observer.error()\r\n          );\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { KeyValue } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\n\r\nexport interface DialogData {\r\n  items: Entity[];\r\n  isEdit: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-edit-popup',\r\n  templateUrl: './create-edit-popup.component.html',\r\n  styleUrls: ['./create-edit-popup.component.scss'],\r\n})\r\nexport class CreateEditPopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  items: Entity[] = [];\r\n  isEdit: boolean = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateEditPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.items = data.items;\r\n    this.isEdit = !!data.isEdit || false;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  submit(setting: any): void {\r\n    this.dialogRef.close(setting);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <h1>{{ (isEdit ? \"editYourData\" : \"createNewData\") | translate }}</h1>\r\n  <app-form #form [items]=\"items\"></app-form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <div class=\"buttons\">\r\n    <app-button\r\n      [text]=\"'cancel' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"cancel()\"\r\n    ></app-button>\r\n    <app-button\r\n      [text]=\"'save' | translate\"\r\n      [color]=\"'success'\"\r\n      [buttonSize]=\"'middle'\"\r\n      [disabled]=\"!(form.objectForm.dirty && form.objectForm.valid)\"\r\n      (clickEvent)=\"submit(form.objectForm.value)\"\r\n    ></app-button>\r\n  </div>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { CreateEditPopupComponent } from './create-edit-popup.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormModule } from 'src/app/shared/components/form/form.module';\r\n\r\n@NgModule({\r\n  declarations: [CreateEditPopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    MatDialogModule,\r\n    TranslateModule,\r\n    FormModule,\r\n  ],\r\n  exports: [CreateEditPopupComponent],\r\n  entryComponents: [CreateEditPopupComponent],\r\n})\r\nexport class CreateEditPopupModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { FrameModel } from 'src/app/shared/models/frame-model';\r\nimport { MapProductService } from './map-product.service';\r\n\r\n@Injectable()\r\n// implements ProductSettings<FrameModel>\r\nexport class MapFrameService extends MapProductService {\r\n  createEmptyEntity(): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'code', value: this.translateService.instant('code') },\r\n          type: 'string',\r\n          value: '',\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: '',\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('uom') },\r\n          type: 'select',\r\n          value: 'cm',\r\n          optionalValues: [\r\n            { key: 'm', value: 'm' },\r\n            { key: 'cm', value: 'cm' },\r\n            { key: 'mm', value: 'mm' },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('ppUOM'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'frameWidthMM',\r\n            value: this.translateService.instant('fwMM'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('crNum'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  mapEntityToFrame(entity: FrameModel): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'id', value: this.translateService.instant('id') },\r\n          type: 'string',\r\n          value: entity.oid,\r\n          disabled: true,\r\n        },\r\n        {\r\n          label: { key: 'code', value: this.translateService.instant('code') },\r\n          type: 'string',\r\n          value: entity.code,\r\n        },\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: entity.name,\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('UOM') },\r\n          type: 'select',\r\n          value: entity.uom,\r\n          optionalValues: [\r\n            { key: 'm', value: this.translateService.instant('m') },\r\n            { key: 'cm', value: this.translateService.instant('cm') },\r\n            { key: 'mm', value: this.translateService.instant('mm') },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('pricePerUom'),\r\n          },\r\n          type: 'number',\r\n          value: entity.pricePerUom,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'frameWidthMM',\r\n            value: this.translateService.instant('frameWidthMM'),\r\n          },\r\n          type: 'number',\r\n          value: entity.frameWidthMM,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('cashRegisterNumber'),\r\n          },\r\n          type: 'number',\r\n          value: entity.cashRegisterNumber,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  getTableData(entities: FrameModel[]): TableShow {\r\n    let table = {\r\n      header: [\r\n        this.translateService.instant('id'),\r\n        this.translateService.instant('code'),\r\n        this.translateService.instant('name'),\r\n        this.translateService.instant('uom'),\r\n        this.translateService.instant('pricePerUom'),\r\n        this.translateService.instant('frameWidthMM'),\r\n        this.translateService.instant('cashRegisterNumber'),\r\n      ],\r\n      data: [],\r\n    };\r\n    entities.forEach((entity) => {\r\n      table.data.push(entity.oid);\r\n      table.data.push(entity.code);\r\n      table.data.push(entity.name);\r\n      table.data.push(entity.uom);\r\n      table.data.push(entity.pricePerUom);\r\n      table.data.push(entity.frameWidthMM);\r\n      table.data.push(entity.cashRegisterNumber);\r\n    });\r\n    return table;\r\n  }\r\n}\r\n","import { KeyValue } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { PasspartuColorModel } from 'src/app/shared/models/passpartu-color-model';\r\nimport { PasspartuDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-data-store.service';\r\nimport { ProductSettings } from '../product-settings.interface';\r\n\r\n@Injectable()\r\nexport class MapPasspartuColorService\r\n  implements ProductSettings<PasspartuColorModel>\r\n{\r\n  passSubscription: Subscription;\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private passpartusStoreService: PasspartuDataStoreService\r\n  ) {}\r\n\r\n  createEmptyEntity(): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      this.passSubscription = this.passpartusStoreService.entities.subscribe(\r\n        (passpartues) => {\r\n          let optionalValues: KeyValue<string, string>[] = [];\r\n          passpartues.forEach((p) => {\r\n            optionalValues.push({\r\n              key: p.oid,\r\n              value:\r\n                p.name +\r\n                ', ' +\r\n                this.translateService.instant('id') +\r\n                ': ' +\r\n                p.oid +\r\n                ', ' +\r\n                this.translateService.instant('ppUom') +\r\n                ': ' +\r\n                p.pricePerUom,\r\n            });\r\n          });\r\n\r\n          let entities: Entity[] = [\r\n            {\r\n              label: {\r\n                key: 'name',\r\n                value: this.translateService.instant('name'),\r\n              },\r\n              type: 'string',\r\n              value: '',\r\n              required: true,\r\n            },\r\n            {\r\n              label: {\r\n                key: 'passpartu',\r\n                value: this.translateService.instant('passpartu'),\r\n              },\r\n              type: 'select',\r\n              value: passpartues[0].oid,\r\n              optionalValues,\r\n              required: true,\r\n            },\r\n          ];\r\n          subscriber.next(entities);\r\n          subscriber.complete();\r\n          this.passSubscription.unsubscribe();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  mapEntityToFrame(entity: PasspartuColorModel): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      this.passSubscription = this.passpartusStoreService.entities.subscribe(\r\n        (passpartues) => {\r\n          let optionalValues: KeyValue<string, string>[] = [];\r\n          passpartues.forEach((p) => {\r\n            optionalValues.push({\r\n              key: p.oid,\r\n              value:\r\n                p.name +\r\n                ', ' +\r\n                this.translateService.instant('id') +\r\n                ': ' +\r\n                p.oid +\r\n                ', ' +\r\n                this.translateService.instant('ppUom') +\r\n                ': ' +\r\n                p.pricePerUom,\r\n            });\r\n          });\r\n\r\n          let entities: Entity[] = [\r\n            {\r\n              label: {\r\n                key: 'id',\r\n                value: this.translateService.instant('id'),\r\n              },\r\n              type: 'string',\r\n              value: entity.oid,\r\n              disabled: true,\r\n            },\r\n            {\r\n              label: {\r\n                key: 'name',\r\n                value: this.translateService.instant('name'),\r\n              },\r\n              type: 'string',\r\n              value: entity.name,\r\n              required: true,\r\n            },\r\n            {\r\n              label: {\r\n                key: 'passpartu',\r\n                value: this.translateService.instant('passpartu'),\r\n              },\r\n              type: 'select',\r\n              value: passpartues[0].oid,\r\n              optionalValues,\r\n              required: true,\r\n            },\r\n          ];\r\n\r\n          subscriber.next(entities);\r\n          subscriber.complete();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getTableData(entities: PasspartuColorModel[]): TableShow {\r\n    let table = {\r\n      header: [\r\n        this.translateService.instant('id'),\r\n        this.translateService.instant('name'),\r\n        this.translateService.instant('passpartu'),\r\n      ],\r\n      data: [],\r\n    };\r\n    entities.forEach((entity) => {\r\n      table.data.push(entity.oid);\r\n      table.data.push(entity.name);\r\n      table.data.push(entity.passpartu.name);\r\n    });\r\n    return table;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { ProductModel } from 'src/app/shared/models/product-model';\r\nimport { ProductSettings } from '../product-settings.interface';\r\n\r\n@Injectable()\r\nexport class MapProductService implements ProductSettings<ProductModel> {\r\n  constructor(public translateService: TranslateService) {}\r\n\r\n  createEmptyEntity(): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: '',\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('uom') },\r\n          type: 'select',\r\n          value: 'cm',\r\n          optionalValues: [\r\n            { key: 'cm', value: 'cm' },\r\n            { key: 'mm', value: 'mm' },\r\n            { key: 'm', value: 'm' },\r\n            { key: 'm2', value: 'm2' },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('ppUOM'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('crNum'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  mapEntityToFrame(entity: ProductModel): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'id', value: this.translateService.instant('id') },\r\n          type: 'string',\r\n          value: entity.oid,\r\n          disabled: true,\r\n        },\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: entity.name,\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('UOM') },\r\n          type: 'select',\r\n          value: entity.uom,\r\n          optionalValues: [\r\n            { key: 'cm', value: this.translateService.instant('cm') },\r\n            { key: 'mm', value: this.translateService.instant('mm') },\r\n            { key: 'm', value: this.translateService.instant('m') },\r\n            { key: 'm2', value: this.translateService.instant('m2') },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('pricePerUom'),\r\n          },\r\n          type: 'number',\r\n          value: entity.pricePerUom,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('cashRegisterNumber'),\r\n          },\r\n          type: 'number',\r\n          value: entity.cashRegisterNumber,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  getTableData(entities: ProductModel[]): TableShow {\r\n    let table = {\r\n      header: [\r\n        this.translateService.instant('id'),\r\n        this.translateService.instant('name'),\r\n        this.translateService.instant('uom'),\r\n        this.translateService.instant('pricePerUom'),\r\n        this.translateService.instant('cashRegisterNumber'),\r\n      ],\r\n      data: [],\r\n    };\r\n    entities.forEach((entity) => {\r\n      table.data.push(entity.oid);\r\n      table.data.push(entity.name);\r\n      table.data.push(entity.uom);\r\n      table.data.push(entity.pricePerUom);\r\n      table.data.push(entity.cashRegisterNumber);\r\n    });\r\n    return table;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductSettingsComponent } from './product-settings.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ProductSettingsComponent },\r\n  {\r\n    path: ':productName',\r\n    component: ProductSettingsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProductSettingsRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CreateEditComponentService } from '@features/settings/product-settings/create-edit-popup/create-edit-component.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MODE } from 'src/app/shared/components/me-basic-alert/me-basic-alert.interface';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { BaseModel } from 'src/app/shared/models/base-model';\r\nimport { BaseDataStoreService } from 'src/app/shared/services/data-store-services/base-data-store.service';\r\nimport { FacetingDataStoreService } from 'src/app/shared/services/data-store-services/faceting-data-store.service';\r\nimport { FrameDataStoreService } from 'src/app/shared/services/data-store-services/frame-data-store.service';\r\nimport { GlassDataStoreService } from 'src/app/shared/services/data-store-services/glass-data-store.service';\r\nimport { MirrorDataStoreService } from 'src/app/shared/services/data-store-services/mirror-data-store.service';\r\nimport { PasspartuColorDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-color-data-store.service';\r\nimport { PasspartuDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-data-store.service';\r\nimport { SandingDataStoreService } from 'src/app/shared/services/data-store-services/sanding-data-store.service';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { MapFrameService } from './map-services/map-frame.service';\r\nimport { MapPasspartuColorService } from './map-services/map-passpartu-color.service';\r\nimport { MapProductService } from './map-services/map-product.service';\r\nimport { ProductSettings } from './product-settings.interface';\r\n\r\n@Component({\r\n  selector: 'app-product-settings',\r\n  templateUrl: './product-settings.component.html',\r\n  styleUrls: ['./product-settings.component.scss'],\r\n  providers: [\r\n    CreateEditComponentService,\r\n    MapFrameService,\r\n    MapPasspartuColorService,\r\n    MapProductService,\r\n  ],\r\n})\r\nexport class ProductSettingsComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  table: TableShow;\r\n  entities: any[] = [];\r\n  productName: string = '';\r\n  mapService: ProductSettings<BaseModel>;\r\n  webService: BaseDataStoreService<BaseModel>;\r\n  productNameForAlert: string;\r\n\r\n  constructor(\r\n    private _activeRoute: ActivatedRoute,\r\n    private route: Router,\r\n    private createEditComponentService: CreateEditComponentService,\r\n    private globalService: GlobalService,\r\n    private translateService: TranslateService,\r\n\r\n    private mapFrameService: MapFrameService,\r\n    private mapProductService: MapProductService,\r\n    private mapPasspartuColorService: MapPasspartuColorService,\r\n\r\n    private frameDataService: FrameDataStoreService,\r\n    private glassDataService: GlassDataStoreService,\r\n    private passpartuDataService: PasspartuDataStoreService,\r\n    private passpartuColorDataService: PasspartuColorDataStoreService,\r\n    private facetingDataService: FacetingDataStoreService,\r\n    private mirrorDataService: MirrorDataStoreService,\r\n    private sandingDataService: SandingDataStoreService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.productName = this._activeRoute.snapshot.paramMap.get('productName');\r\n    switch (this.productName) {\r\n      case 'frames':\r\n        this.mapService = this.mapFrameService;\r\n        this.webService = this.frameDataService;\r\n        this.productNameForAlert = this.translateService.instant('frame');\r\n        break;\r\n      case 'glass':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.glassDataService;\r\n        this.productNameForAlert = this.translateService.instant('glass');\r\n        break;\r\n      case 'passpartu':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.passpartuDataService;\r\n        this.productNameForAlert = this.translateService.instant('passpartu');\r\n        break;\r\n      case 'passpartuColor':\r\n        this.mapService = this.mapPasspartuColorService;\r\n        this.webService = this.passpartuColorDataService;\r\n        this.productNameForAlert =\r\n          this.translateService.instant('passpartuColor');\r\n        break;\r\n      case 'mirror':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.mirrorDataService;\r\n        this.productNameForAlert = this.translateService.instant('mirror');\r\n        break;\r\n      case 'faceting':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.facetingDataService;\r\n        this.productNameForAlert = this.translateService.instant('faceting');\r\n        break;\r\n      case 'sanding':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.sandingDataService;\r\n        this.productNameForAlert = this.translateService.instant('sanding');\r\n        break;\r\n    }\r\n    this.subs.sink.productSetings = this.webService.entities.subscribe(\r\n      (entities) => {\r\n        this.entities = entities;\r\n        this.table = this.mapService.getTableData(entities);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.route.navigate(['settings']);\r\n  }\r\n\r\n  createNewData(): void {\r\n    this.subs.sink = this.mapService\r\n      .createEmptyEntity()\r\n      .subscribe((entities) => {\r\n        this.createEditComponentService\r\n          .openDialog(entities)\r\n          .subscribe((data) => {\r\n            if (data) {\r\n              this.subs.sink.createNewData = this.webService\r\n                .createNewEntity(data)\r\n                .subscribe(() => {\r\n                  this.globalService.showBasicAlert(\r\n                    MODE.success,\r\n                    this.translateService.instant('success'),\r\n                    this.productNameForAlert +\r\n                      ' ' +\r\n                      this.translateService.instant('successfullyCreated')\r\n                  );\r\n                });\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  clickEditData(oid: string): void {\r\n    // TODO\r\n    let entity = this.entities.find((e) => e.oid === oid);\r\n    this.subs.sink = this.mapService\r\n      .mapEntityToFrame(entity)\r\n      .subscribe((entities) => {\r\n        this.subs.sink.editData = this.createEditComponentService\r\n          .openDialog(entities, true)\r\n          .subscribe((data) => {\r\n            if (data) {\r\n              data.oid = oid;\r\n              this.webService.editEntity(data).subscribe(() => {\r\n                this.globalService.showBasicAlert(\r\n                  MODE.success,\r\n                  this.translateService.instant('success'),\r\n                  this.productNameForAlert +\r\n                    ' ' +\r\n                    this.translateService.instant('successfullyEdited')\r\n                );\r\n              });\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"header\">\r\n    <app-button\r\n      [text]=\"'cancel' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'small'\"\r\n      (clickEvent)=\"cancel()\"\r\n    ></app-button>\r\n    <app-button\r\n      [text]=\"'createNew' | translate\"\r\n      [color]=\"'success'\"\r\n      [buttonSize]=\"'small'\"\r\n      (clickEvent)=\"createNewData()\"\r\n    ></app-button>\r\n  </div>\r\n  <app-table-show\r\n    [dataModel]=\"table\"\r\n    *ngIf=\"table\"\r\n    (editData)=\"clickEditData($event)\"\r\n  ></app-table-show>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductSettingsComponent } from './product-settings.component';\r\nimport { ProductSettingsRoutingModule } from './product-settings-routing.module';\r\nimport { TableShowModule } from 'src/app/shared/components/table-show/table-show.module';\r\nimport { CreateEditPopupModule } from '@features/settings/product-settings/create-edit-popup/create-edit-popup.module';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [ProductSettingsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProductSettingsRoutingModule,\r\n    TableShowModule,\r\n    CreateEditPopupModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [ProductSettingsComponent],\r\n})\r\nexport class ProductSettingsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { UOM } from '../../enums/uom-enum';\r\nimport { ProductModel } from '../../models/product-model';\r\nimport { BaseWebService } from '../web-services/base-web.service';\r\nimport { BaseDataStoreService } from './base-data-store.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PasspartuDataStoreService extends BaseDataStoreService<ProductModel> {\r\n  constructor(public baseWebService: BaseWebService) {\r\n    super(baseWebService, 'passpartu');\r\n    this.kreiraj();\r\n  }\r\n\r\n  kreiraj(): void {\r\n    super\r\n      .createNewEntity({\r\n        oid: '1',\r\n        name: 'Paspartu',\r\n        uom: UOM.METER2,\r\n        pricePerUom: 1590,\r\n        cashRegisterNumber: 182,\r\n      })\r\n      .subscribe();\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///"}