{"version":3,"file":"src_app_features_invoice-create-edit_invoice-create-edit_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;AACuD;AACsB;;;AAE7E,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,sFAA0B,EAAE;IACnD,EAAE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sFAA0B,EAAE;IACnE;QACE,IAAI,EAAE,0BAA0B;QAChC,YAAY,EAAE,GAAG,EAAE,CACjB,2cAA8D,CAAC,IAAI,CACjE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CACvB;KACJ;IACD;QACE,IAAI,EAAE,SAAS;QACf,YAAY,EAAE,GAAG,EAAE,CACjB,2cAA8D,CAAC,IAAI,CACjE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,aAAa,CACvB;KACJ;IACD;QACE,IAAI,EAAE,2BAA2B;QACjC,YAAY,EAAE,GAAG,EAAE,CACjB,kOAAgE,CAAC,IAAI,CACnE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,CACxB;KACJ;IACD;QACE,IAAI,EAAE,UAAU;QAChB,YAAY,EAAE,GAAG,EAAE,CACjB,kOAAgE,CAAC,IAAI,CACnE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,cAAc,CACxB;KACJ;CACF,CAAC;AAMK,MAAM,8BAA8B;;4GAA9B,8BAA8B;2HAA9B,8BAA8B;+HAHhC,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEX,8BAA8B,oFAF/B,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCgC;AAGiC;AAK5C;AAGsC;AAEoB;;;;;;;;;;;ICkC7F,sEAA0C;IACxC,2EAA0B;IAAA,uDAA6B;;IAAA,4DAAO;IAC9D,uEAAM;IAAA,4DAAC;IAAA,4DAAO;IACd,uEAAM;IAAA,uDAAsC;IAAA,4DAAO;IACnD,uEAAM;IAAA,4DAAC;IAAA,4DAAO;IACd,wEAAM;IAAA,wDAAiC;IAAA,4DAAO;IAC9C,mEAAa;IACb,wEAAM;IAAA,wDAA+B;IAAA,4DAAO;IAC9C,4DAAM;;;IAPsB,0DAA6B;IAA7B,6IAA6B;IAEjD,0DAAsC;IAAtC,oGAAsC;IAEtC,0DAAiC;IAAjC,+FAAiC;IAEjC,0DAA+B;IAA/B,6FAA+B;;;IAEvC,sEAA+B;IAC7B,2EAA0B;IAAA,uDAAyB;;IAAA,4DAAO;IAC1D,uEAAM;IAAA,6DAAE;IAAA,4DAAO;IACf,uEAAM;IAAA,uDAA4B;IAAA,4DAAO;IAC3C,4DAAM;;;IAHsB,0DAAyB;IAAzB,yIAAyB;IAE7C,0DAA4B;IAA5B,0FAA4B;;;IAEpC,sEAAgC;IAC9B,2EAA0B;IAAA,uDAA0B;;IAAA,4DAAO;IAC3D,uEAAM;IAAA,6DAAE;IAAA,4DAAO;IACf,uEAAM;IAAA,uDAA6B;IAAA,4DAAO;IAC5C,4DAAM;;;IAHsB,0DAA0B;IAA1B,0IAA0B;IAE9C,0DAA6B;IAA7B,2FAA6B;;;IAErC,sEAAkC;IAChC,2EAA0B;IAAA,uDAA4B;;IAAA,4DAAO;IAC7D,uEAAM;IAAA,6DAAE;IAAA,4DAAO;IACf,uEAAM;IAAA,uDAA+B;IAAA,4DAAO;IAC9C,4DAAM;;;IAHsB,0DAA4B;IAA5B,4IAA4B;IAEhD,0DAA+B;IAA/B,6FAA+B;;;IAEvC,sEAAiC;IAC/B,2EAA0B;IAAA,uDAA2B;;IAAA,4DAAO;IAC5D,uEAAM;IAAA,6DAAE;IAAA,4DAAO;IACf,uEAAM;IAAA,uDAA8B;IAAA,4DAAO;IAC7C,4DAAM;;;IAHsB,0DAA2B;IAA3B,2IAA2B;IAE/C,0DAA8B;IAA9B,4FAA8B;;;IAQpC,2EAGC;IACC,uDACF;;IAAA,4DAAO;;IADL,0DACF;IADE,oJACF;;;IACA,2EAGC;IACC,uDACF;;IAAA,4DAAO;;IADL,0DACF;IADE,qJACF;;;IAKE,uEAAsB;IAAA,6DAAE;IAAA,4DAAO;;;IAHjC,uEAEC;IACC,uJAA+B;IAC/B,uDACF;IAAA,4DAAO;;;;IAFE,0DAAa;IAAb,6EAAa;IACpB,0DACF;IADE,gGACF;;;IAxBF,sEAKC;IACC,gJAKO;IACP,gJAKO;IACP,uEAAM;IAAA,6DAAE;IAAA,4DAAO;IACf,+IAKO;IACT,4DAAM;;;IAlBD,0DAA6C;IAA7C,4GAA6C;IAM7C,0DAA2C;IAA3C,0GAA2C;IAO1B,0DAA+B;IAA/B,kGAA+B;;;;IA5DzD,wEAA+D;IAC7D,0EAAmC;IACjC,sEAAK;IACH,2EAA0B;IAAA,uDAA2B;;IAAA,4DAAO;IAC5D,uEAAM;IAAA,6DAAE;IAAA,4DAAO;IACf,uEAAM;IAAA,uDAAkC;IAAA,4DAAO;IAC/C,wEAAM;IAAC,+DAAE;IAAA,4DAAO;IAChB,wEAAM;IAAA,wDAAmC;IAAA,4DAAO;IAChD,mEAAc;IACd,wEAAM;IAAA,wDAAgC;IAAA,4DAAO;IAC/C,4DAAM;IACN,0IAQM;IACN,yIAIM;IACN,yIAIM;IACN,yIAIM;IACN,yIAIM;IACN,yIAyBM;IACR,4DAAM;IACN,0EAAuB;IACrB,2EAAmB;IACjB,wDACF;;IAAA,4DAAM;IACR,4DAAM;IACN,0EAAuB;IACrB,kFAMC;IAFC,gbAA2C;IAE5C,4DAAa;IAChB,4DAAM;IACN,0EAAuB;IACrB,kFAMC;IAFC,kbAA6C;IAE9C,4DAAa;IAChB,4DAAM;IACR,qEAAe;;;;IAvFiB,0DAA2B;IAA3B,4IAA2B;IAE/C,0DAAkC;IAAlC,gGAAkC;IAElC,0DAAmC;IAAnC,iGAAmC;IAEnC,0DAAgC;IAAhC,8FAAgC;IAElC,0DAAkC;IAAlC,0IAAkC;IASlC,0DAAuB;IAAvB,sFAAuB;IAKvB,0DAAwB;IAAxB,uFAAwB;IAKxB,0DAA0B;IAA1B,yFAA0B;IAK1B,0DAAyB;IAAzB,wFAAyB;IAM5B,0DAGD;IAHC,2IAGD;IAyBA,0DACF;IADE,kMACF;IAIE,0DAAmB;IAAnB,4EAAmB;IASnB,0DAAsB;IAAtB,+EAAsB;;;IAiB9B,qFAGuB;;;IADrB,+FAA+B;;ADrH9B,MAAM,0BAA0B;IAYrC,YACU,KAAa,EACb,YAA4B,EAC5B,yBAA+C,EAC/C,aAA4B,EAC5B,gBAAkC,EAClC,iCAA2D;QAL3D,UAAK,GAAL,KAAK,CAAQ;QACb,iBAAY,GAAZ,YAAY,CAAgB;QAC5B,8BAAyB,GAAzB,yBAAyB,CAAsB;QAC/C,kBAAa,GAAb,aAAa,CAAe;QAC5B,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,sCAAiC,GAAjC,iCAAiC,CAA0B;QAjB7D,SAAI,GAAG,IAAI,6FAAmB,EAAE,CAAC;QAEzC,WAAM,GAAY,IAAI,CAAC;QACvB,YAAO,GAAiB,IAAI,6EAAY,EAAE,CAAC;QAC3C,aAAQ,GAAW,KAAK,CAAC;IActB,CAAC;IAEJ,QAAQ;QACN,MAAM,GAAG,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QAClE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,SAAS,CACrE,CAAC,QAAQ,EAAE,EAAE;YACX,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACzD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;gBACvB,IAAI,CAAC,cAAc,EAAE,CAAC;gBACtB,IAAI,CAAC,gBAAgB,EAAE,CAAC;aACzB;QACH,CAAC,CACF,CAAC;IACJ,CAAC;IAED,cAAc;QACZ,IAAI,CAAC,WAAW,GAAG,IAAI,qDAAS,CAAC;YAC/B,SAAS,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE,EAAE,CAAC;YACtD,cAAc,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC;SACjE,CAAC,CAAC;IACL,CAAC;IAED,MAAM,CAAC,MAA8B;QACnC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClB,qBAAqB;YACrB,MAAM;YACN,IAAI,CAAC,OAAO,CAAC,GAAG;YAChB,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC;IAED,eAAe,CAAC,WAA6B;QAC3C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC;YAClB,qBAAqB;YACrB,MAAM;YACN,IAAI,CAAC,OAAO,CAAC,GAAG;YAChB,SAAS;YACT,MAAM;YACN,WAAW,CAAC,GAAG;SAChB,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,WAA6B;QAC7C,IAAI,CAAC,yBAAyB,CAAC,sBAAsB,CACnD,IAAI,CAAC,OAAO,CAAC,GAAG,EAChB,WAAW,CAAC,GAAG,CAChB,CAAC;IACJ,CAAC;IAED,gBAAgB;QACd,IAAI,MAAM,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;YACzC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC;QACxB,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC;IAC/B,CAAC;IAED,KAAK;QACH,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,iCAAiC;aACjE,UAAU,CAAC;YACV,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;YAC3B,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;YAC3C,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;SAClC,CAAC;aACD,SAAS,CAAC,CAAC,MAA6B,EAAE,EAAE;YAC3C,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,aAAa,CAAC,cAAc,CAC/B,2GAAY,EACZ,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,gBAAgB,CAAC,EAC/C,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,4BAA4B,CAAC,CAC5D,CAAC;gBACF,IAAI,CAAC,OAAO,CAAC,cAAc,GAAG,MAAM,CAAC,cAAc,CAAC;gBACpD,IAAI,CAAC,OAAO,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;gBAE1C,OAAO;gBACP,mBAAmB;gBACnB,IAAI,EAAE,GAIA,EAAE,CAAC;gBACT,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE;oBACzC,EAAE,CAAC,IAAI,CAAC;wBACN,KAAK,EAAE,IAAI,CAAC,SAAS;wBACrB,WAAW,EACT,6EAA6E;wBAC/E,MAAM,EAAE,IAAI,CAAC,MAAM;qBACpB,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;gBACH,IAAI,CAAC,iBAAiB,GAAG;oBACvB,aAAa,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG;oBAC/B,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS;oBACjC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU;oBAC7B,YAAY,EAAE,EAAE;oBAChB,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,MAAM;oBAC3B,cAAc,EAAE,IAAI,CAAC,OAAO,CAAC,cAAc;iBAC5C,CAAC;aACH;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;;oGA/HU,0BAA0B;wHAA1B,0BAA0B,wHAF1B,CAAC,gHAAwB,CAAC;QCpBvC,yEAAuB;QACrB,yEAA4B;QAC1B,gFASC;QAFC,gKAAc,WAAO,SAAS,CAAC,IAAC;;QAEjC,4DAAa;QACd,gFASC;QAFC,gKAAc,WAAO,UAAU,CAAC,IAAC;;QAElC,4DAAa;QAChB,4DAAM;QACN,yEAA2B;QACzB,yEAA4B;QAC1B,yEAAoC;QAClC,uDACF;;QAAA,4DAAM;QACN,0EAAoC;QAClC,wDACF;;QAAA,4DAAM;QACN,0EAAoC;QAClC,wDACF;;QAAA,4DAAM;QACN,0EAAoC;QAClC,wDACF;;QAAA,4DAAM;QACN,4IA0Fe;QACf,0EAA2B;QAAA,wDAAwB;;QAAA,4DAAM;QACzD,0EAAuB;QACrB,wDACF;;QAAA,4DAAM;QACN,qEAA6B;QAC7B,qEAAiC;QACnC,4DAAM;QACR,4DAAM;QACN,uEAAK;QACH,wJAGuB;QACzB,4DAAM;QACN,2EAAqB;QACnB,kFAKC;QADC,iKAAc,YAAQ,IAAC;;QACxB,4DAAa;QACd,kFAKC;QADC,iKAAc,WAAO,IAAC;;QACvB,4DAAa;QAChB,4DAAM;QACR,4DAAM;;QAzJA,0DAAmB;QAAnB,4EAAmB;QAUnB,0DAAmB;QAAnB,4EAAmB;QAajB,0DACF;QADE,4JACF;QAEE,0DACF;QADE,sJACF;QAEE,0DACF;QADE,qJACF;QAEE,0DACF;QADE,uJACF;QACsC,0DAAuB;QAAvB,6FAAuB;QA2FlC,0DAAwB;QAAxB,mJAAwB;QAEjD,0DACF;QADE,4LACF;QAOC,0DAAuB;QAAvB,uFAAuB;QAMxB,0DAA6B;QAA7B,6IAA6B;QAM7B,0DAA4B;QAA5B,4IAA4B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrJa;AAC8B;AACS;AACR;AACxB;AACG;AACJ;AACa;AACyB;AACX;;AAmBzE,MAAM,uBAAuB;;8FAAvB,uBAAuB;oHAAvB,uBAAuB;yHAFvB,EAAE,YAbJ;YACP,yDAAY;YACZ,+FAA8B;YAC9B,wFAAY;YACZ,mEAAc;YACd,gEAAe;YACf,mEAAc;YACd,4EAAkB;YAClB,gEAAmB;YACnB,oGAAuB;YACvB,yFAAoB;SACrB;mIAIU,uBAAuB,mBAhBnB,sFAA0B,aAEvC,yDAAY;QACZ,+FAA8B;QAC9B,wFAAY;QACZ,mEAAc;QACd,gEAAe;QACf,mEAAc;QACd,4EAAkB;QAClB,gEAAmB;QACnB,oGAAuB;QACvB,yFAAoB,aAEZ,sFAA0B;;;;;;;;;;;;;;;;;;;;ACxB6C;;;;;;ICKjF,0EAA+C;IAC7C,uDACF;;IAAA,4DAAM;;;IADJ,0DACF;IADE,sLACF;;;IAKE,0EAGC;IACC,0EAAmB;IAAA,uDAA6B;IAAA,4DAAM;IACtD,0EAAyB;IAAA,uDAAsB;IAAA,4DAAM;IACrD,0EAAoB;IAClB,uDACF;;IAAA,4DAAM;IACR,4DAAM;;;;;IALe,0DAA6B;IAA7B,uGAA6B;IACvB,0DAAsB;IAAtB,oFAAsB;IAE7C,0DACF;IADE,iMACF;;ADXC,MAAM,uBAAuB;IAQlC,YAAoB,eAAmC;QAAnC,oBAAe,GAAf,eAAe,CAAoB;QAP/C,SAAI,GAAG,IAAI,6FAAmB,EAAE,CAAC;QAGzC,WAAM,GAAW,EAAE,CAAC;QACpB,WAAM,GAAW,EAAE,CAAC;QACpB,oBAAe,GAAW,EAAE,CAAC;IAE6B,CAAC;IAE3D,QAAQ;QACN,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,QAAQ,EAAE,EAAE;YACnD,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,eAAe,GAAG,QAAQ,CAAC,cAAc,CAAC,oBAAoB,CAAC;QACtE,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,cAAc;QACZ,OAAO;IACT,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;;8FAzBU,uBAAuB;qHAAvB,uBAAuB,wJAFvB,EAAE;QCTf,yEAAuB;QACrB,yEAAoB;QAClB,uDACF;QAAA,4DAAM;QACN,yEAA4B;QAC1B,uDACF;;QAAA,4DAAM;QACN,mHAEM;QACN,yEAAkB;QAChB,uDACF;;;QAAA,4DAAM;QACN,0EAA2B;QACzB,qHASM;QACR,4DAAM;QACN,0EAAqB;QACnB,0EAA0B;QACxB,wDAEF;;;QAAA,4DAAM;QACN,0EAA6B;QAC3B,wDAGF;;;QAAA,4DAAM;QACN,2EAA0B;QACxB,wDAGF;;;QAAA,4DAAM;QACR,4DAAM;QACN,2EAAoB;QAClB,wDACF;QAAA,4DAAM;QACR,4DAAM;;QA1CF,0DACF;QADE,sFACF;QAEE,0DACF;QADE,gMACF;QACoB,0DAAyB;QAAzB,yFAAyB;QAI3C,0DACF;QADE,+PACF;QAIqB,0DAA2B;QAA3B,+FAA2B;QAW5C,0DAEF;QAFE,wRAEF;QAEE,0DAGF;QAHE,ySAGF;QAEE,0DAGF;QAHE,6TAGF;QAGA,0DACF;QADE,sFACF;;;;;;;;;;;;;;;;;;;;AC1C6C;AACuB;AAChB;;AAO/C,MAAM,oBAAoB;;wFAApB,oBAAoB;iHAApB,oBAAoB;qHAHtB,CAAC,yDAAY,EAAE,gEAAe,CAAC;mIAG7B,oBAAoB,mBAJhB,+EAAuB,aAC5B,yDAAY,EAAE,gEAAe,aAC7B,+EAAuB;;;;;;;;;;;;;;;;;;;;ACPmC;AACxB;AAEqC;AACN;;;AAGtE,MAAM,wBAAwB;IAGnC,YAAoB,UAAqB;QAArB,eAAU,GAAV,UAAU,CAAW;QAFjC,SAAI,GAAG,IAAI,6FAAmB,EAAE,CAAC;IAEG,CAAC;IAE7C,UAAU,CACR,qBAA4C;QAE5C,OAAO,IAAI,4CAAU,CAAC,CAAC,QAA2C,EAAE,EAAE;YACpE,MAAM,MAAM,GAAoB,IAAI,qEAAe,EAAE,CAAC;YACtD,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC;YACrB,MAAM,CAAC,MAAM,GAAG,KAAK,CAAC;YACtB,MAAM,CAAC,IAAI,GAAG;gBACZ,qBAAqB;aACtB,CAAC;YAEF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,UAAU;iBAC9C,IAAI,CAAC,sFAA0B,EAAE,MAAM,CAAC;iBACxC,WAAW,EAAE;iBACb,SAAS,CACR,CAAC,qBAA4C,EAAE,EAAE;gBAC/C,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;gBACrC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,EACD,GAAG,EAAE,CAAC,QAAQ,CAAC,KAAK,EAAE,CACvB,CAAC;QACN,CAAC,CAAC,CAAC;IACL,CAAC;;gGA3BU,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB;;;;;;;;;;;;;;;;;;;;;;;;ACAoC;AACA;AAEU;;;;;;;;;;;ICVjF,0EAAoD;IAClD,yEAAwB;IACtB,yEAAgC;IAC9B,oFAAgC;IAC9B,sEAKE;;IACJ,4DAAiB;IACnB,4DAAM;IACN,yEAAqC;IACnC,iFAAgB;IACd,sEAKE;;IACJ,4DAAiB;IACjB,2EAAgC;IAC9B,kFAKC;IADC,0XAA+D;;IAChE,4DAAa;IACd,kFAKC;IADC,kVAAiC,IAAI,KAAE;IACxC,4DAAa;IACd,kFAKC;IADC,kVAAiC,GAAG,KAAE;IACvC,4DAAa;IACd,kFAKC;IADC,kVAAiC,GAAG,KAAE;IACvC,4DAAa;IAChB,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAO;;;IAjDD,yFAAyB;IAQrB,0DAA2C;IAA3C,iKAA2C;IAU3C,0DAAgD;IAAhD,sKAAgD;IAKhD,0DAA0B;IAA1B,0IAA0B;IAM1B,0DAAgB;IAAhB,yEAAgB;IAMhB,0DAAe;IAAf,wEAAe;IAMf,0DAAe;IAAf,wEAAe;;ADpBpB,MAAM,0BAA0B;IAiBrC,YACU,SAAmD,EAC3B,IAAgB,EACxC,KAAwB;QAFxB,cAAS,GAAT,SAAS,CAA0C;QAC3B,SAAI,GAAJ,IAAI,CAAY;QACxC,UAAK,GAAL,KAAK,CAAmB;QAjB1B,SAAI,GAAwB,IAAI,6FAAmB,EAAE,CAAC;QAmB5D,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC;IAC1D,CAAC;IAdD,IAAI,gBAAgB;QAClB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IAC3C,CAAC;IAED,IAAI,qBAAqB;QACvB,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;IAChD,CAAC;IAUD,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,qDAAS,CAAC;YAC/B,SAAS,EAAE,IAAI,uDAAW,CAAC,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAE,EAAE,CAAC;YACpE,cAAc,EAAE,IAAI,uDAAW,CAC7B,IAAI,CAAC,qBAAqB,CAAC,cAAc,EACzC,EAAE,CACH;SACF,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;IAC7B,CAAC;IAED,kBAAkB,CAAC,KAAa;QAC9B,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QACjD,CAAC,CAAC,KAAK,GAAG,KAAK,GAAG,IAAI,CAAC,qBAAqB,CAAC,MAAM;YACjD,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC;YAC/C,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;IAClC,CAAC;IAEM,aAAa;QAClB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAEM,mBAAmB;QACxB,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1B,CAAC;;oGAxDU,0BAA0B,uMAmB3B,qEAAe;wHAnBd,0BAA0B;QCtBvC,qFAAoB;QAClB,0HAiDO;QACT,4DAAqB;QACrB,qFAAoB;QAClB,gFAKC;QADC,gKAAc,yBAAqB,IAAC;;QACrC,4DAAa;QACd,gFAKC;QADC,gKAAc,mBAAe,IAAC;;QAC/B,4DAAa;QAChB,4DAAqB;;QAhEc,0DAAiB;QAAjB,iFAAiB;QAqDhD,0DAA6B;QAA7B,2IAA6B;QAM7B,0DAA4B;QAA5B,0IAA4B;;;;;;;;;;;;;;;;;;;;;;;;;AC3De;AACY;AACkE;AAC/C;AACxB;AACD;AACa;AACT;;AAgBlD,MAAM,uBAAuB;;8FAAvB,uBAAuB;oHAAvB,uBAAuB;wHAZzB;YACP,yDAAY;YACZ,qEAAe;YACf,wFAAY;YACZ,gEAAe;YACf,+DAAmB;YACnB,4EAAkB;YAClB,mEAAc;SACf;mIAIU,uBAAuB,mBAbnB,uIAA0B,aAEvC,yDAAY;QACZ,qEAAe;QACf,wFAAY;QACZ,gEAAe;QACf,+DAAmB;QACnB,4EAAkB;QAClB,mEAAc,aAEN,uIAA0B","sources":["./src/app/features/invoice-create-edit/invoice-create-edit-routing.module.ts","./src/app/features/invoice-create-edit/invoice-create-edit.component.ts","./src/app/features/invoice-create-edit/invoice-create-edit.component.html","./src/app/features/invoice-create-edit/invoice-create-edit.module.ts","./src/app/features/invoice-create-edit/invoice-printed/invoice-printed.component.ts","./src/app/features/invoice-create-edit/invoice-printed/invoice-printed.component.html","./src/app/features/invoice-create-edit/invoice-printed/invoice-printed.module.ts","./src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup-component.service.ts","./src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup.component.ts","./src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup.component.html","./src/app/features/invoice-create-edit/print-invoice-popup/print-invoice-popup.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { InvoiceCreateEditComponent } from './invoice-create-edit.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: InvoiceCreateEditComponent },\r\n  { path: 'edit/:invoiceOid', component: InvoiceCreateEditComponent },\r\n  {\r\n    path: 'edit/:invoiceOid/framing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/framing/framing.module').then(\r\n        (m) => m.FramingModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'framing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/framing/framing.module').then(\r\n        (m) => m.FramingModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'edit/:invoiceOid/glassing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/glassing/glassing.module').then(\r\n        (m) => m.GlassingModule\r\n      ),\r\n  },\r\n  {\r\n    path: 'glassing',\r\n    loadChildren: () =>\r\n      import('@features/invoice-create-edit/glassing/glassing.module').then(\r\n        (m) => m.GlassingModule\r\n      ),\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class InvoiceCreateEditRoutingModule {}\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl, FormGroup } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MODE } from 'src/app/shared/components/me-basic-alert/me-basic-alert.interface';\r\nimport { InvoiceItemModel } from 'src/app/shared/models/invoice-item.model';\r\nimport {\r\n  AdditionalInformation,\r\n  InvoiceModel,\r\n} from 'src/app/shared/models/invoice-model';\r\nimport { DraftInvoicesService } from 'src/app/shared/services/data-store-services/draft-invoice-items-store.service';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { InvoicePrinted } from './invoice-printed/invoice-printed.interface';\r\nimport { PrintInvoicePopupService } from './print-invoice-popup/print-invoice-popup-component.service';\r\n\r\n@Component({\r\n  selector: 'app-invoice-create-edit',\r\n  templateUrl: './invoice-create-edit.component.html',\r\n  styleUrls: ['./invoice-create-edit.component.scss'],\r\n  providers: [PrintInvoicePopupService],\r\n})\r\nexport class InvoiceCreateEditComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  isEdit: boolean = true;\r\n  invoice: InvoiceModel = new InvoiceModel();\r\n  currency: string = 'din';\r\n\r\n  invoiceForm: FormGroup;\r\n\r\n  // For delete - just temporary\r\n  tempShowForDelete: InvoicePrinted;\r\n\r\n  constructor(\r\n    private route: Router,\r\n    private _activeRoute: ActivatedRoute,\r\n    private draftInvoicesStoreService: DraftInvoicesService,\r\n    private globalService: GlobalService,\r\n    private translateService: TranslateService,\r\n    private printInvoicePopupComponentService: PrintInvoicePopupService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    const oid = this._activeRoute.snapshot.paramMap.get('invoiceOid');\r\n    this.subs.sink = this.draftInvoicesStoreService.draftInvoices.subscribe(\r\n      (invoices) => {\r\n        const invoice = invoices.filter((i) => i.oid === oid)[0];\r\n        if (invoice) {\r\n          this.invoice = invoice;\r\n          this.initializeForm();\r\n          this.setInvoiceAmount();\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  initializeForm(): void {\r\n    this.invoiceForm = new FormGroup({\r\n      buyerName: new FormControl(this.invoice.buyerName, []),\r\n      advancePayment: new FormControl(this.invoice.advancePayment, []),\r\n    });\r\n  }\r\n\r\n  create(action: 'framing' | 'glassing'): void {\r\n    this.route.navigate([\r\n      'invoice-create-edit',\r\n      'edit',\r\n      this.invoice.oid,\r\n      action,\r\n    ]);\r\n  }\r\n\r\n  cancel(): void {\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  editInvoiceItem(invoiceItem: InvoiceItemModel): void {\r\n    this.route.navigate([\r\n      'invoice-create-edit',\r\n      'edit',\r\n      this.invoice.oid,\r\n      'framing',\r\n      'edit',\r\n      invoiceItem.oid,\r\n    ]);\r\n  }\r\n\r\n  deleteInvoiceItem(invoiceItem: InvoiceItemModel): void {\r\n    this.draftInvoicesStoreService.removeDraftInvoiceItem(\r\n      this.invoice.oid,\r\n      invoiceItem.oid\r\n    );\r\n  }\r\n\r\n  setInvoiceAmount(): void {\r\n    let amount = 0;\r\n    this.invoice.invoiceItems.forEach((item) => {\r\n      amount += item.amount;\r\n    });\r\n    this.invoice.amount = amount;\r\n  }\r\n\r\n  print(): void {\r\n    this.subs.sink.printInvoice = this.printInvoicePopupComponentService\r\n      .openDialog({\r\n        amount: this.invoice.amount,\r\n        advancePayment: this.invoice.advancePayment,\r\n        buyerName: this.invoice.buyerName,\r\n      })\r\n      .subscribe((addInf: AdditionalInformation) => {\r\n        if (addInf) {\r\n          this.globalService.showBasicAlert(\r\n            MODE.success,\r\n            this.translateService.instant('invoiceCreated'),\r\n            this.translateService.instant('invoiceSuccessfullyCreated')\r\n          );\r\n          this.invoice.advancePayment = addInf.advancePayment;\r\n          this.invoice.buyerName = addInf.buyerName;\r\n\r\n          // TODO\r\n          // save to database\r\n          let ii: {\r\n            title: string;\r\n            description: string;\r\n            amount: number;\r\n          }[] = [];\r\n          this.invoice.invoiceItems.forEach((item) => {\r\n            ii.push({\r\n              title: item.itemTitle,\r\n              description:\r\n                'Opis stavke asdkljfla skdfjlsdkjf sldkajf lksdj flsdkj afskdj fsdk fjkjlckv',\r\n              amount: item.amount,\r\n            });\r\n          });\r\n          this.tempShowForDelete = {\r\n            invoiceNumber: this.invoice.oid,\r\n            buyerName: this.invoice.buyerName,\r\n            date: this.invoice.createDate,\r\n            invoiceItems: ii,\r\n            amount: this.invoice.amount,\r\n            advancePayment: this.invoice.advancePayment,\r\n          };\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"invoice-header\">\r\n    <app-button\r\n      [iconName]=\"'plus'\"\r\n      [iconPosition]=\"'left'\"\r\n      [fullWidth]=\"true\"\r\n      [text]=\"'framing' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"create('framing')\"\r\n      class=\"button\"\r\n    ></app-button>\r\n    <app-button\r\n      [iconName]=\"'plus'\"\r\n      [iconPosition]=\"''\"\r\n      [fullWidth]=\"true\"\r\n      [text]=\"'glassing' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"create('glassing')\"\r\n      class=\"button\"\r\n    ></app-button>\r\n  </div>\r\n  <div class=\"invoice-items\">\r\n    <div class=\"grid-container\">\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"description\" | translate }}\r\n      </div>\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"price\" | translate }}\r\n      </div>\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"edit\" | translate }}\r\n      </div>\r\n      <div class=\"grid-item table-header\">\r\n        {{ \"delete\" | translate }}\r\n      </div>\r\n      <ng-container *ngFor=\"let invoiceItem of invoice.invoiceItems\">\r\n        <div class=\"grid-item description\">\r\n          <div>\r\n            <span class=\"description\">{{ \"picture\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.dimensions.width }}</span>\r\n            <span> X </span>\r\n            <span>{{ invoiceItem.dimensions.height }}</span>\r\n            <span> </span>\r\n            <span>{{ invoiceItem.dimensions.uom }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.passpartu?.value\">\r\n            <span class=\"description\">{{ \"passpartu\" | translate }}</span>\r\n            <span>:</span>\r\n            <span>{{ invoiceItem.passpartu.value.name }}</span>\r\n            <span>/</span>\r\n            <span>{{ invoiceItem.passpartu.width }}</span>\r\n            <span></span>\r\n            <span>{{ invoiceItem.passpartu.uom }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.glass\">\r\n            <span class=\"description\">{{ \"glass\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.glass.name }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.mirror\">\r\n            <span class=\"description\">{{ \"mirror\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.mirror.name }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.faceting\">\r\n            <span class=\"description\">{{ \"faceting\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.faceting.name }}</span>\r\n          </div>\r\n          <div *ngIf=\"invoiceItem.sanding\">\r\n            <span class=\"description\">{{ \"sanding\" | translate }}</span>\r\n            <span>: </span>\r\n            <span>{{ invoiceItem.sanding.name }}</span>\r\n          </div>\r\n          <div\r\n            *ngIf=\"\r\n              invoiceItem.selectedFrames &&\r\n              invoiceItem.selectedFrames.length > 0\r\n            \"\r\n          >\r\n            <span\r\n              *ngIf=\"invoiceItem.selectedFrames.length === 1\"\r\n              class=\"description\"\r\n            >\r\n              {{ \"frame\" | translate }}\r\n            </span>\r\n            <span\r\n              *ngIf=\"invoiceItem.selectedFrames.length > 1\"\r\n              class=\"description\"\r\n            >\r\n              {{ \"frames\" | translate }}\r\n            </span>\r\n            <span>: </span>\r\n            <span\r\n              *ngFor=\"let frame of invoiceItem.selectedFrames; let ind = index\"\r\n            >\r\n              <span *ngIf=\"ind > 0\">, </span>\r\n              {{ frame.frame.name }}\r\n            </span>\r\n          </div>\r\n        </div>\r\n        <div class=\"grid-item\">\r\n          <div class=\"price\">\r\n            {{ invoiceItem.amount | number: \"1.3-3\" }}{{ currency }}\r\n          </div>\r\n        </div>\r\n        <div class=\"grid-item\">\r\n          <app-button\r\n            [iconName]=\"'edit'\"\r\n            buttonSize=\"small\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"editInvoiceItem(invoiceItem)\"\r\n            class=\"button\"\r\n          ></app-button>\r\n        </div>\r\n        <div class=\"grid-item\">\r\n          <app-button\r\n            [iconName]=\"'trash-2'\"\r\n            buttonSize=\"small\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"deleteInvoiceItem(invoiceItem)\"\r\n            class=\"button\"\r\n          ></app-button>\r\n        </div>\r\n      </ng-container>\r\n      <div class=\"grid-item sum\">{{ \"sum\" | translate }}:</div>\r\n      <div class=\"grid-item\">\r\n        {{ invoice.amount | number: \"1.3-3\" }}{{ currency }}\r\n      </div>\r\n      <div class=\"grid-item\"></div>\r\n      <div class=\"grid-item sum\"></div>\r\n    </div>\r\n  </div>\r\n  <div>\r\n    <app-invoice-printed\r\n      *ngIf=\"tempShowForDelete\"\r\n      [dataModel]=\"tempShowForDelete\"\r\n    ></app-invoice-printed>\r\n  </div>\r\n  <div class=\"buttons\">\r\n    <app-button\r\n      [text]=\"'cancel' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"cancel()\"\r\n    ></app-button>\r\n    <app-button\r\n      [text]=\"'print' | translate\"\r\n      color=\"success\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"print()\"\r\n    ></app-button>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InvoiceCreateEditComponent } from './invoice-create-edit.component';\r\nimport { InvoiceCreateEditRoutingModule } from './invoice-create-edit-routing.module';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { PrintInvoicePopupModule } from './print-invoice-popup/print-invoice-popup.module';\r\nimport { InvoicePrintedModule } from './invoice-printed/invoice-printed.module';\r\n\r\n@NgModule({\r\n  declarations: [InvoiceCreateEditComponent],\r\n  imports: [\r\n    CommonModule,\r\n    InvoiceCreateEditRoutingModule,\r\n    ButtonModule,\r\n    MatInputModule,\r\n    TranslateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    ReactiveFormsModule,\r\n    PrintInvoicePopupModule,\r\n    InvoicePrintedModule,\r\n  ],\r\n  exports: [InvoiceCreateEditComponent],\r\n  providers: [],\r\n})\r\nexport class InvoiceCreateEditModule {}\r\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\r\nimport { AppSettingsService } from 'src/app/shared/services/app-settings.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { InvoicePrinted } from './invoice-printed.interface';\r\n\r\n@Component({\r\n  selector: 'app-invoice-printed',\r\n  templateUrl: './invoice-printed.component.html',\r\n  styleUrls: ['./invoice-printed.component.scss'],\r\n  providers: [],\r\n})\r\nexport class InvoicePrintedComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  @Input() dataModel: InvoicePrinted;\r\n  header: string = '';\r\n  footer: string = '';\r\n  currencyDisplay: string = '';\r\n\r\n  constructor(private settingsService: AppSettingsService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.settingsService.settings.subscribe((settings) => {\r\n      this.header = settings.printSettings.header;\r\n      this.footer = settings.printSettings.footer;\r\n      this.currencyDisplay = settings.formatSettings.currencyDisplayValue;\r\n    });\r\n    this.generateQRCode();\r\n  }\r\n\r\n  generateQRCode(): void {\r\n    // TODO\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"header\">\r\n    {{ header }}\r\n  </div>\r\n  <div class=\"invoice-number\">\r\n    {{ \"invoiceNumber\" | translate }}: {{ dataModel.invoiceNumber }}\r\n  </div>\r\n  <div class=\"buyer\" *ngIf=\"dataModel.buyerName\">\r\n    {{ \"buyer\" | translate }}: {{ dataModel.buyerName }}\r\n  </div>\r\n  <div class=\"date\">\r\n    {{ \"date\" | translate }}: {{ dataModel.date | date: \"dd/MM/yyyy\" }}\r\n  </div>\r\n  <div class=\"invoice-items\">\r\n    <div\r\n      class=\"item\"\r\n      *ngFor=\"let item of dataModel.invoiceItems; let i = index\"\r\n    >\r\n      <div class=\"title\">{{ i + 1 }}. {{ item.title }}</div>\r\n      <div class=\"description\">{{ item.description }}</div>\r\n      <div class=\"amount\">\r\n        {{ item.amount | number: \"1.2-2\" }} {{ currencyDisplay }}\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"amounts\">\r\n    <div class=\"gross-amount\">\r\n      {{ \"total\" | translate }}: {{ dataModel.amount | number: \"1.2-2\" }}\r\n      {{ currencyDisplay }}\r\n    </div>\r\n    <div class=\"advance-payment\">\r\n      {{ \"advancePayment\" | translate }}:\r\n      {{ dataModel.advancePayment | number: \"1.2-2\" }}\r\n      {{ currencyDisplay }}\r\n    </div>\r\n    <div class=\"rest-payment\">\r\n      {{ \"restPayment\" | translate }}:\r\n      {{ dataModel.amount - dataModel.advancePayment | number: \"1.2-2\" }}\r\n      {{ currencyDisplay }}\r\n    </div>\r\n  </div>\r\n  <div class=\"footer\">\r\n    {{ footer }}\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { InvoicePrintedComponent } from './invoice-printed.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [InvoicePrintedComponent],\r\n  imports: [CommonModule, TranslateModule],\r\n  exports: [InvoicePrintedComponent],\r\n})\r\nexport class InvoicePrintedModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { AdditionalInformation } from 'src/app/shared/models/invoice-model';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { PrintInvoicePopupComponent } from './print-invoice-popup.component';\r\n\r\n@Injectable()\r\nexport class PrintInvoicePopupService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(\r\n    additionalInformation: AdditionalInformation\r\n  ): Observable<AdditionalInformation> {\r\n    return new Observable((observer: Subscriber<AdditionalInformation>) => {\r\n      const config: MatDialogConfig = new MatDialogConfig();\r\n      config.width = '80%';\r\n      config.height = '80%';\r\n      config.data = {\r\n        additionalInformation,\r\n      };\r\n\r\n      this.subs.sink.$openSelectPopup = this._matDialog\r\n        .open(PrintInvoicePopupComponent, config)\r\n        .afterClosed()\r\n        .subscribe(\r\n          (additionalInformation: AdditionalInformation) => {\r\n            observer.next(additionalInformation);\r\n            observer.complete();\r\n          },\r\n          () => observer.error()\r\n        );\r\n    });\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { AbstractControl, FormControl, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { AdditionalInformation } from 'src/app/shared/models/invoice-model';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\n\r\nexport interface DialogData {\r\n  additionalInformation: AdditionalInformation;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-print-invoice-popup',\r\n  templateUrl: './print-invoice-popup.component.html',\r\n  styleUrls: ['./print-invoice-popup.component.scss'],\r\n})\r\nexport class PrintInvoicePopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  invoiceForm: FormGroup;\r\n\r\n  public additionalInformation: AdditionalInformation;\r\n\r\n  get buyerNameControl(): AbstractControl | null {\r\n    return this.invoiceForm.get('buyerName');\r\n  }\r\n\r\n  get advancePaymentControl(): AbstractControl | null {\r\n    return this.invoiceForm.get('advancePayment');\r\n  }\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<PrintInvoicePopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.additionalInformation = data.additionalInformation;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.invoiceForm = new FormGroup({\r\n      buyerName: new FormControl(this.additionalInformation.buyerName, []),\r\n      advancePayment: new FormControl(\r\n        this.additionalInformation.advancePayment,\r\n        []\r\n      ),\r\n    });\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  increasePaymentFor(value: number): void {\r\n    const v = this.invoiceForm.get('advancePayment');\r\n    v.value + value > this.additionalInformation.amount\r\n      ? v.setValue(this.additionalInformation.amount)\r\n      : v.setValue(v.value + value);\r\n  }\r\n\r\n  public saveSelection(): void {\r\n    this.dialogRef.close(this.invoiceForm.value);\r\n  }\r\n\r\n  public cancelSaveSelection(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <form [formGroup]=\"invoiceForm\" *ngIf=\"invoiceForm\">\r\n    <div class=\"form-group\">\r\n      <div class=\"element buyer-name\">\r\n        <mat-form-field class=\"element\">\r\n          <input\r\n            matInput\r\n            type=\"text\"\r\n            formControlName=\"buyerName\"\r\n            placeholder=\"{{ 'buyerName' | translate }}\"\r\n          />\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"element advance-payment\">\r\n        <mat-form-field>\r\n          <input\r\n            matInput\r\n            type=\"number\"\r\n            formControlName=\"advancePayment\"\r\n            placeholder=\"{{ 'advancePayment' | translate }}\"\r\n          />\r\n        </mat-form-field>\r\n        <div class=\"additional-buttons\">\r\n          <app-button\r\n            [text]=\"'all' | translate\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(additionalInformation.amount)\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'+1000'\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(1000)\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'+500'\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(500)\"\r\n          ></app-button>\r\n          <app-button\r\n            [text]=\"'+100'\"\r\n            [buttonSize]=\"'small'\"\r\n            [isTransparentMode]=\"true\"\r\n            (clickEvent)=\"increasePaymentFor(100)\"\r\n          ></app-button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <app-button\r\n    [text]=\"'cancel' | translate\"\r\n    color=\"secondary\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"cancelSaveSelection()\"\r\n  ></app-button>\r\n  <app-button\r\n    [text]=\"'print' | translate\"\r\n    color=\"success\"\r\n    [buttonSize]=\"'middle'\"\r\n    (clickEvent)=\"saveSelection()\"\r\n  ></app-button>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { PrintInvoicePopupComponent } from '@features/invoice-create-edit/print-invoice-popup/print-invoice-popup.component';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\n\r\n@NgModule({\r\n  declarations: [PrintInvoicePopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatDialogModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n  ],\r\n  exports: [PrintInvoicePopupComponent],\r\n  entryComponents: [PrintInvoicePopupComponent],\r\n})\r\nexport class PrintInvoicePopupModule {}\r\n"],"names":[],"sourceRoot":"webpack:///"}