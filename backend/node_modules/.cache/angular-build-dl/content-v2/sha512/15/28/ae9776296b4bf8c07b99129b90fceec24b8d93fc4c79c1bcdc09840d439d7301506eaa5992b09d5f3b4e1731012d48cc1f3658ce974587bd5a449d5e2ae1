{"version":3,"mappings":"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","names":["CreateEditComponentService","_matDialog","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_0__","items","isEdit","rxjs__WEBPACK_IMPORTED_MODULE_2__","observer","config","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_3__","data","subs","sink","$openSelectPopup","open","_create_edit_popup_component__WEBPACK_IMPORTED_MODULE_1__","afterClosed","subscribe","item","next","complete","error","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","CreateEditPopupComponent","dialogRef","cdRef","detectChanges","close","setting","unsubscribe","_angular_core__WEBPACK_IMPORTED_MODULE_3__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__","selectors","decls","vars","consts","template","ctx","CreateEditPopupModule","_angular_common__WEBPACK_IMPORTED_MODULE_4__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_0__","_angular_material_dialog__WEBPACK_IMPORTED_MODULE_5__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_6__","src_app_shared_components_form_form_module__WEBPACK_IMPORTED_MODULE_2__","declarations","imports","exports","MapFrameService","rxjs__WEBPACK_IMPORTED_MODULE_1__","subscriber","label","key","value","translateService","instant","type","required","optionalValues","entity","oid","disabled","code","name","uom","pricePerUom","frameWidthMM","cashRegisterNumber","entities","table","header","forEach","push","_map_product_service__WEBPACK_IMPORTED_MODULE_0__","t","MapPasspartuColorService","passpartusStoreService","passSubscription","passpartues","p","passpartu","_angular_core__WEBPACK_IMPORTED_MODULE_2__","MapProductService","rxjs__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_1__","routes","path","component","_product_settings_component__WEBPACK_IMPORTED_MODULE_0__","ProductSettingsRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_2__","_angular_core__WEBPACK_IMPORTED_MODULE_16__","ProductSettingsComponent","_activeRoute","route","createEditComponentService","globalService","mapFrameService","mapProductService","mapPasspartuColorService","frameDataService","glassDataService","passpartuDataService","passpartuColorDataService","facetingDataService","mirrorDataService","sandingDataService","src_app_shared_services_subscription_manager__WEBPACK_IMPORTED_MODULE_2__","productName","snapshot","paramMap","get","mapService","webService","productNameForAlert","productSetings","getTableData","navigate","createEmptyEntity","openDialog","createNewData","createNewEntity","showBasicAlert","src_app_shared_components_me_basic_alert_me_basic_alert_interface__WEBPACK_IMPORTED_MODULE_1__","find","e","mapEntityToFrame","editData","editEntity","features","_features_settings_product_settings_create_edit_popup_create_edit_component_service__WEBPACK_IMPORTED_MODULE_0__","_map_services_map_frame_service__WEBPACK_IMPORTED_MODULE_3__","_map_services_map_passpartu_color_service__WEBPACK_IMPORTED_MODULE_4__","_map_services_map_product_service__WEBPACK_IMPORTED_MODULE_5__","ProductSettingsModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_product_settings_routing_module__WEBPACK_IMPORTED_MODULE_1__","src_app_shared_components_table_show_table_show_module__WEBPACK_IMPORTED_MODULE_2__","_features_settings_product_settings_create_edit_popup_create_edit_popup_module__WEBPACK_IMPORTED_MODULE_3__","src_app_shared_components_button_button_module__WEBPACK_IMPORTED_MODULE_4__","_ngx_translate_core__WEBPACK_IMPORTED_MODULE_7__","PasspartuDataStoreService","baseWebService","kreiraj","_enums_uom_enum__WEBPACK_IMPORTED_MODULE_0__","_base_data_store_service__WEBPACK_IMPORTED_MODULE_1__","providedIn"],"sources":["webpack:///src/app/features/settings/product-settings/create-edit-popup/create-edit-component.service.ts","webpack:///src/app/features/settings/product-settings/create-edit-popup/create-edit-popup.component.ts","webpack:///src/app/features/settings/product-settings/create-edit-popup/create-edit-popup.component.html","webpack:///src/app/features/settings/product-settings/create-edit-popup/create-edit-popup.module.ts","webpack:///src/app/features/settings/product-settings/map-services/map-frame.service.ts","webpack:///src/app/features/settings/product-settings/map-services/map-passpartu-color.service.ts","webpack:///src/app/features/settings/product-settings/map-services/map-product.service.ts","webpack:///src/app/features/settings/product-settings/product-settings-routing.module.ts","webpack:///src/app/features/settings/product-settings/product-settings.component.html","webpack:///src/app/features/settings/product-settings/product-settings.component.ts","webpack:///src/app/features/settings/product-settings/product-settings.module.ts","webpack:///src/app/shared/services/data-store-services/passpartu-data-store.service.ts"],"sourcesContent":["import { KeyValue } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material/dialog';\r\nimport { Observable, Subscriber } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { CreateEditPopupComponent } from './create-edit-popup.component';\r\n\r\n@Injectable()\r\nexport class CreateEditComponentService {\r\n  private subs = new SubscriptionManager();\r\n\r\n  constructor(private _matDialog: MatDialog) {}\r\n\r\n  openDialog(items: Entity[], isEdit: boolean = false): Observable<any> {\r\n    return new Observable(\r\n      (observer: Subscriber<KeyValue<string, string>[]>) => {\r\n        const config: MatDialogConfig = new MatDialogConfig();\r\n\r\n        config.data = {\r\n          items,\r\n          isEdit,\r\n        };\r\n\r\n        this.subs.sink.$openSelectPopup = this._matDialog\r\n          .open(CreateEditPopupComponent, config)\r\n          .afterClosed()\r\n          .subscribe(\r\n            (item: KeyValue<string, string>[]) => {\r\n              observer.next(item);\r\n              observer.complete();\r\n            },\r\n            () => observer.error()\r\n          );\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { KeyValue } from '@angular/common';\r\nimport {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  Inject,\r\n  OnDestroy,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\n\r\nexport interface DialogData {\r\n  items: Entity[];\r\n  isEdit: boolean;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-create-edit-popup',\r\n  templateUrl: './create-edit-popup.component.html',\r\n  styleUrls: ['./create-edit-popup.component.scss'],\r\n})\r\nexport class CreateEditPopupComponent\r\n  implements OnInit, AfterViewInit, OnDestroy\r\n{\r\n  private subs: SubscriptionManager = new SubscriptionManager();\r\n\r\n  items: Entity[] = [];\r\n  isEdit: boolean = false;\r\n\r\n  constructor(\r\n    private dialogRef: MatDialogRef<CreateEditPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\r\n    private cdRef: ChangeDetectorRef\r\n  ) {\r\n    this.items = data.items;\r\n    this.isEdit = !!data.isEdit || false;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.cdRef.detectChanges();\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  submit(setting: any): void {\r\n    this.dialogRef.close(setting);\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","<mat-dialog-content>\r\n  <h1>{{ (isEdit ? \"editYourData\" : \"createNewData\") | translate }}</h1>\r\n  <app-form #form [items]=\"items\"></app-form>\r\n</mat-dialog-content>\r\n<mat-dialog-actions>\r\n  <div class=\"buttons\">\r\n    <app-button\r\n      [text]=\"'cancel' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'middle'\"\r\n      (clickEvent)=\"cancel()\"\r\n    ></app-button>\r\n    <app-button\r\n      [text]=\"'save' | translate\"\r\n      [color]=\"'success'\"\r\n      [buttonSize]=\"'middle'\"\r\n      [disabled]=\"!(form.objectForm.dirty && form.objectForm.valid)\"\r\n      (clickEvent)=\"submit(form.objectForm.value)\"\r\n    ></app-button>\r\n  </div>\r\n</mat-dialog-actions>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { CreateEditPopupComponent } from './create-edit-popup.component';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { FormModule } from 'src/app/shared/components/form/form.module';\r\n\r\n@NgModule({\r\n  declarations: [CreateEditPopupComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ButtonModule,\r\n    MatDialogModule,\r\n    TranslateModule,\r\n    FormModule,\r\n  ],\r\n  exports: [CreateEditPopupComponent],\r\n  entryComponents: [CreateEditPopupComponent],\r\n})\r\nexport class CreateEditPopupModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { FrameModel } from 'src/app/shared/models/frame-model';\r\nimport { MapProductService } from './map-product.service';\r\n\r\n@Injectable()\r\n// implements ProductSettings<FrameModel>\r\nexport class MapFrameService extends MapProductService {\r\n  createEmptyEntity(): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'code', value: this.translateService.instant('code') },\r\n          type: 'string',\r\n          value: '',\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: '',\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('uom') },\r\n          type: 'select',\r\n          value: 'cm',\r\n          optionalValues: [\r\n            { key: 'm', value: 'm' },\r\n            { key: 'cm', value: 'cm' },\r\n            { key: 'mm', value: 'mm' },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('ppUOM'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'frameWidthMM',\r\n            value: this.translateService.instant('fwMM'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('crNum'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  mapEntityToFrame(entity: FrameModel): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'id', value: this.translateService.instant('id') },\r\n          type: 'string',\r\n          value: entity.oid,\r\n          disabled: true,\r\n        },\r\n        {\r\n          label: { key: 'code', value: this.translateService.instant('code') },\r\n          type: 'string',\r\n          value: entity.code,\r\n        },\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: entity.name,\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('UOM') },\r\n          type: 'select',\r\n          value: entity.uom,\r\n          optionalValues: [\r\n            { key: 'm', value: this.translateService.instant('m') },\r\n            { key: 'cm', value: this.translateService.instant('cm') },\r\n            { key: 'mm', value: this.translateService.instant('mm') },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('pricePerUom'),\r\n          },\r\n          type: 'number',\r\n          value: entity.pricePerUom,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'frameWidthMM',\r\n            value: this.translateService.instant('frameWidthMM'),\r\n          },\r\n          type: 'number',\r\n          value: entity.frameWidthMM,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('cashRegisterNumber'),\r\n          },\r\n          type: 'number',\r\n          value: entity.cashRegisterNumber,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  getTableData(entities: FrameModel[]): TableShow {\r\n    let table = {\r\n      header: [\r\n        this.translateService.instant('id'),\r\n        this.translateService.instant('code'),\r\n        this.translateService.instant('name'),\r\n        this.translateService.instant('uom'),\r\n        this.translateService.instant('pricePerUom'),\r\n        this.translateService.instant('frameWidthMM'),\r\n        this.translateService.instant('cashRegisterNumber'),\r\n      ],\r\n      data: [],\r\n    };\r\n    entities.forEach((entity) => {\r\n      table.data.push(entity.oid);\r\n      table.data.push(entity.code);\r\n      table.data.push(entity.name);\r\n      table.data.push(entity.uom);\r\n      table.data.push(entity.pricePerUom);\r\n      table.data.push(entity.frameWidthMM);\r\n      table.data.push(entity.cashRegisterNumber);\r\n    });\r\n    return table;\r\n  }\r\n}\r\n","import { KeyValue } from '@angular/common';\r\nimport { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { PasspartuColorModel } from 'src/app/shared/models/passpartu-color-model';\r\nimport { PasspartuDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-data-store.service';\r\nimport { ProductSettings } from '../product-settings.interface';\r\n\r\n@Injectable()\r\nexport class MapPasspartuColorService\r\n  implements ProductSettings<PasspartuColorModel>\r\n{\r\n  passSubscription: Subscription;\r\n\r\n  constructor(\r\n    private translateService: TranslateService,\r\n    private passpartusStoreService: PasspartuDataStoreService\r\n  ) {}\r\n\r\n  createEmptyEntity(): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      this.passSubscription = this.passpartusStoreService.entities.subscribe(\r\n        (passpartues) => {\r\n          let optionalValues: KeyValue<string, string>[] = [];\r\n          passpartues.forEach((p) => {\r\n            optionalValues.push({\r\n              key: p.oid,\r\n              value:\r\n                p.name +\r\n                ', ' +\r\n                this.translateService.instant('id') +\r\n                ': ' +\r\n                p.oid +\r\n                ', ' +\r\n                this.translateService.instant('ppUom') +\r\n                ': ' +\r\n                p.pricePerUom,\r\n            });\r\n          });\r\n\r\n          let entities: Entity[] = [\r\n            {\r\n              label: {\r\n                key: 'name',\r\n                value: this.translateService.instant('name'),\r\n              },\r\n              type: 'string',\r\n              value: '',\r\n              required: true,\r\n            },\r\n            {\r\n              label: {\r\n                key: 'passpartu',\r\n                value: this.translateService.instant('passpartu'),\r\n              },\r\n              type: 'select',\r\n              value: passpartues[0].oid,\r\n              optionalValues,\r\n              required: true,\r\n            },\r\n          ];\r\n          subscriber.next(entities);\r\n          subscriber.complete();\r\n          this.passSubscription.unsubscribe();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  mapEntityToFrame(entity: PasspartuColorModel): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      this.passSubscription = this.passpartusStoreService.entities.subscribe(\r\n        (passpartues) => {\r\n          let optionalValues: KeyValue<string, string>[] = [];\r\n          passpartues.forEach((p) => {\r\n            optionalValues.push({\r\n              key: p.oid,\r\n              value:\r\n                p.name +\r\n                ', ' +\r\n                this.translateService.instant('id') +\r\n                ': ' +\r\n                p.oid +\r\n                ', ' +\r\n                this.translateService.instant('ppUom') +\r\n                ': ' +\r\n                p.pricePerUom,\r\n            });\r\n          });\r\n\r\n          let entities: Entity[] = [\r\n            {\r\n              label: {\r\n                key: 'id',\r\n                value: this.translateService.instant('id'),\r\n              },\r\n              type: 'string',\r\n              value: entity.oid,\r\n              disabled: true,\r\n            },\r\n            {\r\n              label: {\r\n                key: 'name',\r\n                value: this.translateService.instant('name'),\r\n              },\r\n              type: 'string',\r\n              value: entity.name,\r\n              required: true,\r\n            },\r\n            {\r\n              label: {\r\n                key: 'passpartu',\r\n                value: this.translateService.instant('passpartu'),\r\n              },\r\n              type: 'select',\r\n              value: passpartues[0].oid,\r\n              optionalValues,\r\n              required: true,\r\n            },\r\n          ];\r\n\r\n          subscriber.next(entities);\r\n          subscriber.complete();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  getTableData(entities: PasspartuColorModel[]): TableShow {\r\n    let table = {\r\n      header: [\r\n        this.translateService.instant('id'),\r\n        this.translateService.instant('name'),\r\n        this.translateService.instant('passpartu'),\r\n      ],\r\n      data: [],\r\n    };\r\n    entities.forEach((entity) => {\r\n      table.data.push(entity.oid);\r\n      table.data.push(entity.name);\r\n      table.data.push(entity.passpartu.name);\r\n    });\r\n    return table;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Entity } from 'src/app/shared/components/form/form.component';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { ProductModel } from 'src/app/shared/models/product-model';\r\nimport { ProductSettings } from '../product-settings.interface';\r\n\r\n@Injectable()\r\nexport class MapProductService implements ProductSettings<ProductModel> {\r\n  constructor(public translateService: TranslateService) {}\r\n\r\n  createEmptyEntity(): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: '',\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('uom') },\r\n          type: 'select',\r\n          value: 'cm',\r\n          optionalValues: [\r\n            { key: 'cm', value: 'cm' },\r\n            { key: 'mm', value: 'mm' },\r\n            { key: 'm', value: 'm' },\r\n            { key: 'm2', value: 'm2' },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('ppUOM'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('crNum'),\r\n          },\r\n          type: 'number',\r\n          value: 0,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  mapEntityToFrame(entity: ProductModel): Observable<Entity[]> {\r\n    return new Observable((subscriber) => {\r\n      subscriber.next([\r\n        {\r\n          label: { key: 'id', value: this.translateService.instant('id') },\r\n          type: 'string',\r\n          value: entity.oid,\r\n          disabled: true,\r\n        },\r\n        {\r\n          label: { key: 'name', value: this.translateService.instant('name') },\r\n          type: 'string',\r\n          value: entity.name,\r\n          required: true,\r\n        },\r\n        {\r\n          label: { key: 'uom', value: this.translateService.instant('UOM') },\r\n          type: 'select',\r\n          value: entity.uom,\r\n          optionalValues: [\r\n            { key: 'cm', value: this.translateService.instant('cm') },\r\n            { key: 'mm', value: this.translateService.instant('mm') },\r\n            { key: 'm', value: this.translateService.instant('m') },\r\n            { key: 'm2', value: this.translateService.instant('m2') },\r\n          ],\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'pricePerUom',\r\n            value: this.translateService.instant('pricePerUom'),\r\n          },\r\n          type: 'number',\r\n          value: entity.pricePerUom,\r\n          required: true,\r\n        },\r\n        {\r\n          label: {\r\n            key: 'cashRegisterNumber',\r\n            value: this.translateService.instant('cashRegisterNumber'),\r\n          },\r\n          type: 'number',\r\n          value: entity.cashRegisterNumber,\r\n          required: true,\r\n        },\r\n      ]);\r\n      subscriber.complete();\r\n    });\r\n  }\r\n\r\n  getTableData(entities: ProductModel[]): TableShow {\r\n    let table = {\r\n      header: [\r\n        this.translateService.instant('id'),\r\n        this.translateService.instant('name'),\r\n        this.translateService.instant('uom'),\r\n        this.translateService.instant('pricePerUom'),\r\n        this.translateService.instant('cashRegisterNumber'),\r\n      ],\r\n      data: [],\r\n    };\r\n    entities.forEach((entity) => {\r\n      table.data.push(entity.oid);\r\n      table.data.push(entity.name);\r\n      table.data.push(entity.uom);\r\n      table.data.push(entity.pricePerUom);\r\n      table.data.push(entity.cashRegisterNumber);\r\n    });\r\n    return table;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductSettingsComponent } from './product-settings.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ProductSettingsComponent },\r\n  {\r\n    path: ':productName',\r\n    component: ProductSettingsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProductSettingsRoutingModule {}\r\n","<div class=\"container\">\r\n  <div class=\"header\">\r\n    <app-button\r\n      [text]=\"'cancel' | translate\"\r\n      color=\"secondary\"\r\n      [buttonSize]=\"'small'\"\r\n      (clickEvent)=\"cancel()\"\r\n    ></app-button>\r\n    <app-button\r\n      [text]=\"'createNew' | translate\"\r\n      [color]=\"'success'\"\r\n      [buttonSize]=\"'small'\"\r\n      (clickEvent)=\"createNewData()\"\r\n    ></app-button>\r\n  </div>\r\n  <app-table-show\r\n    [dataModel]=\"table\"\r\n    *ngIf=\"table\"\r\n    (editData)=\"clickEditData($event)\"\r\n  ></app-table-show>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CreateEditComponentService } from '@features/settings/product-settings/create-edit-popup/create-edit-component.service';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { MODE } from 'src/app/shared/components/me-basic-alert/me-basic-alert.interface';\r\nimport { TableShow } from 'src/app/shared/components/table-show/table-show.component';\r\nimport { BaseModel } from 'src/app/shared/models/base-model';\r\nimport { BaseDataStoreService } from 'src/app/shared/services/data-store-services/base-data-store.service';\r\nimport { FacetingDataStoreService } from 'src/app/shared/services/data-store-services/faceting-data-store.service';\r\nimport { FrameDataStoreService } from 'src/app/shared/services/data-store-services/frame-data-store.service';\r\nimport { GlassDataStoreService } from 'src/app/shared/services/data-store-services/glass-data-store.service';\r\nimport { MirrorDataStoreService } from 'src/app/shared/services/data-store-services/mirror-data-store.service';\r\nimport { PasspartuColorDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-color-data-store.service';\r\nimport { PasspartuDataStoreService } from 'src/app/shared/services/data-store-services/passpartu-data-store.service';\r\nimport { SandingDataStoreService } from 'src/app/shared/services/data-store-services/sanding-data-store.service';\r\nimport { GlobalService } from 'src/app/shared/services/global.service';\r\nimport { SubscriptionManager } from 'src/app/shared/services/subscription.manager';\r\nimport { MapFrameService } from './map-services/map-frame.service';\r\nimport { MapPasspartuColorService } from './map-services/map-passpartu-color.service';\r\nimport { MapProductService } from './map-services/map-product.service';\r\nimport { ProductSettings } from './product-settings.interface';\r\n\r\n@Component({\r\n  selector: 'app-product-settings',\r\n  templateUrl: './product-settings.component.html',\r\n  styleUrls: ['./product-settings.component.scss'],\r\n  providers: [\r\n    CreateEditComponentService,\r\n    MapFrameService,\r\n    MapPasspartuColorService,\r\n    MapProductService,\r\n  ],\r\n})\r\nexport class ProductSettingsComponent implements OnInit, OnDestroy {\r\n  private subs = new SubscriptionManager();\r\n\r\n  table: TableShow;\r\n  entities: any[] = [];\r\n  productName: string = '';\r\n  mapService: ProductSettings<BaseModel>;\r\n  webService: BaseDataStoreService<BaseModel>;\r\n  productNameForAlert: string;\r\n\r\n  constructor(\r\n    private _activeRoute: ActivatedRoute,\r\n    private route: Router,\r\n    private createEditComponentService: CreateEditComponentService,\r\n    private globalService: GlobalService,\r\n    private translateService: TranslateService,\r\n\r\n    private mapFrameService: MapFrameService,\r\n    private mapProductService: MapProductService,\r\n    private mapPasspartuColorService: MapPasspartuColorService,\r\n\r\n    private frameDataService: FrameDataStoreService,\r\n    private glassDataService: GlassDataStoreService,\r\n    private passpartuDataService: PasspartuDataStoreService,\r\n    private passpartuColorDataService: PasspartuColorDataStoreService,\r\n    private facetingDataService: FacetingDataStoreService,\r\n    private mirrorDataService: MirrorDataStoreService,\r\n    private sandingDataService: SandingDataStoreService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.productName = this._activeRoute.snapshot.paramMap.get('productName');\r\n    switch (this.productName) {\r\n      case 'frames':\r\n        this.mapService = this.mapFrameService;\r\n        this.webService = this.frameDataService;\r\n        this.productNameForAlert = this.translateService.instant('frame');\r\n        break;\r\n      case 'glass':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.glassDataService;\r\n        this.productNameForAlert = this.translateService.instant('glass');\r\n        break;\r\n      case 'passpartu':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.passpartuDataService;\r\n        this.productNameForAlert = this.translateService.instant('passpartu');\r\n        break;\r\n      case 'passpartuColor':\r\n        this.mapService = this.mapPasspartuColorService;\r\n        this.webService = this.passpartuColorDataService;\r\n        this.productNameForAlert =\r\n          this.translateService.instant('passpartuColor');\r\n        break;\r\n      case 'mirror':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.mirrorDataService;\r\n        this.productNameForAlert = this.translateService.instant('mirror');\r\n        break;\r\n      case 'faceting':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.facetingDataService;\r\n        this.productNameForAlert = this.translateService.instant('faceting');\r\n        break;\r\n      case 'sanding':\r\n        this.mapService = this.mapProductService;\r\n        this.webService = this.sandingDataService;\r\n        this.productNameForAlert = this.translateService.instant('sanding');\r\n        break;\r\n    }\r\n    this.subs.sink.productSetings = this.webService.entities.subscribe(\r\n      (entities) => {\r\n        this.entities = entities;\r\n        this.table = this.mapService.getTableData(entities);\r\n      }\r\n    );\r\n  }\r\n\r\n  cancel(): void {\r\n    this.route.navigate(['settings']);\r\n  }\r\n\r\n  createNewData(): void {\r\n    this.subs.sink = this.mapService\r\n      .createEmptyEntity()\r\n      .subscribe((entities) => {\r\n        this.createEditComponentService\r\n          .openDialog(entities)\r\n          .subscribe((data) => {\r\n            if (data) {\r\n              this.subs.sink.createNewData = this.webService\r\n                .createNewEntity(data)\r\n                .subscribe(() => {\r\n                  this.globalService.showBasicAlert(\r\n                    MODE.success,\r\n                    this.translateService.instant('success'),\r\n                    this.productNameForAlert +\r\n                      ' ' +\r\n                      this.translateService.instant('successfullyCreated')\r\n                  );\r\n                });\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  clickEditData(oid: string): void {\r\n    // TODO\r\n    let entity = this.entities.find((e) => e.oid === oid);\r\n    this.subs.sink = this.mapService\r\n      .mapEntityToFrame(entity)\r\n      .subscribe((entities) => {\r\n        this.subs.sink.editData = this.createEditComponentService\r\n          .openDialog(entities, true)\r\n          .subscribe((data) => {\r\n            if (data) {\r\n              data.oid = oid;\r\n              this.webService.editEntity(data).subscribe(() => {\r\n                this.globalService.showBasicAlert(\r\n                  MODE.success,\r\n                  this.translateService.instant('success'),\r\n                  this.productNameForAlert +\r\n                    ' ' +\r\n                    this.translateService.instant('successfullyEdited')\r\n                );\r\n              });\r\n            }\r\n          });\r\n      });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subs.unsubscribe();\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductSettingsComponent } from './product-settings.component';\r\nimport { ProductSettingsRoutingModule } from './product-settings-routing.module';\r\nimport { TableShowModule } from 'src/app/shared/components/table-show/table-show.module';\r\nimport { CreateEditPopupModule } from '@features/settings/product-settings/create-edit-popup/create-edit-popup.module';\r\nimport { ButtonModule } from 'src/app/shared/components/button/button.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [ProductSettingsComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProductSettingsRoutingModule,\r\n    TableShowModule,\r\n    CreateEditPopupModule,\r\n    ButtonModule,\r\n    TranslateModule,\r\n  ],\r\n  exports: [ProductSettingsComponent],\r\n})\r\nexport class ProductSettingsModule {}\r\n","import { Injectable } from '@angular/core';\r\nimport { UOM } from '../../enums/uom-enum';\r\nimport { ProductModel } from '../../models/product-model';\r\nimport { BaseWebService } from '../web-services/base-web.service';\r\nimport { BaseDataStoreService } from './base-data-store.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PasspartuDataStoreService extends BaseDataStoreService<ProductModel> {\r\n  constructor(public baseWebService: BaseWebService) {\r\n    super(baseWebService, 'passpartu');\r\n    this.kreiraj();\r\n  }\r\n\r\n  kreiraj(): void {\r\n    super\r\n      .createNewEntity({\r\n        oid: '1',\r\n        name: 'Paspartu',\r\n        uom: UOM.METER2,\r\n        pricePerUom: 1590,\r\n        cashRegisterNumber: 182,\r\n      })\r\n      .subscribe();\r\n  }\r\n}\r\n"]}